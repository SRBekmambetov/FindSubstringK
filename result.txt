12 C:\Users\sbekmambetov\Documents\Bandicam\Новый текстовый документ.txt : the
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\com\sybase\orm\util\Util.java :     * @return the same meaning as result of Date.compareTo(Date other)
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\com\sybase\orm\util\Util.java :             Object another = iteratorB.next();
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\com\sybase\orm\util\Util.java :             if (another.equals(object)) found = true;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BankruptcyStage.java :  * Purpose: Defines the Class BankruptcyStage
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BankruptcyStage.java :    public boolean equals(Object other) {
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BankruptcyStage.java :       if (!super.equals(other))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BankruptcyStage.java :       if (!(other instanceof BankruptcyStage))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BankruptcyStage.java :       BankruptcyStage cast = (BankruptcyStage) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Account_91315.java :  * Purpose: Defines the Class Account_91315
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Address.java :  * Purpose: Defines the Class Address
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntity.java :  * Purpose: Defines the Class BusinessPersonEntity
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseBookRef.java :  * Purpose: Defines the Class CaseBookRef
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Agreement.java :  * Purpose: Defines the Class Agreement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Account_91315.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Account_91315.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Account_91315.java :       if (!(other instanceof Account_91315))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Account_91315.java :       Account_91315 cast = (Account_91315) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Agreement.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Agreement.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Agreement.java :       if (!(other instanceof Agreement))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Agreement.java :       Agreement cast = (Agreement) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntity.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntity.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntity.java :       if (!(other instanceof BusinessPersonEntity))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntity.java :       BusinessPersonEntity cast = (BusinessPersonEntity) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseParticipant.java :  * Purpose: Defines the Class CaseParticipant
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Address.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Address.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Address.java :       if (!(other instanceof Address))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Address.java :       Address cast = (Address) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseParticipant.java :    public boolean equals(Object other) {
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseBookRef.java :    public boolean equals(Object other) {
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseBookRef.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseParticipant.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseParticipant.java :       if (!(other instanceof CaseParticipant))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseBookRef.java :       if (!(other instanceof CaseBookRef))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseParticipant.java :       CaseParticipant cast = (CaseParticipant) other;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseBookRef.java :       CaseBookRef cast = (CaseBookRef) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseStage.java :  * Purpose: Defines the Class CaseStage
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseCategory.java :  * Purpose: Defines the Class CaseCategory
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseStage.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseCategory.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseStage.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseCategory.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseStage.java :       if (!(other instanceof CaseStage))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseCategory.java :       if (!(other instanceof CaseCategory))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseStage.java :       CaseStage cast = (CaseStage) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseCategory.java :       CaseCategory cast = (CaseCategory) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseType.java :  * Purpose: Defines the Class CaseType
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseType.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseType.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBCourtCase.java :  * Purpose: Defines the Class CBCourtCase
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBCourtCase.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBCourtCase.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBCourtCase.java :       if (!(other instanceof CBCourtCase))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBCourtCase.java :       CBCourtCase cast = (CBCourtCase) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBArbitrationCase.java :  * Purpose: Defines the Class CBArbitrationCase
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBArbitrationCase.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBArbitrationCase.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBArbitrationCase.java :       if (!(other instanceof CBArbitrationCase))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CBArbitrationCase.java :       CBArbitrationCase cast = (CBArbitrationCase) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblem.java :  * Purpose: Defines the Class ClientCriteriaProblem
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblem.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblem.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblem.java :       if (!(other instanceof ClientCriteriaProblem))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblem.java :       ClientCriteriaProblem cast = (ClientCriteriaProblem) other;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Contact.java :  * Purpose: Defines the Class Contact
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientRating.java :  * Purpose: Defines the Class ClientRating
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ContactOrganization.java :  * Purpose: Defines the Class ContactOrganization
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientRating.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientRating.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientRating.java :       if (!(other instanceof ClientRating))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ClientRating.java :       ClientRating cast = (ClientRating) other;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Contact.java :    public boolean equals(Object other) {
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Contact.java :       if (!super.equals(other))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Contact.java :       if (!(other instanceof Contact))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Contact.java :       Contact cast = (Contact) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Client.java :  * Purpose: Defines the Class Client
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditAgreement.java :  * Purpose: Defines the Class CreditAgreement
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditDebt.java :  * Purpose: Defines the Class CreditDebt
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Client.java :          // Re-assign the value
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Debt.java :  * Purpose: Defines the Class Debt
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Client.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Client.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Client.java :       if (!(other instanceof Client))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Client.java :       Client cast = (Client) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Debt.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Debt.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Debt.java :       if (!(other instanceof Debt))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Debt.java :       Debt cast = (Debt) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Email.java :  * Purpose: Defines the Class Email
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Email.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Email.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Email.java :       if (!(other instanceof Email))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Email.java :       Email cast = (Email) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\IdType.java :  * Purpose: Defines the Class IdType
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Issued_For_case.java :  * Purpose: Defines the Class Issued_For_case
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\IdType.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\IdType.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\IdType.java :       if (!(other instanceof IdType))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\IdType.java :       IdType cast = (IdType) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Issued_For_case.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Issued_For_case.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Issued_For_case.java :       if (!(other instanceof Issued_For_case))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Issued_For_case.java :       Issued_For_case cast = (Issued_For_case) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditDebt.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditDebt.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditDebt.java :       if (!(other instanceof CreditDebt))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditDebt.java :       CreditDebt cast = (CreditDebt) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditAgreement.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditAgreement.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditAgreement.java :       if (!(other instanceof CreditAgreement))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CreditAgreement.java :       CreditAgreement cast = (CreditAgreement) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalEntity.java :  * Purpose: Defines the Class LegalEntity
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalEntity.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalEntity.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalEntity.java :       if (!(other instanceof LegalEntity))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalEntity.java :       LegalEntity cast = (LegalEntity) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseType.java :       if (!(other instanceof CaseType))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\CaseType.java :       CaseType cast = (CaseType) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Limit.java :  * Purpose: Defines the Class Limit
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalOwner.java :  * Purpose: Defines the Class LegalOwner
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalOwner.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalOwner.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalOwner.java :       if (!(other instanceof LegalOwner))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LegalOwner.java :       LegalOwner cast = (LegalOwner) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\KommersantEvent.java :  * Purpose: Defines the Class KommersantEvent
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\KommersantEvent.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\KommersantEvent.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Organization.java :  * Purpose: Defines the Class Organization
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\KommersantEvent.java :       if (!(other instanceof KommersantEvent))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\KommersantEvent.java :       KommersantEvent cast = (KommersantEvent) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Party.java :  * Purpose: Defines the Class Party
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Party.java :          // Re-assign the value
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Phone.java :  * Purpose: Defines the Class Phone
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Phone.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Phone.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Phone.java :       if (!(other instanceof Phone))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Person.java :  * Purpose: Defines the Class Person
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Organization.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Organization.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Organization.java :       if (!(other instanceof Organization))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Organization.java :       Organization cast = (Organization) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Person.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Person.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Party.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Person.java :       if (!(other instanceof Person))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Party.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Person.java :       Person cast = (Person) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Party.java :       if (!(other instanceof Party))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Party.java :       Party cast = (Party) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionAgreement.java :  * Purpose: Defines the Class ProvisionAgreement
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreement.java :  * Purpose: Defines the Class ProvisionOfCreditAgreement
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSB.java :  * Purpose: Defines the Class PublicationsEFRSB
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreement.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreement.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreement.java :       if (!(other instanceof ProvisionOfCreditAgreement))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreement.java :       ProvisionOfCreditAgreement cast = (ProvisionOfCreditAgreement) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSB.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSB.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSB.java :       if (!(other instanceof PublicationsEFRSB))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulation.java :  * Purpose: Defines the Class RefCreditGrantingRegulation
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSB.java :       PublicationsEFRSB cast = (PublicationsEFRSB) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulation.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulation.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulation.java :       if (!(other instanceof RefCreditGrantingRegulation))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulation.java :       RefCreditGrantingRegulation cast = (RefCreditGrantingRegulation) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionAgreement.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionAgreement.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionAgreement.java :       if (!(other instanceof ProvisionAgreement))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ProvisionAgreement.java :       ProvisionAgreement cast = (ProvisionAgreement) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceActivities.java :  * Purpose: Defines the Class ReferenceActivities
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceAddressType.java :  * Purpose: Defines the Class ReferenceAddressType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceActivities.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceAddressType.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceActivities.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceAddressType.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceActivities.java :       if (!(other instanceof ReferenceActivities))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceAddressType.java :       if (!(other instanceof ReferenceAddressType))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceActivities.java :       ReferenceActivities cast = (ReferenceActivities) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceAddressType.java :       ReferenceAddressType cast = (ReferenceAddressType) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructurePK.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructurePK.java :       if (other == null) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructurePK.java :       if (other == this) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructurePK.java :       if (! (other.getClass() ==  getClass()))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructurePK.java :       ReferenceBankStructurePK cast = (ReferenceBankStructurePK) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementType.java :  * Purpose: Defines the Class ReferenceCollateralAgreementType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementType.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementType.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementType.java :       if (!(other instanceof ReferenceCollateralAgreementType))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementType.java :       ReferenceCollateralAgreementType cast = (ReferenceCollateralAgreementType) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCountry.java :  * Purpose: Defines the Class ReferenceCountry
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCountry.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCountry.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCountry.java :       if (!(other instanceof ReferenceCountry))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCountry.java :       ReferenceCountry cast = (ReferenceCountry) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatus.java :  * Purpose: Defines the Class ReferenceCrAgrStatus
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCurrency.java :  * Purpose: Defines the Class ReferenceCurrency
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCurrency.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCurrency.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCurrency.java :       if (!(other instanceof ReferenceCurrency))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCurrency.java :       ReferenceCurrency cast = (ReferenceCurrency) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceEmailType.java :  * Purpose: Defines the Class ReferenceEmailType
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ContactOrganization.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ContactOrganization.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceEmailType.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ContactOrganization.java :       if (!(other instanceof ContactOrganization))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceEmailType.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ContactOrganization.java :       ContactOrganization cast = (ContactOrganization) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceEmailType.java :       if (!(other instanceof ReferenceEmailType))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceEmailType.java :       ReferenceEmailType cast = (ReferenceEmailType) other;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQuality.java :  * Purpose: Defines the Class ReferenceDebtServicingQuality
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQuality.java :    public boolean equals(Object other) {
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQuality.java :       if (!super.equals(other))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQuality.java :       if (!(other instanceof ReferenceDebtServicingQuality))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQuality.java :       ReferenceDebtServicingQuality cast = (ReferenceDebtServicingQuality) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceIndustry.java :  * Purpose: Defines the Class ReferenceIndustry
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceIndustry.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceIndustry.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceIndustry.java :       if (!(other instanceof ReferenceIndustry))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceIndustry.java :       ReferenceIndustry cast = (ReferenceIndustry) other;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLegalForm.java :  * Purpose: Defines the Class ReferenceLegalForm
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLegalForm.java :    public boolean equals(Object other) {
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLegalForm.java :       if (!super.equals(other))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLegalForm.java :       if (!(other instanceof ReferenceLegalForm))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLegalForm.java :       ReferenceLegalForm cast = (ReferenceLegalForm) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatus.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeType.java :  * Purpose: Defines the Class ReferenceLendingModeType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatus.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatus.java :       if (!(other instanceof ReferenceCrAgrStatus))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatus.java :       ReferenceCrAgrStatus cast = (ReferenceCrAgrStatus) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeType.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeType.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeType.java :       if (!(other instanceof ReferenceLendingModeType))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeType.java :       ReferenceLendingModeType cast = (ReferenceLendingModeType) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Phone.java :       Phone cast = (Phone) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructure.java :  * Purpose: Defines the Class ReferenceBankStructure
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructure.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatus.java :  * Purpose: Defines the Class ReferenceLoanAgrStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructure.java :       if (other == null)
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructure.java :       if (other == this)
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructure.java :       if (!(other instanceof ReferenceBankStructure))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructure.java :       ReferenceBankStructure cast = (ReferenceBankStructure) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatus.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatus.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatus.java :       if (!(other instanceof ReferenceLoanAgrStatus))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatus.java :       ReferenceLoanAgrStatus cast = (ReferenceLoanAgrStatus) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfo.java :  * Purpose: Defines the Class LoanBalanceInfo
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategory.java :  * Purpose: Defines the Class ReferenceLoanQualityCategory
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategory.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategory.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategory.java :       if (!(other instanceof ReferenceLoanQualityCategory))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategory.java :       ReferenceLoanQualityCategory cast = (ReferenceLoanQualityCategory) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfo.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfo.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfo.java :       if (!(other instanceof LoanBalanceInfo))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfo.java :       LoanBalanceInfo cast = (LoanBalanceInfo) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceloanType.java :  * Purpose: Defines the Class ReferenceloanType
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Limit.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceloanType.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceloanType.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceloanType.java :       if (!(other instanceof ReferenceloanType))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceloanType.java :       ReferenceloanType cast = (ReferenceloanType) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMemberType.java :  * Purpose: Defines the Class ReferenceMemberType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferencePledgeType.java :  * Purpose: Defines the Class ReferencePledgeType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMemberType.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMemberType.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferencePledgeType.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMemberType.java :       if (!(other instanceof ReferenceMemberType))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferencePledgeType.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMemberType.java :       ReferenceMemberType cast = (ReferenceMemberType) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferencePledgeType.java :       if (!(other instanceof ReferencePledgeType))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferencePledgeType.java :       ReferencePledgeType cast = (ReferencePledgeType) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatus.java :  * Purpose: Defines the Class ReferenceRateStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatus.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatus.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatus.java :       if (!(other instanceof ReferenceRateStatus))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatus.java :       ReferenceRateStatus cast = (ReferenceRateStatus) other;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceResident.java :  * Purpose: Defines the Class ReferenceResident
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceResident.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceSegment.java :  * Purpose: Defines the Class ReferenceSegment
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceResident.java :       if (!super.equals(other))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceResident.java :       if (!(other instanceof ReferenceResident))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussia.java :  * Purpose: Defines the Class ReferenceRegionRussia
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceResident.java :       ReferenceResident cast = (ReferenceResident) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceSegment.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussia.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceSegment.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussia.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceSegment.java :       if (!(other instanceof ReferenceSegment))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussia.java :       if (!(other instanceof ReferenceRegionRussia))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceSegment.java :       ReferenceSegment cast = (ReferenceSegment) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussia.java :       ReferenceRegionRussia cast = (ReferenceRegionRussia) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteria.java :  * Purpose: Defines the Class ReferenceStatusCriteria
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteria.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteria.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteria.java :       if (!(other instanceof ReferenceStatusCriteria))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteria.java :       ReferenceStatusCriteria cast = (ReferenceStatusCriteria) other;
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStreetType.java :  * Purpose: Defines the Class ReferenceStreetType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStreetType.java :    public boolean equals(Object other) {
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStreetType.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonType.java :  * Purpose: Defines the Class ReferenceTelephonType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStreetType.java :       if (!(other instanceof ReferenceStreetType))
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceStreetType.java :       ReferenceStreetType cast = (ReferenceStreetType) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonType.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonType.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonType.java :       if (!(other instanceof ReferenceTelephonType))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonType.java :       ReferenceTelephonType cast = (ReferenceTelephonType) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroup.java :  * Purpose: Defines the Class RelatedBorrowersGroup
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroup.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroup.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroup.java :       if (!(other instanceof RelatedBorrowersGroup))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroup.java :       RelatedBorrowersGroup cast = (RelatedBorrowersGroup) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKind.java :  * Purpose: Defines the Class RefIdentificationDocumentKind
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Reserve.java :  * Purpose: Defines the Class Reserve
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKind.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKind.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKind.java :       if (!(other instanceof RefIdentificationDocumentKind))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKind.java :       RefIdentificationDocumentKind cast = (RefIdentificationDocumentKind) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\SideType.java :  * Purpose: Defines the Class SideType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroup.java :  * Purpose: Defines the Class ReferenceProblemGroup
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMISProduct.java :  * Purpose: Defines the Class ReferenceMISProduct
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Limit.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroup.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroup.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Limit.java :       if (!(other instanceof Limit))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroup.java :       if (!(other instanceof ReferenceProblemGroup))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Limit.java :       Limit cast = (Limit) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroup.java :       ReferenceProblemGroup cast = (ReferenceProblemGroup) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMISProduct.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMISProduct.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMISProduct.java :       if (!(other instanceof ReferenceMISProduct))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\ReferenceMISProduct.java :       ReferenceMISProduct cast = (ReferenceMISProduct) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\SideType.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\SideType.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\SideType.java :       if (!(other instanceof SideType))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\SideType.java :       SideType cast = (SideType) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Reserve.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Reserve.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Reserve.java :       if (!(other instanceof Reserve))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\Reserve.java :       Reserve cast = (Reserve) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessage.java :  * Purpose: Defines the Class TypeOfSourceAndMessage
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessage.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessage.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessage.java :       if (!(other instanceof TypeOfSourceAndMessage))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessage.java :       TypeOfSourceAndMessage cast = (TypeOfSourceAndMessage) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatus.java :  * Purpose: Defines the Class AgreedStatus
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResult.java :  * Purpose: Defines the Class ApplConsiderationResult
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcy.java :  * Purpose: Defines the Class ApplicantForBankruptcy
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatus.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatus.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatus.java :       if (!(other instanceof AgreedStatus))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatus.java :       AgreedStatus cast = (AgreedStatus) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResult.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResult.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResult.java :       if (!(other instanceof ApplConsiderationResult))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResult.java :       ApplConsiderationResult cast = (ApplConsiderationResult) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\BankPosition.java :  * Purpose: Defines the Class BankPosition
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AuPK.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AuPK.java :       if (other == null) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AuPK.java :       if (other == this) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AuPK.java :       if (! (other.getClass() ==  getClass()))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\AuPK.java :       AuPK cast = (AuPK) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcy.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcy.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcy.java :       if (!(other instanceof ApplicantForBankruptcy))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcy.java :       ApplicantForBankruptcy cast = (ApplicantForBankruptcy) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Claim.java :  * Purpose: Defines the Class Claim
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Conclusion.java :  * Purpose: Defines the Class Conclusion
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Bankruptcy.java :  * Purpose: Defines the Class Bankruptcy
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Claim.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Claim.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Claim.java :       if (!(other instanceof Claim))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Claim.java :       Claim cast = (Claim) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Conclusion.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Conclusion.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Conclusion.java :       if (!(other instanceof Conclusion))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Conclusion.java :       Conclusion cast = (Conclusion) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSRO.java :  * Purpose: Defines the Class HistoryOfAUForSRO
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAU.java :  * Purpose: Defines the Class HistoryOfAU
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSRO.java :  * Purpose: Defines the Class HistoryOfSRO
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\BankPosition.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\BankPosition.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSRO.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSRO.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSRO.java :       if (!(other instanceof HistoryOfAUForSRO))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSRO.java :       HistoryOfAUForSRO cast = (HistoryOfAUForSRO) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSRO.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSRO.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSRO.java :       if (!(other instanceof HistoryOfSRO))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSRO.java :       HistoryOfSRO cast = (HistoryOfSRO) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\BankPosition.java :       if (!(other instanceof BankPosition))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\BankPosition.java :       BankPosition cast = (BankPosition) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAU.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAU.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAU.java :       if (!(other instanceof HistoryOfAU))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAU.java :       HistoryOfAU cast = (HistoryOfAU) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciator.java :  * Purpose: Defines the Class MeetingIniciator
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciator.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciator.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciator.java :       if (!(other instanceof MeetingIniciator))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciator.java :       MeetingIniciator cast = (MeetingIniciator) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditors.java :  * Purpose: Defines the Class MeetingOfCreditors
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Au.java :  * Purpose: Defines the Class Au
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcy.java :  * Purpose: Defines the Class PossiblyStageOfBankruptcy
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcy.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcy.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcy.java :       if (!(other instanceof PossiblyStageOfBankruptcy))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcy.java :       PossiblyStageOfBankruptcy cast = (PossiblyStageOfBankruptcy) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Publication.java :  * Purpose: Defines the Class Publication
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :  * Purpose: Defines the Class RationaleForInit
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :    private String otherRationale;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Au.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Au.java :       if (other == null)
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Au.java :       if (other == this)
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Au.java :       if (!(other instanceof Au))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Au.java :       Au cast = (Au) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Bankruptcy.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Bankruptcy.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Bankruptcy.java :       if (!(other instanceof Bankruptcy))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Bankruptcy.java :       Bankruptcy cast = (Bankruptcy) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlct.java :  * Purpose: Defines the Class ReasonedJudgmentSlct
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlct.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlct.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlct.java :       if (!(other instanceof ReasonedJudgmentSlct))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlct.java :       ReasonedJudgmentSlct cast = (ReasonedJudgmentSlct) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeeting.java :  * Purpose: Defines the Class QuestionForMeeting
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :     * Get value of otherRationale
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :     * @return otherRationale 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Publication.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :    public String getOtherRationale()
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Publication.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :       return otherRationale;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditors.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Publication.java :       if (!(other instanceof Publication))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditors.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :     * Set value of otherRationale
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\Publication.java :       Publication cast = (Publication) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :     * @param newOtherRationale 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditors.java :       if (!(other instanceof MeetingOfCreditors))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :    public void setOtherRationale(String newOtherRationale)
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditors.java :       MeetingOfCreditors cast = (MeetingOfCreditors) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :       this.otherRationale = newOtherRationale;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :       if (!(other instanceof RationaleForInit))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestions.java :  * Purpose: Defines the Class ReferenceQuestions
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecision.java :  * Purpose: Defines the Class ReferenceDecision
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecision.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecision.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecision.java :       if (!(other instanceof ReferenceDecision))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecision.java :       ReferenceDecision cast = (ReferenceDecision) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestions.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestions.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestions.java :       if (!(other instanceof ReferenceQuestions))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestions.java :       ReferenceQuestions cast = (ReferenceQuestions) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeeting.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeeting.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeeting.java :       if (!(other instanceof QuestionForMeeting))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgment.java :  * Purpose: Defines the Class RefReasonedJudgment
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeeting.java :       QuestionForMeeting cast = (QuestionForMeeting) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgment.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgment.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgment.java :       if (!(other instanceof RefReasonedJudgment))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgment.java :       RefReasonedJudgment cast = (RefReasonedJudgment) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestion.java :  * Purpose: Defines the Class RefTypeQuestion
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestion.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestion.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestion.java :       if (!(other instanceof RefTypeQuestion))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestion.java :       RefTypeQuestion cast = (RefTypeQuestion) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernment.java :  * Purpose: Defines the Class ReferenceTypeOfGovernment
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernment.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernment.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernment.java :       if (!(other instanceof ReferenceTypeOfGovernment))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernment.java :       ReferenceTypeOfGovernment cast = (ReferenceTypeOfGovernment) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicant.java :  * Purpose: Defines the Class ReferenceBacruptApplicant
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicant.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicant.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicant.java :       if (!(other instanceof ReferenceBacruptApplicant))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicant.java :       ReferenceBacruptApplicant cast = (ReferenceBacruptApplicant) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeet.java :  * Purpose: Defines the Class RefTypeCredMeet
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestOut.java :  * Purpose: Defines the Class RequestOut
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestOut.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestOut.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestOut.java :       if (!(other instanceof RequestOut))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAUPK.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAUPK.java :       if (other == null) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAUPK.java :       if (other == this) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAUPK.java :       if (! (other.getClass() ==  getClass()))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAUPK.java :       SroAUPK cast = (SroAUPK) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestOut.java :       RequestOut cast = (RequestOut) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAU.java :  * Purpose: Defines the Class SroAU
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :       RationaleForInit cast = (RationaleForInit) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :       if (this.otherRationale == null ? cast.getOtherRationale() != this.otherRationale : !this.otherRationale.equals( cast.getOtherRationale()))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :       if (this.otherRationale != null) 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.java :          hashCode = 29 * hashCode + otherRationale.hashCode();
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcy.java :  * Purpose: Defines the Class StageOfBankruptcy
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcy.java :  * Purpose: Defines the Class TypeOfBankruptcy
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcy.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcy.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcy.java :       if (!(other instanceof TypeOfBankruptcy))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcy.java :       TypeOfBankruptcy cast = (TypeOfBankruptcy) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSRO.java :  * Purpose: Defines the Class RequestToCAForSRO
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirements.java :  * Purpose: Defines the Class RegisterCreditorRequirements
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirements.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirements.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirements.java :       if (!(other instanceof RegisterCreditorRequirements))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirements.java :       RegisterCreditorRequirements cast = (RegisterCreditorRequirements) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAU.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAU.java :       if (other == null)
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAU.java :       if (other == this)
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAU.java :       if (!(other instanceof SroAU))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\SroAU.java :       SroAU cast = (SroAU) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeet.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeet.java :  * Purpose: Defines the Class RefStatusOfCredMeet
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeet.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSRO.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeet.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSRO.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeet.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeet.java :       if (!(other instanceof RefTypeCredMeet))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeet.java :       if (!(other instanceof RefStatusOfCredMeet))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSRO.java :       if (!(other instanceof RequestToCAForSRO))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeet.java :       RefTypeCredMeet cast = (RefTypeCredMeet) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSRO.java :       RequestToCAForSRO cast = (RequestToCAForSRO) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeet.java :       RefStatusOfCredMeet cast = (RefStatusOfCredMeet) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcy.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcy.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcy.java :       if (!(other instanceof StageOfBankruptcy))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcy.java :       StageOfBankruptcy cast = (StageOfBankruptcy) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractEntity.java :  * Purpose: Defines the Class AbstractEntity
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractEntityPK.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractEntityPK.java :       if (other == null) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractEntityPK.java :       if (other == this) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractEntityPK.java :       if (! (other.getClass() ==  getClass()))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractEntityPK.java :       AbstractEntityPK cast = (AbstractEntityPK) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractReference.java :  * Purpose: Defines the Class AbstractReference
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\CommentStatement.java :  * Purpose: Defines the Class CommentStatement
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\CommentStatement.java :          // Re-assign the value
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityContainer.java :  * Purpose: Defines the Class ExtIdentityContainer
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\DataAdminOperatorID.java :  * Purpose: Defines the Class DataAdminOperatorID
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\CommentStatement.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\CommentStatement.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\CommentStatement.java :       if (!(other instanceof CommentStatement))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\CommentStatement.java :       CommentStatement cast = (CommentStatement) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityContainer.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityContainer.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityContainer.java :       if (!(other instanceof ExtIdentityContainer))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityContainer.java :       ExtIdentityContainer cast = (ExtIdentityContainer) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\DataAdminOperatorID.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\DataAdminOperatorID.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\DataAdminOperatorID.java :       if (!(other instanceof DataAdminOperatorID))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\DataAdminOperatorID.java :       DataAdminOperatorID cast = (DataAdminOperatorID) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\RefExtIdNamespace.java :  * Purpose: Defines the Class RefExtIdNamespace
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ReferenceDepartment.java :  * Purpose: Defines the Class ReferenceDepartment
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\RefExtIdNamespace.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\RefExtIdNamespace.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\RefExtIdNamespace.java :       if (!(other instanceof RefExtIdNamespace))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\RefExtIdNamespace.java :       RefExtIdNamespace cast = (RefExtIdNamespace) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRefPK.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRefPK.java :       if (other == null) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRefPK.java :       if (other == this) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRefPK.java :       if (! (other.getClass() ==  getClass()))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRefPK.java :       ExtIdentityRefPK cast = (ExtIdentityRefPK) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRef.java :  * Purpose: Defines the Class ExtIdentityRef
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractReferencePK.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractReferencePK.java :       if (other == null) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractReferencePK.java :       if (other == this) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractReferencePK.java :       if (! (other.getClass() ==  getClass()))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\AbstractReferencePK.java :       AbstractReferencePK cast = (AbstractReferencePK) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRef.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRef.java :       if (other == null)
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRef.java :       if (other == this)
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRef.java :       if (!(other instanceof ExtIdentityRef))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ExtIdentityRef.java :       ExtIdentityRef cast = (ExtIdentityRef) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ReferenceDepartment.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ReferenceDepartment.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ReferenceDepartment.java :       if (!(other instanceof ReferenceDepartment))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\core\ReferenceDepartment.java :       ReferenceDepartment cast = (ReferenceDepartment) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\AuthorityKPA.java :  * Purpose: Defines the Class AuthorityKPA
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\Calculation.java :  * Purpose: Defines the Class Calculation
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\AuthorityKPA.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\AuthorityKPA.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\AuthorityKPA.java :       if (!(other instanceof AuthorityKPA))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\AuthorityKPA.java :       AuthorityKPA cast = (AuthorityKPA) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\Calculation.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\Calculation.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\Calculation.java :       if (!(other instanceof Calculation))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\Calculation.java :       Calculation cast = (Calculation) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMaking.java :  * Purpose: Defines the Class DecisionMaking
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMakingFormat.java :  * Purpose: Defines the Class DecisionMakingFormat
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoDecision.java :  * Purpose: Defines the Class KoDecision
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionCategory.java :  * Purpose: Defines the Class KoQuestionCategory
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMakingFormat.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMakingFormat.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMakingFormat.java :       if (!(other instanceof DecisionMakingFormat))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMakingFormat.java :       DecisionMakingFormat cast = (DecisionMakingFormat) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionCategory.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionCategory.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionCategory.java :       if (!(other instanceof KoQuestionCategory))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionCategory.java :       KoQuestionCategory cast = (KoQuestionCategory) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionMaterials.java :  * Purpose: Defines the Class KoQuestionMaterials
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwrite.java :  * Purpose: Defines the Class LevelDecisionOverwrite
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionType.java :  * Purpose: Defines the Class KoQuestionType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionMaterials.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionMaterials.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionMaterials.java :       if (!(other instanceof KoQuestionMaterials))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionMaterials.java :       KoQuestionMaterials cast = (KoQuestionMaterials) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwrite.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwrite.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwrite.java :       if (!(other instanceof LevelDecisionOverwrite))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwrite.java :       LevelDecisionOverwrite cast = (LevelDecisionOverwrite) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionType.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionType.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionType.java :       if (!(other instanceof KoQuestionType))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionType.java :       KoQuestionType cast = (KoQuestionType) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMaking.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMaking.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMaking.java :       if (!(other instanceof DecisionMaking))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\DecisionMaking.java :       DecisionMaking cast = (DecisionMaking) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeight.java :  * Purpose: Defines the Class ReferenceBaseQuestWeight
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActType.java :  * Purpose: Defines the Class ReferenceFinancialMarketsActType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActType.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActType.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActType.java :       if (!(other instanceof ReferenceFinancialMarketsActType))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActType.java :       ReferenceFinancialMarketsActType cast = (ReferenceFinancialMarketsActType) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmail.java :  * Purpose: Defines the Class ReferenceKoSecretaryEmail
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeight.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeight.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeight.java :       if (!(other instanceof ReferenceBaseQuestWeight))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceMaterials.java :  * Purpose: Defines the Class ReferenceMaterials
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeight.java :       ReferenceBaseQuestWeight cast = (ReferenceBaseQuestWeight) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceVND.java :  * Purpose: Defines the Class ReferenceVND
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoDecision.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoDecision.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoDecision.java :       if (!(other instanceof KoDecision))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionServices.java :  * Purpose: Defines the Class KoQuestionServices
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoDecision.java :       KoDecision cast = (KoDecision) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\RiskProfiles.java :  * Purpose: Defines the Class RiskProfiles
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKO.java :  * Purpose: Defines the Class SelectedQuestionsKO
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmail.java :    public boolean equals(Object other) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmail.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionServices.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionServices.java :       if (!super.equals(other))
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmail.java :       if (!(other instanceof ReferenceKoSecretaryEmail))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionServices.java :       if (!(other instanceof KoQuestionServices))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\KoQuestionServices.java :       KoQuestionServices cast = (KoQuestionServices) other;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmail.java :       ReferenceKoSecretaryEmail cast = (ReferenceKoSecretaryEmail) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\RiskProfiles.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\RiskProfiles.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\RiskProfiles.java :       if (!(other instanceof RiskProfiles))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\RiskProfiles.java :       RiskProfiles cast = (RiskProfiles) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SpecialConditions.java :  * Purpose: Defines the Class SpecialConditions
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceMaterials.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceVND.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceMaterials.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceMaterials.java :       if (!(other instanceof ReferenceMaterials))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceVND.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceMaterials.java :       ReferenceMaterials cast = (ReferenceMaterials) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceVND.java :       if (!(other instanceof ReferenceVND))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\ReferenceVND.java :       ReferenceVND cast = (ReferenceVND) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SpecialConditions.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SpecialConditions.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SpecialConditions.java :       if (!(other instanceof SpecialConditions))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SpecialConditions.java :       SpecialConditions cast = (SpecialConditions) other;
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKO.java :    public boolean equals(Object other) {
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKO.java :       if (!super.equals(other))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKO.java :       if (!(other instanceof SelectedQuestionsKO))
21 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKO.java :       SelectedQuestionsKO cast = (SelectedQuestionsKO) other;
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancing.java :  * Purpose: Defines the Class AdditionalFinancing
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancing.java :    public boolean equals(Object other) {
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancing.java :       if (!super.equals(other))
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancing.java :       if (!(other instanceof AdditionalFinancing))
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancing.java :       AdditionalFinancing cast = (AdditionalFinancing) other;
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementTool.java :  * Purpose: Defines the Class AmicableAgreementTool
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreement.java :  * Purpose: Defines the Class AmicableCreditAgreement
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementTool.java :    public boolean equals(Object other) {
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementTool.java :       if (!super.equals(other))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementTool.java :       if (!(other instanceof AmicableAgreementTool))
15 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementTool.java :       AmicableAgreementTool cast = (AmicableAgreementTool) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreement.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreement.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreement.java :       if (!(other instanceof AmicableCreditAgreement))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreement.java :       AmicableCreditAgreement cast = (AmicableCreditAgreement) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalance.java :  * Purpose: Defines the Class BailToBalance
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgr.java :  * Purpose: Defines the Class BailToBalanceCredAgr
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgr.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgr.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgr.java :       if (!(other instanceof BailToBalanceCredAgr))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgr.java :       BailToBalanceCredAgr cast = (BailToBalanceCredAgr) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalance.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalance.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalance.java :       if (!(other instanceof BailToBalance))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalance.java :       BailToBalance cast = (BailToBalance) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreement.java :  * Purpose: Defines the Class CessionCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionTool.java :  * Purpose: Defines the Class CessionTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionTool.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionTool.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionTool.java :       if (!(other instanceof CessionTool))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionTool.java :       CessionTool cast = (CessionTool) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreement.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreement.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreement.java :       if (!(other instanceof CessionCreditAgreement))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreement.java :       CessionCreditAgreement cast = (CessionCreditAgreement) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreement.java :  * Purpose: Defines the Class CompensationCreditAgreement
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreement.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreement.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreement.java :       if (!(other instanceof CompensationCreditAgreement))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreement.java :       CompensationCreditAgreement cast = (CompensationCreditAgreement) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationTool.java :  * Purpose: Defines the Class CompensationTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationTool.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationTool.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationTool.java :       if (!(other instanceof CompensationTool))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\compensation\CompensationTool.java :       CompensationTool cast = (CompensationTool) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatus.java :  * Purpose: Defines the Class ApplicationStatus
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatus.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatus.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatus.java :       if (!(other instanceof ApplicationStatus))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatus.java :       ApplicationStatus cast = (ApplicationStatus) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilAction.java :  * Purpose: Defines the Class CivilAction
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilAction.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilAction.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilAction.java :       if (!(other instanceof CivilAction))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilAction.java :       CivilAction cast = (CivilAction) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCase.java :  * Purpose: Defines the Class CriminalCase
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticle.java :  * Purpose: Defines the Class CriminalCodeArticle
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticle.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticle.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticle.java :       if (!(other instanceof CriminalCodeArticle))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticle.java :       CriminalCodeArticle cast = (CriminalCodeArticle) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCase.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCase.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCase.java :       if (!(other instanceof CriminalCase))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCase.java :       CriminalCase cast = (CriminalCase) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplication.java :  * Purpose: Defines the Class CriminalProsecutionApplication
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplication.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplication.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\Investigator.java :  * Purpose: Defines the Class Investigator
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplication.java :       if (!(other instanceof CriminalProsecutionApplication))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplication.java :       CriminalProsecutionApplication cast = (CriminalProsecutionApplication) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\Investigator.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\Investigator.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\Investigator.java :       if (!(other instanceof Investigator))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\Investigator.java :       Investigator cast = (Investigator) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgency.java :  * Purpose: Defines the Class LawEnforcementAgency
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCase.java :  * Purpose: Defines the Class ReasonEndCriminalCase
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecution.java :  * Purpose: Defines the Class CriminalProsecution
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgency.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgency.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCase.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgency.java :       if (!(other instanceof LawEnforcementAgency))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgency.java :       LawEnforcementAgency cast = (LawEnforcementAgency) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCase.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecution.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCase.java :       if (!(other instanceof ReasonEndCriminalCase))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecution.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecution.java :       if (!(other instanceof CriminalProsecution))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCase.java :       ReasonEndCriminalCase cast = (ReasonEndCriminalCase) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecution.java :       CriminalProsecution cast = (CriminalProsecution) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransfer.java :  * Purpose: Defines the Class DebtTransfer
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransfer.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransfer.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransfer.java :       if (!(other instanceof DebtTransfer))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransfer.java :       DebtTransfer cast = (DebtTransfer) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgr.java :  * Purpose: Defines the Class DebtTransferCredAgr
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgr.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgr.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgr.java :       if (!(other instanceof DebtTransferCredAgr))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgr.java :       DebtTransferCredAgr cast = (DebtTransferCredAgr) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrder.java :  * Purpose: Defines the Class CourtOrder
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrder.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrder.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrder.java :       if (!(other instanceof CourtOrder))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrder.java :       CourtOrder cast = (CourtOrder) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosen.java :  * Purpose: Defines the Class CourtOrderChosen
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosen.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosen.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosen.java :       if (!(other instanceof CourtOrderChosen))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosen.java :       CourtOrderChosen cast = (CourtOrderChosen) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedings.java :  * Purpose: Defines the Class EnforcementProceedings
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgr.java :  * Purpose: Defines the Class EnforceProcCredAgr
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcement.java :  * Purpose: Defines the Class ReasonStopEnforcement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcement.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcement.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcement.java :       if (!(other instanceof ReasonStopEnforcement))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcement.java :       ReasonStopEnforcement cast = (ReasonStopEnforcement) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgr.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgr.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgr.java :       if (!(other instanceof EnforceProcCredAgr))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgr.java :       EnforceProcCredAgr cast = (EnforceProcCredAgr) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedings.java :          // Re-assign the value
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedings.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedings.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedings.java :       if (!(other instanceof EnforcementProceedings))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedings.java :       EnforcementProceedings cast = (EnforcementProceedings) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\InterestRateType.java :  * Purpose: Defines the Class InterestRateType
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\InterestRateType.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\InterestRateType.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\InterestRateType.java :       if (!(other instanceof InterestRateType))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\InterestRateType.java :       InterestRateType cast = (InterestRateType) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreement.java :  * Purpose: Defines the Class CourtCreditAgreement
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreement.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreement.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreement.java :       if (!(other instanceof CourtCreditAgreement))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreement.java :       CourtCreditAgreement cast = (CourtCreditAgreement) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalDocuments.java :  * Purpose: Defines the Class LegalDocuments
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalDocuments.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalDocuments.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalDocuments.java :       if (!(other instanceof LegalDocuments))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalDocuments.java :       LegalDocuments cast = (LegalDocuments) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalRecovery.java :  * Purpose: Defines the Class LegalRecovery
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosen.java :  * Purpose: Defines the Class ProvisionAgreementChosen
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosen.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosen.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosen.java :       if (!(other instanceof ProvisionAgreementChosen))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosen.java :       ProvisionAgreementChosen cast = (ProvisionAgreementChosen) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\Responder.java :  * Purpose: Defines the Class Responder
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\Responder.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalRecovery.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalRecovery.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalRecovery.java :       if (!(other instanceof LegalRecovery))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\Responder.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\LegalRecovery.java :       LegalRecovery cast = (LegalRecovery) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\Responder.java :       if (!(other instanceof Responder))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\judical\Responder.java :       Responder cast = (Responder) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgr.java :  * Purpose: Defines the Class NonJudicialCredAgr
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgr.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgr.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgr.java :       if (!(other instanceof NonJudicialCredAgr))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgr.java :       NonJudicialCredAgr cast = (NonJudicialCredAgr) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryTool.java :  * Purpose: Defines the Class NonJudicialRecoveryTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryTool.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryTool.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryTool.java :       if (!(other instanceof NonJudicialRecoveryTool))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryTool.java :       NonJudicialRecoveryTool cast = (NonJudicialRecoveryTool) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\PaymentOrder.java :  * Purpose: Defines the Class PaymentOrder
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\PaymentOrder.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\PaymentOrder.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\PaymentOrder.java :       if (!(other instanceof PaymentOrder))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\PaymentOrder.java :       PaymentOrder cast = (PaymentOrder) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\Restructure.java :  * Purpose: Defines the Class Restructure
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\Restructure.java :          // Re-assign the value
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreement.java :  * Purpose: Defines the Class RestructureCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\Restructure.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreement.java :          // Re-assign the value
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\Restructure.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\Restructure.java :       if (!(other instanceof Restructure))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\Restructure.java :       Restructure cast = (Restructure) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreement.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreement.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreement.java :       if (!(other instanceof RestructureCreditAgreement))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreement.java :       RestructureCreditAgreement cast = (RestructureCreditAgreement) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\ToolMode.java :  * Purpose: Defines the Class ToolMode
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\ToolMode.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\ToolMode.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\ToolMode.java :       if (!(other instanceof ToolMode))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\ToolMode.java :       ToolMode cast = (ToolMode) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :  * Purpose: Defines the Class UniversalToolDeal
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :    private String otherCondition;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :     * Get value of otherCondition
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :     * @return otherCondition 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :    public String getOtherCondition()
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :       return otherCondition;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :     * Set value of otherCondition
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :     * @param newOtherCondition 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :    public void setOtherCondition(String newOtherCondition)
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :       this.otherCondition = newOtherCondition;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :       if (!(other instanceof UniversalToolDeal))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :       UniversalToolDeal cast = (UniversalToolDeal) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :       if (this.otherCondition == null ? cast.getOtherCondition() != this.otherCondition : !this.otherCondition.equals( cast.getOtherCondition()))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :       if (this.otherCondition != null) 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\UniversalToolDeal.java :          hashCode = 29 * hashCode + otherCondition.hashCode();
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgr.java :  * Purpose: Defines the Class WriteOffCredAgr
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgr.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgr.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgr.java :       if (!(other instanceof WriteOffCredAgr))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgr.java :       WriteOffCredAgr cast = (WriteOffCredAgr) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffTool.java :  * Purpose: Defines the Class WriteOffTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffTool.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffTool.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffTool.java :       if (!(other instanceof WriteOffTool))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffTool.java :       WriteOffTool cast = (WriteOffTool) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModel.java :  * Purpose: Defines the Class CollectionModel
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModel.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModel.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModel.java :       if (!(other instanceof CollectionModel))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModel.java :       CollectionModel cast = (CollectionModel) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModelChangeReason.java :  * Purpose: Defines the Class CollectionModelChangeReason
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModelChangeReason.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModelChangeReason.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModelChangeReason.java :       if (!(other instanceof CollectionModelChangeReason))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\CollectionModelChangeReason.java :       CollectionModelChangeReason cast = (CollectionModelChangeReason) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\BpmUser.java :  * Purpose: Defines the Class BpmUser
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\BpmUser.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\BpmUser.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\BpmUser.java :       if (!(other instanceof BpmUser))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\BpmUser.java :       BpmUser cast = (BpmUser) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGranted.java :  * Purpose: Defines the Class ClaimsGranted
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGranted.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGranted.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGranted.java :       if (!(other instanceof ClaimsGranted))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGranted.java :       ClaimsGranted cast = (ClaimsGranted) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Court.java :  * Purpose: Defines the Class Court
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Court.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Court.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Court.java :       if (!(other instanceof Court))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Court.java :       Court cast = (Court) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCase.java :  * Purpose: Defines the Class CourtCase
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCase.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCase.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCase.java :       if (!(other instanceof CourtCase))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCase.java :       CourtCase cast = (CourtCase) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPM.java :  * Purpose: Defines the Class CourtCaseBPM
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPM.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPM.java :       if (!super.equals(other))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPM.java :       if (!(other instanceof CourtCaseBPM))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstance.java :  * Purpose: Defines the Class CourtInstance
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstance.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstance.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstance.java :       if (!(other instanceof CourtInstance))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstance.java :       CourtInstance cast = (CourtInstance) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecision.java :  * Purpose: Defines the Class CourtDecision
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecision.java :    /** Класс документа: CourtResult (результирующее решение суда) или Other
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecision.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecision.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecision.java :       if (!(other instanceof CourtDecision))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecision.java :       CourtDecision cast = (CourtDecision) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequest.java :  * Purpose: Defines the Class CourtRequest
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPM.java :       CourtCaseBPM cast = (CourtCaseBPM) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Event.java :  * Purpose: Defines the Class Event
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Event.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Event.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Event.java :       if (!(other instanceof Event))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\Event.java :       Event cast = (Event) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\EventType.java :  * Purpose: Defines the Class EventType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\EventType.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\EventType.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\EventType.java :       if (!(other instanceof EventType))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequest.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\EventType.java :       EventType cast = (EventType) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequest.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequest.java :       if (!(other instanceof CourtRequest))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequest.java :       CourtRequest cast = (CourtRequest) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :  * Purpose: Defines the Class ProcessDocument
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :    private String otherDocumentType;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :  * Purpose: Defines the Class RecoveryParams
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :     * Get value of otherDocumentType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :     * @return otherDocumentType 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :    public String getOtherDocumentType()
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :       return otherDocumentType;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :     * Set value of otherDocumentType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :    private int otheramounts;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :     * @param newOtherDocumentType 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :    public void setOtherDocumentType(String newOtherDocumentType)
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :       this.otherDocumentType = newOtherDocumentType;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :     * Get value of otheramounts
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :     * @return otheramounts 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :    public int getOtheramounts()
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :       return otheramounts;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :     * Set value of otheramounts
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategory.java :  * Purpose: Defines the Class RequestCategory
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :     * @param newOtheramounts 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :       if (!(other instanceof ProcessDocument))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :    public void setOtheramounts(int newOtheramounts)
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :       ProcessDocument cast = (ProcessDocument) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :       this.otheramounts = newOtheramounts;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategory.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :       if (this.otherDocumentType == null ? cast.getOtherDocumentType() != this.otherDocumentType : !this.otherDocumentType.equals( cast.getOtherDocumentType()))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategory.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategory.java :       if (!(other instanceof RequestCategory))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :       if (!(other instanceof RecoveryParams))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategory.java :       RequestCategory cast = (RequestCategory) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :       RecoveryParams cast = (RecoveryParams) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :       if (this.otherDocumentType != null) 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.java :          hashCode = 29 * hashCode + otherDocumentType.hashCode();
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :       if (this.otheramounts != cast.getOtheramounts())
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.java :       hashCode = 29 * hashCode + (new Integer(otheramounts)).hashCode();
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatus.java :  * Purpose: Defines the Class RequestStatus
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatus.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatus.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatus.java :       if (!(other instanceof RequestStatus))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatus.java :       RequestStatus cast = (RequestStatus) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubject.java :  * Purpose: Defines the Class RequestSubject
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubject.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubject.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubject.java :       if (!(other instanceof RequestSubject))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubject.java :       RequestSubject cast = (RequestSubject) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestType.java :  * Purpose: Defines the Class RequestType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestType.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestType.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestType.java :       if (!(other instanceof RequestType))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequestType.java :       RequestType cast = (RequestType) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequirementList.java :  * Purpose: Defines the Class RequirementList
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequirementList.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequirementList.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequirementList.java :       if (!(other instanceof RequirementList))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPM.java :  * Purpose: Defines the Class TaskBPM
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\RequirementList.java :       RequirementList cast = (RequirementList) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPM.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPM.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPM.java :       if (!(other instanceof TaskBPM))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPM.java :       TaskBPM cast = (TaskBPM) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroup.java :  * Purpose: Defines the Class DebtorsGroup
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroup.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroup.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroup.java :       if (!(other instanceof DebtorsGroup))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroup.java :       DebtorsGroup cast = (DebtorsGroup) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroupParty.java :  * Purpose: Defines the Class DebtorsGroupParty
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupParty.java :  * Purpose: Defines the Class DebtorsRegToolGroupParty
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroupParty.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroupParty.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroupParty.java :       if (!(other instanceof DebtorsGroupParty))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsGroupParty.java :       DebtorsGroupParty cast = (DebtorsGroupParty) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupParty.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroup.java :  * Purpose: Defines the Class DebtorsRegulationToolGroup
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupParty.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupParty.java :       if (!(other instanceof DebtorsRegToolGroupParty))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupParty.java :       DebtorsRegToolGroupParty cast = (DebtorsRegToolGroupParty) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroup.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroup.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroup.java :       if (!(other instanceof DebtorsRegulationToolGroup))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroup.java :       DebtorsRegulationToolGroup cast = (DebtorsRegulationToolGroup) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUser.java :  * Purpose: Defines the Class EmployeeUser
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUser.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUser.java :       if (other == null)
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUser.java :       if (other == this)
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUser.java :       if (!(other instanceof EmployeeUser))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUser.java :       EmployeeUser cast = (EmployeeUser) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUserPK.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUserPK.java :       if (other == null) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUserPK.java :       if (other == this) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUserPK.java :       if (! (other.getClass() ==  getClass()))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\EmployeeUserPK.java :       EmployeeUserPK cast = (EmployeeUserPK) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\LegalRequest.java :  * Purpose: Defines the Class LegalRequest
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\LegalRequest.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\LegalRequest.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\LegalRequest.java :       if (!(other instanceof LegalRequest))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\LegalRequest.java :       LegalRequest cast = (LegalRequest) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProblemAssetRegulation.java :  * Purpose: Defines the Class ProblemAssetRegulation
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectRoles.java :  * Purpose: Defines the Class ProjectRoles
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectRoles.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectRoles.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectRoles.java :       if (!(other instanceof ProjectRoles))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectRoles.java :       ProjectRoles cast = (ProjectRoles) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectTeamMember.java :  * Purpose: Defines the Class ProjectTeamMember
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProblemAssetRegulation.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProblemAssetRegulation.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProblemAssetRegulation.java :       if (!(other instanceof ProblemAssetRegulation))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProblemAssetRegulation.java :       ProblemAssetRegulation cast = (ProblemAssetRegulation) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegReqService.java :  * Purpose: Defines the Class RefLegReqService
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegReqService.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegReqService.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectTeamMember.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegReqService.java :       if (!(other instanceof RefLegReqService))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegReqService.java :       RefLegReqService cast = (RefLegReqService) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectTeamMember.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectTeamMember.java :       if (!(other instanceof ProjectTeamMember))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ProjectTeamMember.java :       ProjectTeamMember cast = (ProjectTeamMember) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestCategory.java :  * Purpose: Defines the Class RefLegRequestCategory
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestCategory.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestCategory.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestCategory.java :       if (!(other instanceof RefLegRequestCategory))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestCategory.java :       RefLegRequestCategory cast = (RefLegRequestCategory) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestComplexity.java :  * Purpose: Defines the Class RefLegRequestComplexity
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestComplexity.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestComplexity.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestComplexity.java :       if (!(other instanceof RefLegRequestComplexity))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestComplexity.java :       RefLegRequestComplexity cast = (RefLegRequestComplexity) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestPriority.java :  * Purpose: Defines the Class RefLegRequestPriority
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestPriority.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestPriority.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestPriority.java :       if (!(other instanceof RefLegRequestPriority))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestPriority.java :       RefLegRequestPriority cast = (RefLegRequestPriority) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubject.java :  * Purpose: Defines the Class RefLegRequestSubject
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubject.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubject.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubject.java :       if (!(other instanceof RefLegRequestSubject))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubject.java :       RefLegRequestSubject cast = (RefLegRequestSubject) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubType.java :  * Purpose: Defines the Class RefLegRequestSubType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubType.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubType.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubType.java :       if (!(other instanceof RefLegRequestSubType))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestSubType.java :       RefLegRequestSubType cast = (RefLegRequestSubType) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestType.java :  * Purpose: Defines the Class RefLegRequestType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestType.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestType.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestType.java :       if (!(other instanceof RefLegRequestType))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefLegRequestType.java :       RefLegRequestType cast = (RefLegRequestType) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefRegTaskState.java :  * Purpose: Defines the Class RefRegTaskState
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefRegTaskState.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefRegTaskState.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefRegTaskState.java :       if (!(other instanceof RefRegTaskState))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefRegTaskState.java :       RefRegTaskState cast = (RefRegTaskState) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDep.java :  * Purpose: Defines the Class RefReqSpecDep
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDep.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDep.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDep.java :       if (!(other instanceof RefReqSpecDep))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDep.java :       RefReqSpecDep cast = (RefReqSpecDep) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDepType.java :  * Purpose: Defines the Class RefReqSpecDepType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDepType.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDepType.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDepType.java :       if (!(other instanceof RefReqSpecDepType))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqSpecDepType.java :       RefReqSpecDepType cast = (RefReqSpecDepType) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPV.java :  * Purpose: Defines the Class RefReqStatusBpmPoUPV
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPV.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPV.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPV.java :       if (!(other instanceof RefReqStatusBpmPoUPV))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPV.java :       RefReqStatusBpmPoUPV cast = (RefReqStatusBpmPoUPV) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPo.java :  * Purpose: Defines the Class RefReqStatusesBpmPo
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPo.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPo.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPo.java :       if (!(other instanceof RefReqStatusesBpmPo))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPo.java :       RefReqStatusesBpmPo cast = (RefReqStatusesBpmPo) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlock.java :  * Purpose: Defines the Class RegPlanBlock
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlockType.java :  * Purpose: Defines the Class RegPlanBlockType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlockType.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlockType.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlockType.java :       if (!(other instanceof RegPlanBlockType))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlockType.java :       RegPlanBlockType cast = (RegPlanBlockType) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlock.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlock.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlock.java :       if (!(other instanceof RegPlanBlock))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanBlock.java :       RegPlanBlock cast = (RegPlanBlock) other;
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanTask.java :  * Purpose: Defines the Class RegPlanTask
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegTaskTemplate.java :  * Purpose: Defines the Class RegTaskTemplate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanTask.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanTask.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanTask.java :       if (!(other instanceof RegPlanTask))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegPlanTask.java :       RegPlanTask cast = (RegPlanTask) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegTaskTemplate.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegTaskTemplate.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegTaskTemplate.java :       if (!(other instanceof RegTaskTemplate))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegTaskTemplate.java :       RegTaskTemplate cast = (RegTaskTemplate) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationPlan.java :  * Purpose: Defines the Class RegulationPlan
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationPlan.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationPlan.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationPlan.java :       if (!(other instanceof RegulationPlan))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationPlan.java :       RegulationPlan cast = (RegulationPlan) other;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationTool.java :  * Purpose: Defines the Class RegulationTool
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Scenario.java :  * Purpose: Defines the Class Scenario
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\SpecDepRequest.java :  * Purpose: Defines the Class SpecDepRequest
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\SpecDepRequest.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\SpecDepRequest.java :       if (!super.equals(other))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\SpecDepRequest.java :       if (!(other instanceof SpecDepRequest))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\SpecDepRequest.java :       SpecDepRequest cast = (SpecDepRequest) other;
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Stage.java :  * Purpose: Defines the Class Stage
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationTool.java :    public boolean equals(Object other) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationTool.java :       if (!super.equals(other))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationTool.java :       if (!(other instanceof RegulationTool))
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\RegulationTool.java :       RegulationTool cast = (RegulationTool) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Scenario.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Scenario.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Scenario.java :       if (!(other instanceof Scenario))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Stage.java :    public boolean equals(Object other) {
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Stage.java :       if (!super.equals(other))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Stage.java :       if (!(other instanceof Stage))
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Stage.java :       Stage cast = (Stage) other;
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Strategy.java :  * Purpose: Defines the Class Strategy
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Strategy.java :    public boolean equals(Object other) {
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Strategy.java :       if (!super.equals(other))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Strategy.java :       if (!(other instanceof Strategy))
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Strategy.java :       Strategy cast = (Strategy) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Scenario.java :       Scenario cast = (Scenario) other;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskPK.java :    public boolean equals(Object other) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskPK.java :       if (other == null) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskPK.java :       if (other == this) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskPK.java :       if (! (other.getClass() ==  getClass()))
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskPK.java :       TaskPK cast = (TaskPK) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Task.java :  * Purpose: Defines the Class Task
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskType.java :  * Purpose: Defines the Class TaskType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskType.java :    public boolean equals(Object other) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskType.java :       if (!super.equals(other))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskType.java :       if (!(other instanceof TaskType))
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\TaskType.java :       TaskType cast = (TaskType) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Task.java :    public boolean equals(Object other) {
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Task.java :       if (other == null)
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Task.java :       if (other == this)
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Task.java :       if (!(other instanceof Task))
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\Task.java :       Task cast = (Task) other;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ToolType.java :  * Purpose: Defines the Class ToolType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ToolType.java :    public boolean equals(Object other) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ToolType.java :       if (!super.equals(other))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ToolType.java :       if (!(other instanceof ToolType))
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\main\java\ru\sbrf\uvz\model\process\ToolType.java :       ToolType cast = (ToolType) other;
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :     * Holds the reference to the exception or error caught in data access. 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :     * @param msg the error message
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :     * @param cause the exception or error caught
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :     * @param msg   the error message
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :     * @param cause the exception or error that caused this exception to be thrown
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :     * Returns the detail message string of this throwable. If it was created with a 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :     * null message, returns the following:
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\dao\DaoException.java :           // Flush the PrintWriter before it's GC'ed.
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\ejb3\EJB3PersistenceManager.java :     * @param createEntityManager  whether to create new entity manager if none found
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\com\sybase\orm\ejb3\EJB3PersistenceManager.java :     * Rollback transaction associated with current thread. Close entity manager in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :  * Purpose: Defines test class to test the peristence of class Account_91315
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :  * Test case class to test the persistence of Account_91315
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315TestHelper.java :  * Purpose: Defines the test helper class for class Account_91315
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :  * Purpose: Defines test class to test the peristence of class Address
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :  * Test case class to test the persistence of Address
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTestHelper.java :  * Purpose: Defines the test helper class for class Address
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * Test object delete. Create a <Code>Account_91315</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * their attribute <Code>calculationDate</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * by DAO's <tt>findByCalculationDate</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * Test object delete. Create a <Code>Address</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :      // Create Account_91315 instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * Test function getAccount_91315List. Create multiple <Code>Account_91315</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * Query all intances by DAO's <tt>doGetAccount_91315List</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>zip</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByZip</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       // Create multiple Account_91315 instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>area</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByArea</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>city</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       Account_91315 anotherAccount_91315 = dao.load(account_91315.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByCity</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :          account_91315, anotherAccount_91315);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       Account_91315TestHelper.delete(anotherAccount_91315);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>populatedArea</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByPopulatedArea</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       Account_91315 another = dao.load(account_91315.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       assertEquals("Queried result does not equal to updated instance", account_91315, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       Account_91315TestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>street</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByStreet</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :  * Purpose: Defines test class to test the peristence of class Agreement
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :  * Test case class to test the persistence of Agreement
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>house</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByHouse</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       Account_91315 another = dao.load(account_91315.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * and set their attribute calculationDate to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>building</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByBuilding</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :       // Create instances and set their property calculationDate to value calculationDate
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>housing</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * Test object delete. Create a <Code>Agreement</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByHousing</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * their attribute <Code>agreementNumber</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * by DAO's <tt>findByAgreementNumber</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>office</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByOffice</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :      // Create Agreement instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :             Account_91315 another = Account_91315TestHelper.getAccount_91315ByPk(resultFound, account_91315.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTestHelper.java :  * Purpose: Defines the test helper class for class Agreement
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * Test function getAgreementList. Create multiple <Code>Agreement</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :  * Purpose: Defines test class to test the peristence of class BankruptcyStage
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :             assertEquals("Result returned by find-by-calculationDate does not equal to inserted account_91315 object.", account_91315, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * Query all intances by DAO's <tt>doGetAgreementList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :             Account_91315TestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>ay</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByAy</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :  * Test case class to test the persistence of BankruptcyStage
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>fullAddress</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByFullAddress</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :             Account_91315 another = Account_91315TestHelper.getAccount_91315ByPk(resultFound, account_91315.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>activeAdress</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :             assertEquals("Result returned by get-account_91315-list does not equal to inserted account_91315 object.", account_91315, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :     * Test object delete. Create a <Code>BankruptcyStage</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :             Account_91315TestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByActiveAdress</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :     * Test function getBankruptcyStageList. Create multiple <Code>BankruptcyStage</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :     * Query all intances by DAO's <tt>doGetBankruptcyStageList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Account_91315Test.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>isMainAddress</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByIsMainAddress</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       // Create multiple BankruptcyStage instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * their attribute <Code>fullAddressWithoutZIP</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * by DAO's <tt>findByFullAddressWithoutZIP</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       // Create multiple Agreement instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :  * Purpose: Defines test class to test the peristence of class BusinessPersonEntity
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :      // Create Address instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       BankruptcyStage anotherBankruptcyStage = dao.load(bankruptcyStage.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :          bankruptcyStage, anotherBankruptcyStage);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       BankruptcyStageTestHelper.delete(anotherBankruptcyStage);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * Test function getAddressList. Create multiple <Code>Address</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * Query all intances by DAO's <tt>doGetAddressList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create multiple Address instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       BankruptcyStage another = dao.load(bankruptcyStage.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       assertEquals("Queried result does not equal to updated instance", bankruptcyStage, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       BankruptcyStageTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       Address anotherAddress = dao.load(address.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :          address, anotherAddress);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       AddressTestHelper.delete(anotherAddress);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTestHelper.java :  * Purpose: Defines the test helper class for class BusinessPersonEntity
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       BankruptcyStage another = dao.load(bankruptcyStage.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       Address another = dao.load(address.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :  * Purpose: Defines test class to test the peristence of class CaseBookRef
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       assertEquals("Queried result does not equal to updated instance", address, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       AddressTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :  * Test case class to test the persistence of CaseBookRef
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       Address another = dao.load(address.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute zip to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property zip to value zip
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :             BankruptcyStage another = BankruptcyStageTestHelper.getBankruptcyStageByPk(resultFound, bankruptcyStage.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :             assertEquals("Result returned by get-bankruptcyStage-list does not equal to inserted bankruptcyStage object.", bankruptcyStage, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :             BankruptcyStageTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * Test object delete. Create a <Code>CaseBookRef</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-zip does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * and its subclasses. Save them into database and query all <Code>Agreement</Code> instances from 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BankruptcyStageTestHelper.java :  * Purpose: Defines the test helper class for class BankruptcyStage
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       // Create instances of Agreement and its subclasses. Save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       Agreement anotherAgreement = dao.load(agreement.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :          agreement, anotherAgreement);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       AgreementTestHelper.delete(anotherAgreement);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTestHelper.java :  * Purpose: Defines the test helper class for class CaseBookRef
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       Agreement another = dao.load(agreement.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       assertEquals("Queried result does not equal to updated instance", agreement, another);  
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       AgreementTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       Agreement another = dao.load(agreement.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :  * Purpose: Defines test class to test the peristence of class CaseCategory
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * and set their attribute agreementNumber to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :  * Test case class to test the persistence of CaseCategory
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       // Create instances and set their property agreementNumber to value agreementNumber
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTestHelper.java :  * Purpose: Defines the test helper class for class CaseCategory
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :             Agreement another = AgreementTestHelper.getAgreementByPk(resultFound, agreement.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :             assertEquals("Result returned by find-by-agreementNumber does not equal to inserted agreement object.", agreement, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :             AgreementTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :     * Test object delete. Create a <Code>CaseCategory</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :  * Test case class to test the persistence of BusinessPersonEntity
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :             Agreement another = AgreementTestHelper.getAgreementByPk(resultFound, agreement.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :             assertEquals("Result returned by get-agreement-list does not equal to inserted agreement object.", agreement, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :             AgreementTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute area to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * their attribute <Code>effectiveTo</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * by DAO's <tt>findByEffectiveTo</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :  * Purpose: Defines test class to test the peristence of class CaseParticipant
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       Agreement anotherAgreement = dao.load(agreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :      // Create CaseBookRef instances and save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       assertNotNull("Query result is null", anotherAgreement);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       // if the association's cascade is set to all, save-update
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :       java.util.Collection agreementID_in_Systems = anotherAgreement.getAgreementID_in_Systems();
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :  * Test case class to test the persistence of CaseParticipant
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * their attribute <Code>code</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :        AgreementTestHelper.delete(anotherAgreement);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * by DAO's <tt>findByCode</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * subclasses. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :      // Create CaseBookRef instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTestHelper.java :  * Purpose: Defines the test helper class for class CaseParticipant
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * their attribute <Code>name</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * by DAO's <tt>findByName</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :      // Create CaseBookRef instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :     * Test object delete. Create a <Code>CaseParticipant</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * their attribute <Code>effectiveFrom</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * Test object delete. Create a <Code>BusinessPersonEntity</Code> instance and save it into database. Delete the 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :          Agreement anotherAgreement  = AgreementTestHelper.getAgreementByPk(resultList, agreement.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property area to value area
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", agreement, anotherAgreement);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>fullName</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByFullName</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>surname</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findBySurname</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :     * Test function getCaseCategoryList. Create multiple <Code>CaseCategory</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :     * Query all intances by DAO's <tt>doGetCaseCategoryList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       // Create multiple CaseCategory instance and insert them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherAgreement)));
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-area does not equal to inserted address object.", address, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :          AgreementTestHelper.delete(anotherAgreement);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute city to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property city to value city
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :  * Purpose: Defines test class to test the peristence of class CaseStage
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       CaseCategory anotherCaseCategory = dao.load(caseCategory.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :          caseCategory, anotherCaseCategory);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       CaseCategoryTestHelper.delete(anotherCaseCategory);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>name</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * by DAO's <tt>findByEffectiveFrom</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :     * Test function getCaseParticipantList. Create multiple <Code>CaseParticipant</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :      // Create CaseBookRef instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :     * Query all intances by DAO's <tt>doGetCaseParticipantList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * their attribute <Code>loadDate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * by DAO's <tt>findByLoadDate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :      // Create CaseBookRef instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       // Create multiple CaseParticipant instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       CaseParticipant anotherCaseParticipant = dao.load(caseParticipant.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :          caseParticipant, anotherCaseParticipant);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       CaseParticipantTestHelper.delete(anotherCaseParticipant);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * Test function getCaseBookRefList. Create multiple <Code>CaseBookRef</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * Query all intances by DAO's <tt>doGetCaseBookRefList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       // Create multiple CaseBookRef instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       CaseParticipant another = dao.load(caseParticipant.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       assertEquals("Queried result does not equal to updated instance", caseParticipant, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       CaseParticipantTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * and its subclasses. Save them into database and query all <Code>CaseBookRef</Code> instances from 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       // Create instances of CaseBookRef and its subclasses. Save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTestHelper.java :  * Purpose: Defines the test helper class for class CaseStage
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       CaseParticipant another = dao.load(caseParticipant.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       CaseBookRef anotherCaseBookRef = dao.load(caseBookRef.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :          caseBookRef, anotherCaseBookRef);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       CaseBookRefTestHelper.delete(anotherCaseBookRef);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByName</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       CaseCategory another = dao.load(caseCategory.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-city does not equal to inserted address object.", address, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :             CaseParticipant another = CaseParticipantTestHelper.getCaseParticipantByPk(resultFound, caseParticipant.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       assertEquals("Queried result does not equal to updated instance", caseCategory, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       CaseCategoryTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :             assertEquals("Result returned by get-caseParticipant-list does not equal to inserted caseParticipant object.", caseParticipant, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :             CaseParticipantTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute populatedArea to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>patronymic</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByPatronymic</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property populatedArea to value populatedArea
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseParticipantTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :  * Purpose: Defines test class to test the peristence of class LegalEntity
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>documentSeries</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByDocumentSeries</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :  * Test case class to test the persistence of CaseStage
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       CaseCategory another = dao.load(caseCategory.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-populatedArea does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute street to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :     * Test object delete. Create a <Code>CaseStage</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property street to value street
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :     * Test function getCaseStageList. Create multiple <Code>CaseStage</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :     * Query all intances by DAO's <tt>doGetCaseStageList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       // Create multiple CaseStage instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :             CaseCategory another = CaseCategoryTestHelper.getCaseCategoryByPk(resultFound, caseCategory.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :             assertEquals("Result returned by get-caseCategory-list does not equal to inserted caseCategory object.", caseCategory, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :  * Purpose: Defines test class to test the peristence of class CaseType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :             CaseCategoryTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :  * Test case class to test the persistence of CaseType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseCategoryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-street does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute house to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :     * Test object delete. Create a <Code>CaseType</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property house to value house
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :  * Test case class to test the persistence of LegalEntity
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :      // Create LegalEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :      // Create LegalEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :      // Create LegalEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :      // Create LegalEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       // Create multiple LegalEntity instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       LegalEntity anotherLegalEntity = dao.load(legalEntity.getAbstractEntityPK());
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :          legalEntity, anotherLegalEntity);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       LegalEntityTestHelper.delete(anotherLegalEntity);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>documentNumber</Code> to specified value. Save these instances into database and query them 
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       LegalEntity another = dao.load(legalEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByDocumentNumber</tt> method. Verify if the method can find all instances saved before.
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       assertEquals("Queried result does not equal to updated instance", legalEntity, another);  
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       LegalEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       LegalEntity another = dao.load(legalEntity.getAbstractEntityPK());
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>issueOrganization</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByIssueOrganization</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>issueDate</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByIssueDate</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       // Create instances and set their property name to value name
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>issuePlace</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findByIssuePlace</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :  * Purpose: Defines test class to test the peristence of class CBArbitrationCase
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTestHelper.java :  * Purpose: Defines the test helper class for class CaseType
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             assertEquals("Result returned by find-by-name does not equal to inserted legalEntity object.", legalEntity, another);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntityTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :  * Test case class to test the persistence of CBArbitrationCase
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       CaseBookRef another = dao.load(caseBookRef.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * their attribute <Code>serNumOfDoc</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * by DAO's <tt>findBySerNumOfDoc</tt> method. Verify if the method can find all instances saved before.
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       // Create instances and set their property shortname to value shortname
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :      // Create BusinessPersonEntity instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * Test function getBusinessPersonEntityList. Create multiple <Code>BusinessPersonEntity</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * Query all intances by DAO's <tt>doGetBusinessPersonEntityList</tt> method. Verify if the method can find all 
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             assertEquals("Result returned by find-by-shortname does not equal to inserted legalEntity object.", legalEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create multiple BusinessPersonEntity instance and insert them into database
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntityTestHelper.delete(another);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       // Create instances and set their property kpp to value kpp
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             assertEquals("Result returned by find-by-kpp does not equal to inserted legalEntity object.", legalEntity, another);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntityTestHelper.delete(another);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :       // Create instances and set their property branch to value branch
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       BusinessPersonEntity anotherBusinessPersonEntity = dao.load(businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :          businessPersonEntity, anotherBusinessPersonEntity);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       BusinessPersonEntityTestHelper.delete(anotherBusinessPersonEntity);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTestHelper.java :  * Purpose: Defines the test helper class for class CBArbitrationCase
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             assertEquals("Result returned by find-by-branch does not equal to inserted legalEntity object.", legalEntity, another);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntityTestHelper.delete(another);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       BusinessPersonEntity another = dao.load(businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       assertEquals("Queried result does not equal to updated instance", businessPersonEntity, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       CaseStage anotherCaseStage = dao.load(caseStage.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       BusinessPersonEntityTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :          caseStage, anotherCaseStage);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       CaseStageTestHelper.delete(anotherCaseStage);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       BusinessPersonEntity another = dao.load(businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       assertNull("Inserted instance is not deleted", another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       CaseStage another = dao.load(caseStage.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       assertEquals("Queried result does not equal to updated instance", caseStage, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       CaseStageTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-house does not equal to inserted address object.", address, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :     * Test function getCaseTypeList. Create multiple <Code>CaseType</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       CaseStage another = dao.load(caseStage.getAbstractEntityPK());
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute fullName to specified value. Save these instances into database.
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             assertEquals("Result returned by get-legalEntity-list does not equal to inserted legalEntity object.", legalEntity, another);
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.java :             LegalEntityTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * Test object delete. Create a <Code>CBArbitrationCase</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property fullName to value fullName
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       assertEquals("Queried result does not equal to updated instance", caseBookRef, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       CaseBookRefTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * their attribute <Code>registrationDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * by DAO's <tt>findByRegistrationDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :      // Create CBArbitrationCase instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       CaseBookRef another = dao.load(caseBookRef.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-fullName does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * and set their attribute effectiveTo to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * their attribute <Code>simpleJusticeFlag</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute surname to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * by DAO's <tt>findBySimpleJusticeFlag</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :  * Purpose: Defines test class to test the peristence of class CBCourtCase
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :      // Create CBArbitrationCase instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       // Create instances and set their property effectiveTo to value effectiveTo
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property surname to value surname
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :  * Test case class to test the persistence of CBCourtCase
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * Test function getCBArbitrationCaseList. Create multiple <Code>CBArbitrationCase</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * Query all intances by DAO's <tt>doGetCBArbitrationCaseList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       // Create multiple CBArbitrationCase instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRef another = CaseBookRefTestHelper.getCaseBookRefByPk(resultFound, caseBookRef.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             assertEquals("Result returned by find-by-effectiveTo does not equal to inserted caseBookRef object.", caseBookRef, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRefTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * and set their attribute code to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute building to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :     * Query all intances by DAO's <tt>doGetCaseTypeList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       // Create instances and set their property code to value code
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property building to value building
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * Test object delete. Create a <Code>CBCourtCase</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       CBArbitrationCase anotherCBArbitrationCase = dao.load(cBArbitrationCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * their attribute <Code>case_id</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-surname does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * by DAO's <tt>findByCase_id</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :      // Create CBCourtCase instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-building does not equal to inserted address object.", address, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRef another = CaseBookRefTestHelper.getCaseBookRefByPk(resultFound, caseBookRef.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             assertEquals("Result returned by find-by-code does not equal to inserted caseBookRef object.", caseBookRef, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :          cBArbitrationCase, anotherCBArbitrationCase);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRefTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       CBArbitrationCaseTestHelper.delete(anotherCBArbitrationCase);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * their attribute <Code>caseNamber</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute housing to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * by DAO's <tt>findByCaseNamber</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * and set their attribute name to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :      // Create CBCourtCase instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property housing to value housing
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       // Create instances and set their property name to value name
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * their attribute <Code>effectiveFrom</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * by DAO's <tt>findByEffectiveFrom</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :      // Create CBCourtCase instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-housing does not equal to inserted address object.", address, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * their attribute <Code>effectiveTo</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * by DAO's <tt>findByEffectiveTo</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRef another = CaseBookRefTestHelper.getCaseBookRefByPk(resultFound, caseBookRef.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute office to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             assertEquals("Result returned by find-by-name does not equal to inserted caseBookRef object.", caseBookRef, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRefTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       // Create multiple CaseType instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * and set their attribute effectiveFrom to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property office to value office
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       CBArbitrationCase another = dao.load(cBArbitrationCase.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       assertEquals("Queried result does not equal to updated instance", cBArbitrationCase, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :             CaseStage another = CaseStageTestHelper.getCaseStageByPk(resultFound, caseStage.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       CBArbitrationCaseTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       CBArbitrationCase another = dao.load(cBArbitrationCase.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * and set their attribute registrationDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :             assertEquals("Result returned by get-caseStage-list does not equal to inserted caseStage object.", caseStage, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :             CaseStageTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       // Create instances and set their property registrationDate to value registrationDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-office does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute ay to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseStageTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property ay to value ay
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :      // Create CBCourtCase instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * their attribute <Code>courtName</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * by DAO's <tt>findByCourtName</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute name to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :      // Create CBCourtCase instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-ay does not equal to inserted address object.", address, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * Test function getCBCourtCaseList. Create multiple <Code>CBCourtCase</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * Query all intances by DAO's <tt>doGetCBCourtCaseList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute fullAddress to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       // Create multiple CBCourtCase instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property fullAddress to value fullAddress
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * and its subclasses. Save them into database and query all <Code>CBCourtCase</Code> instances from 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             CBArbitrationCase another = CBArbitrationCaseTestHelper.getCBArbitrationCaseByPk(resultFound, cBArbitrationCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       // Create instances of CBCourtCase and its subclasses. Save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             assertEquals("Result returned by find-by-registrationDate does not equal to inserted cBArbitrationCase object.", cBArbitrationCase, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             CBArbitrationCaseTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * and set their attribute simpleJusticeFlag to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTestHelper.java :  * Purpose: Defines the test helper class for class CBCourtCase
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-fullAddress does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :       // Create instances and set their property simpleJusticeFlag to value simpleJusticeFlag
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute activeAdress to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       CBCourtCase anotherCBCourtCase = dao.load(cBCourtCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :          cBCourtCase, anotherCBCourtCase);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       CBCourtCaseTestHelper.delete(anotherCBCourtCase);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property activeAdress to value activeAdress
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       CBCourtCase another = dao.load(cBCourtCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       assertEquals("Queried result does not equal to updated instance", cBCourtCase, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       CBCourtCaseTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             CBArbitrationCase another = CBArbitrationCaseTestHelper.getCBArbitrationCaseByPk(resultFound, cBArbitrationCase.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             assertEquals("Result returned by find-by-simpleJusticeFlag does not equal to inserted cBArbitrationCase object.", cBArbitrationCase, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             CBArbitrationCaseTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-activeAdress does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       CBCourtCase another = dao.load(cBCourtCase.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       CaseType anotherCaseType = dao.load(caseType.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :          caseType, anotherCaseType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       // Create instances and set their property effectiveFrom to value effectiveFrom
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       CaseTypeTestHelper.delete(anotherCaseType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * and set their attribute case_id to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       CaseType another = dao.load(caseType.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       // Create instances and set their property case_id to value case_id
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       assertEquals("Queried result does not equal to updated instance", caseType, another);  
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       CaseTypeTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       CaseType another = dao.load(caseType.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRef another = CaseBookRefTestHelper.getCaseBookRefByPk(resultFound, caseBookRef.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCase another = CBCourtCaseTestHelper.getCBCourtCaseByPk(resultFound, cBCourtCase.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             assertEquals("Result returned by find-by-effectiveFrom does not equal to inserted caseBookRef object.", caseBookRef, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             assertEquals("Result returned by find-by-case_id does not equal to inserted cBCourtCase object.", cBCourtCase, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRefTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * and set their attribute loadDate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * and set their attribute caseNamber to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       // Create instances and set their property caseNamber to value caseNamber
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :       // Create instances and set their property loadDate to value loadDate
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCase another = CBCourtCaseTestHelper.getCBCourtCaseByPk(resultFound, cBCourtCase.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :             CaseType another = CaseTypeTestHelper.getCaseTypeByPk(resultFound, caseType.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             assertEquals("Result returned by find-by-caseNamber does not equal to inserted cBCourtCase object.", cBCourtCase, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :             assertEquals("Result returned by get-caseType-list does not equal to inserted caseType object.", caseType, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCaseTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :             CaseTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * and set their attribute effectiveFrom to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       // Create instances and set their property effectiveFrom to value effectiveFrom
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRef another = CaseBookRefTestHelper.getCaseBookRefByPk(resultFound, caseBookRef.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             assertEquals("Result returned by find-by-loadDate does not equal to inserted caseBookRef object.", caseBookRef, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute isMainAddress to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property isMainAddress to value isMainAddress
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-isMainAddress does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             CBArbitrationCase another = CBArbitrationCaseTestHelper.getCBArbitrationCaseByPk(resultFound, cBArbitrationCase.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * and set their attribute fullAddressWithoutZIP to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             assertEquals("Result returned by get-cBArbitrationCase-list does not equal to inserted cBArbitrationCase object.", cBArbitrationCase, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :             CBArbitrationCaseTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :       // Create instances and set their property fullAddressWithoutZIP to value fullAddressWithoutZIP
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :  * Purpose: Defines test class to test the peristence of class ClientCriteriaProblem
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :  * Test case class to test the persistence of ClientCriteriaProblem
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by find-by-fullAddressWithoutZIP does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             Address another = AddressTestHelper.getAddressByPk(resultFound, address.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * Test object delete. Create a <Code>ClientCriteriaProblem</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             assertEquals("Result returned by get-address-list does not equal to inserted address object.", address, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :             AddressTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property name to value name
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\AddressTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-name does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute patronymic to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property patronymic to value patronymic
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * their attribute <Code>dateFrom</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * by DAO's <tt>findByDateFrom</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :      // Create ClientCriteriaProblem instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * their attribute <Code>endDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * by DAO's <tt>findByEndDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :      // Create ClientCriteriaProblem instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * their attribute <Code>numberCriteriaProblem</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * by DAO's <tt>findByNumberCriteriaProblem</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :      // Create ClientCriteriaProblem instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * their attribute <Code>nameCriteriaProblem</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * by DAO's <tt>findByNameCriteriaProblem</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :      // Create ClientCriteriaProblem instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRefTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :  * Purpose: Defines test class to test the peristence of class ClientRating
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :  * Test case class to test the persistence of ClientRating
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * Test object delete. Create a <Code>ClientRating</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * their attribute <Code>rating</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * by DAO's <tt>findByRating</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :      // Create ClientRating instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * their attribute <Code>approvalDate</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * by DAO's <tt>findByApprovalDate</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :      // Create ClientRating instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * their attribute <Code>pd</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * by DAO's <tt>findByPd</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :      // Create ClientRating instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * Test function getClientRatingList. Create multiple <Code>ClientRating</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * Query all intances by DAO's <tt>doGetClientRatingList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       // Create multiple ClientRating instance and insert them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTestHelper.java :  * Purpose: Defines the test helper class for class ClientRating
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       ClientRating anotherClientRating = dao.load(clientRating.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :          clientRating, anotherClientRating);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       ClientRatingTestHelper.delete(anotherClientRating);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       ClientRating another = dao.load(clientRating.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       assertEquals("Queried result does not equal to updated instance", clientRating, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       ClientRatingTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       ClientRating another = dao.load(clientRating.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * and set their attribute rating to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       // Create instances and set their property rating to value rating
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRating another = ClientRatingTestHelper.getClientRatingByPk(resultFound, clientRating.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             assertEquals("Result returned by find-by-rating does not equal to inserted clientRating object.", clientRating, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRatingTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * and set their attribute approvalDate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCase another = CBCourtCaseTestHelper.getCBCourtCaseByPk(resultFound, cBCourtCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             assertEquals("Result returned by find-by-effectiveFrom does not equal to inserted cBCourtCase object.", cBCourtCase, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * and set their attribute effectiveTo to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       // Create instances and set their property effectiveTo to value effectiveTo
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCase another = CBCourtCaseTestHelper.getCBCourtCaseByPk(resultFound, cBCourtCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             assertEquals("Result returned by find-by-effectiveTo does not equal to inserted cBCourtCase object.", cBCourtCase, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCaseTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       // Create instances and set their property approvalDate to value approvalDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * Test function getClientCriteriaProblemList. Create multiple <Code>ClientCriteriaProblem</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * Query all intances by DAO's <tt>doGetClientCriteriaProblemList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * and set their attribute courtName to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       // Create multiple ClientCriteriaProblem instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :       // Create instances and set their property courtName to value courtName
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRating another = ClientRatingTestHelper.getClientRatingByPk(resultFound, clientRating.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :  * Purpose: Defines test class to test the peristence of class Client
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             assertEquals("Result returned by find-by-approvalDate does not equal to inserted clientRating object.", clientRating, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRatingTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * and set their attribute pd to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :  * Test case class to test the persistence of Client
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       ClientCriteriaProblem anotherClientCriteriaProblem = dao.load(clientCriteriaProblem.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCase another = CBCourtCaseTestHelper.getCBCourtCaseByPk(resultFound, cBCourtCase.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :          clientCriteriaProblem, anotherClientCriteriaProblem);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :       // Create instances and set their property pd to value pd
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             assertEquals("Result returned by find-by-courtName does not equal to inserted cBCourtCase object.", cBCourtCase, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       ClientCriteriaProblemTestHelper.delete(anotherClientCriteriaProblem);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       ClientCriteriaProblem another = dao.load(clientCriteriaProblem.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :     * Test object delete. Create a <Code>Client</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       assertEquals("Queried result does not equal to updated instance", clientCriteriaProblem, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       ClientCriteriaProblemTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :     * Test function getClientList. Create multiple <Code>Client</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCase another = CBCourtCaseTestHelper.getCBCourtCaseByPk(resultFound, cBCourtCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             assertEquals("Result returned by get-cBCourtCase-list does not equal to inserted cBCourtCase object.", cBCourtCase, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :             CBCourtCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * subclasses. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTestHelper.java :  * Purpose: Defines the test helper class for class ClientCriteriaProblem
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :          CBCourtCase anotherCBCourtCase  = CBCourtCaseTestHelper.getCBCourtCaseByPk(resultList, cBCourtCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", cBCourtCase, anotherCBCourtCase);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherCBCourtCase)));
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :          CBCourtCaseTestHelper.delete(anotherCBCourtCase);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRef another = CaseBookRefTestHelper.getCaseBookRefByPk(resultFound, caseBookRef.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             assertEquals("Result returned by get-caseBookRef-list does not equal to inserted caseBookRef object.", caseBookRef, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :             CaseBookRefTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * subclasses. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-patronymic does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :          CaseBookRef anotherCaseBookRef  = CaseBookRefTestHelper.getCaseBookRefByPk(resultList, caseBookRef.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRating another = ClientRatingTestHelper.getClientRatingByPk(resultFound, clientRating.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       ClientCriteriaProblem another = dao.load(clientCriteriaProblem.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             assertEquals("Result returned by find-by-pd does not equal to inserted clientRating object.", clientRating, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRatingTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * and set their attribute dateFrom to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       // Create instances and set their property dateFrom to value dateFrom
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRating another = ClientRatingTestHelper.getClientRatingByPk(resultFound, clientRating.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             assertEquals("Result returned by get-clientRating-list does not equal to inserted clientRating object.", clientRating, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :             ClientRatingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTestHelper.java :  * Purpose: Defines the test helper class for class Client
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :  * Purpose: Defines test class to test the peristence of class ContactOrganization
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblem another = ClientCriteriaProblemTestHelper.getClientCriteriaProblemByPk(resultFound, clientCriteriaProblem.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             assertEquals("Result returned by find-by-dateFrom does not equal to inserted clientCriteriaProblem object.", clientCriteriaProblem, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientRatingTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblemTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :  * Test case class to test the persistence of ContactOrganization
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * and set their attribute endDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       // Create instances and set their property endDate to value endDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * Test object delete. Create a <Code>ContactOrganization</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblem another = ClientCriteriaProblemTestHelper.getClientCriteriaProblemByPk(resultFound, clientCriteriaProblem.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             assertEquals("Result returned by find-by-endDate does not equal to inserted clientCriteriaProblem object.", clientCriteriaProblem, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblemTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * their attribute <Code>isMain</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * by DAO's <tt>findByIsMain</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * and set their attribute numberCriteriaProblem to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :      // Create ContactOrganization instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTestHelper.java :  * Purpose: Defines the test helper class for class ContactOrganization
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * their attribute <Code>relation</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       // Create instances and set their property numberCriteriaProblem to value numberCriteriaProblem
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * by DAO's <tt>findByRelation</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :      // Create ContactOrganization instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * Test function getContactOrganizationList. Create multiple <Code>ContactOrganization</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * Query all intances by DAO's <tt>doGetContactOrganizationList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       // Create multiple ContactOrganization instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblem another = ClientCriteriaProblemTestHelper.getClientCriteriaProblemByPk(resultFound, clientCriteriaProblem.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             assertEquals("Result returned by find-by-numberCriteriaProblem does not equal to inserted clientCriteriaProblem object.", clientCriteriaProblem, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblemTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * and set their attribute nameCriteriaProblem to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :     * Query all intances by DAO's <tt>doGetClientList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :       // Create instances and set their property nameCriteriaProblem to value nameCriteriaProblem
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       // Create multiple Client instance and insert them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       Client anotherClient = dao.load(client.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :          client, anotherClient);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       ClientTestHelper.delete(anotherClient);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       Client another = dao.load(client.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       assertEquals("Queried result does not equal to updated instance", client, another);  
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       ClientTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblem another = ClientCriteriaProblemTestHelper.getClientCriteriaProblemByPk(resultFound, clientCriteriaProblem.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             assertEquals("Result returned by find-by-nameCriteriaProblem does not equal to inserted clientCriteriaProblem object.", clientCriteriaProblem, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblemTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :  * Purpose: Defines test class to test the peristence of class Contact
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * save them into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       Client another = dao.load(client.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :  * Test case class to test the persistence of Contact
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTestHelper.java :  * Purpose: Defines the test helper class for class Contact
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblem another = ClientCriteriaProblemTestHelper.getClientCriteriaProblemByPk(resultFound, clientCriteriaProblem.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             assertEquals("Result returned by get-clientCriteriaProblem-list does not equal to inserted clientCriteriaProblem object.", clientCriteriaProblem, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :             ClientCriteriaProblemTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * Test object delete. Create a <Code>Contact</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * been saved. Save the instance in the end.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :             Client another = ClientTestHelper.getClientByPk(resultFound, client.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :             assertEquals("Result returned by get-client-list does not equal to inserted client object.", client, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :             ClientTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * their attribute <Code>isPrimary</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * by DAO's <tt>findByIsPrimary</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :      // Create Contact instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * their attribute <Code>isActive</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       Client anotherClient = dao.load(client.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       assertNotNull("Query result is null", anotherClient);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * by DAO's <tt>findByIsActive</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       // if the association's cascade is set to all, save-update
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       java.util.Collection creditAgreementInfo = anotherClient.getCreditAgreementInfo();
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       ContactOrganization anotherContactOrganization = dao.load(contactOrganization.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :          contactOrganization, anotherContactOrganization);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", caseBookRef, anotherCaseBookRef);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       ContactOrganizationTestHelper.delete(anotherContactOrganization);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherCaseBookRef)));
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :          CaseBookRefTestHelper.delete(anotherCaseBookRef);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CaseBookRefTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       ContactOrganization another = dao.load(contactOrganization.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       assertEquals("Queried result does not equal to updated instance", contactOrganization, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       ContactOrganizationTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :  * Purpose: Defines test class to test the peristence of class CreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :  * Test case class to test the persistence of CreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute documentSeries to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       ContactOrganization another = dao.load(contactOrganization.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property documentSeries to value documentSeries
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * and set their attribute isMain to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       // Create instances and set their property isMain to value isMain
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * Test object delete. Create a <Code>CreditAgreement</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-documentSeries does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             ContactOrganization another = ContactOrganizationTestHelper.getContactOrganizationByPk(resultFound, contactOrganization.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       java.util.Collection clientLoanBalance = anotherClient.getClientLoanBalance();
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :      // Create Contact instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * their attribute <Code>commentStatement</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * by DAO's <tt>findByCommentStatement</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :      // Create Contact instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * their attribute <Code>position</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * by DAO's <tt>findByPosition</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :      // Create Contact instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * Test function getContactList. Create multiple <Code>Contact</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * Query all intances by DAO's <tt>doGetContactList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       // Create multiple Contact instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * and its subclasses. Save them into database and query all <Code>Contact</Code> instances from 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       // Create instances of Contact and its subclasses. Save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       Contact anotherContact = dao.load(contact.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :          contact, anotherContact);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       ContactTestHelper.delete(anotherContact);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTestHelper.java :  * Purpose: Defines the test helper class for class CreditAgreement
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       Contact another = dao.load(contact.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :  * Purpose: Defines test class to test the peristence of class CreditDebt
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       assertEquals("Queried result does not equal to updated instance", contact, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       ContactTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :  * Test case class to test the persistence of CreditDebt
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       Contact another = dao.load(contact.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * and set their attribute isPrimary to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :       assertEquals("Party getPartyInfo() is not identical with the queried result! ",
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       // Create instances and set their property isPrimary to value isPrimary
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :          client.getPartyInfo(), anotherClient.getPartyInfo());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :        ClientTestHelper.delete(anotherClient);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :     * Test object delete. Create a <Code>CreditDebt</Code> instance and save it into database. Delete the 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ClientTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :     * Test function getCreditDebtList. Create multiple <Code>CreditDebt</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :     * Query all intances by DAO's <tt>doGetCreditDebtList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             Contact another = ContactTestHelper.getContactByPk(resultFound, contact.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             assertEquals("Result returned by find-by-isPrimary does not equal to inserted contact object.", contact, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute documentNumber to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             ContactTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             assertEquals("Result returned by find-by-isMain does not equal to inserted contactOrganization object.", contactOrganization, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             ContactOrganizationTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * and set their attribute isActive to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * and set their attribute relation to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property documentNumber to value documentNumber
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       // Create instances and set their property isActive to value isActive
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :       // Create instances and set their property relation to value relation
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             Contact another = ContactTestHelper.getContactByPk(resultFound, contact.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             assertEquals("Result returned by find-by-isActive does not equal to inserted contact object.", contact, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             ContactTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             ContactOrganization another = ContactOrganizationTestHelper.getContactOrganizationByPk(resultFound, contactOrganization.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-documentNumber does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             assertEquals("Result returned by find-by-relation does not equal to inserted contactOrganization object.", contactOrganization, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * and set their attribute commentStatement to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             ContactOrganizationTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute issueOrganization to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       // Create instances and set their property commentStatement to value commentStatement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property issueOrganization to value issueOrganization
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             Contact another = ContactTestHelper.getContactByPk(resultFound, contact.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             assertEquals("Result returned by find-by-commentStatement does not equal to inserted contact object.", contact, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             ContactTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * and set their attribute position to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             ContactOrganization another = ContactOrganizationTestHelper.getContactOrganizationByPk(resultFound, contactOrganization.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-issueOrganization does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             assertEquals("Result returned by get-contactOrganization-list does not equal to inserted contactOrganization object.", contactOrganization, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>agreementDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :             ContactOrganizationTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       // Create instances and set their property position to value position
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByAgreementDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>loanRepaymentDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByLoanRepaymentDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             Contact another = ContactTestHelper.getContactByPk(resultFound, contact.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             assertEquals("Result returned by find-by-position does not equal to inserted contact object.", contact, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             ContactTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute issueDate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             Contact another = ContactTestHelper.getContactByPk(resultFound, contact.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property issueDate to value issueDate
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             assertEquals("Result returned by get-contact-list does not equal to inserted contact object.", contact, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :             ContactTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTestHelper.java :  * Purpose: Defines the test helper class for class CreditDebt
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       Contact anotherContact = dao.load(contact.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       assertNotNull("Query result is null", anotherContact);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       // if the association's cascade is set to all, save-update
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :       java.util.Collection contact_in_System = anotherContact.getContact_in_System();
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :        ContactTestHelper.delete(anotherContact);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * subclasses. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :          Contact anotherContact  = ContactTestHelper.getContactByPk(resultList, contact.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", contact, anotherContact);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherContact)));
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :          ContactTestHelper.delete(anotherContact);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       // Create multiple CreditDebt instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       CreditDebt anotherCreditDebt = dao.load(creditDebt.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :          creditDebt, anotherCreditDebt);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       CreditDebtTestHelper.delete(anotherCreditDebt);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       CreditDebt another = dao.load(creditDebt.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-issueDate does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ContactTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>firstDateIssue</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByFirstDateIssue</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       assertEquals("Queried result does not equal to updated instance", creditDebt, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute issuePlace to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       CreditDebtTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property issuePlace to value issuePlace
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       CreditDebt another = dao.load(creditDebt.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-issuePlace does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * and set their attribute serNumOfDoc to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :             CreditDebt another = CreditDebtTestHelper.getCreditDebtByPk(resultFound, creditDebt.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :       // Create instances and set their property serNumOfDoc to value serNumOfDoc
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :             assertEquals("Result returned by get-creditDebt-list does not equal to inserted creditDebt object.", creditDebt, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :             CreditDebtTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditDebtTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by find-by-serNumOfDoc does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntity another = BusinessPersonEntityTestHelper.getBusinessPersonEntityByPk(resultFound, businessPersonEntity.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             assertEquals("Result returned by get-businessPersonEntity-list does not equal to inserted businessPersonEntity object.", businessPersonEntity, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :             BusinessPersonEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>factEndDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByFactEndDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isRenewable</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsRenewable</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isOverdraft</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsOverdraft</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>restructCount</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByRestructCount</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>prolongationEndDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByProlongationEndDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>lastProlongationDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByLastProlongationDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>prolongationCount</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByProlongationCount</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isCreditFactory</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsCreditFactory</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>debtOverdueDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByDebtOverdueDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>inerestOverdueDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByInerestOverdueDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>startOverdueDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByStartOverdueDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isRestrLoan</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsRestrLoan</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>lastRestrDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByLastRestrDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>overdueDebtDayCount</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByOverdueDebtDayCount</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>overdueInterestDayCount</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByOverdueInterestDayCount</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>overdueDaysCount</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByOverdueDaysCount</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isHomoPortfolio</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsHomoPortfolio</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isTransferToBCI</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsTransferToBCI</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isRefinancForDefRestruct</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsRefinancForDefRestruct</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>refinOfRestructDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByRefinOfRestructDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isRenewableCLForAccounting</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsRenewableCLForAccounting</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isOverdraftForAccounting</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsOverdraftForAccounting</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>isSuspTermsForAgr</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByIsSuspTermsForAgr</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>nextRepricingDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByNextRepricingDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>prevRepricingDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByPrevRepricingDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>rateRevisionPeriod</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByRateRevisionPeriod</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>dateClaimNotice</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByDateClaimNotice</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * their attribute <Code>agrNumbRefundAdvance</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * by DAO's <tt>findByAgrNumbRefundAdvance</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :      // Create CreditAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * Test function getCreditAgreementList. Create multiple <Code>CreditAgreement</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * Query all intances by DAO's <tt>doGetCreditAgreementList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create multiple CreditAgreement instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       CreditAgreement anotherCreditAgreement = dao.load(creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :          creditAgreement, anotherCreditAgreement);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       CreditAgreementTestHelper.delete(anotherCreditAgreement);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       CreditAgreement another = dao.load(creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", creditAgreement, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       CreditAgreement another = dao.load(creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute agreementDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property agreementDate to value agreementDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-agreementDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute loanRepaymentDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property loanRepaymentDate to value loanRepaymentDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-loanRepaymentDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute firstDateIssue to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property firstDateIssue to value firstDateIssue
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-firstDateIssue does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute factEndDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property factEndDate to value factEndDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-factEndDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isRenewable to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isRenewable to value isRenewable
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isRenewable does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isOverdraft to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isOverdraft to value isOverdraft
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isOverdraft does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute restructCount to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property restructCount to value restructCount
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-restructCount does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute prolongationEndDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property prolongationEndDate to value prolongationEndDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-prolongationEndDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute lastProlongationDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property lastProlongationDate to value lastProlongationDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-lastProlongationDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute prolongationCount to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property prolongationCount to value prolongationCount
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-prolongationCount does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isCreditFactory to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isCreditFactory to value isCreditFactory
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isCreditFactory does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute debtOverdueDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property debtOverdueDate to value debtOverdueDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-debtOverdueDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute inerestOverdueDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property inerestOverdueDate to value inerestOverdueDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-inerestOverdueDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute startOverdueDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property startOverdueDate to value startOverdueDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-startOverdueDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isRestrLoan to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isRestrLoan to value isRestrLoan
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isRestrLoan does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute lastRestrDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property lastRestrDate to value lastRestrDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-lastRestrDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute overdueDebtDayCount to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property overdueDebtDayCount to value overdueDebtDayCount
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-overdueDebtDayCount does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute overdueInterestDayCount to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property overdueInterestDayCount to value overdueInterestDayCount
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-overdueInterestDayCount does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute overdueDaysCount to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property overdueDaysCount to value overdueDaysCount
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-overdueDaysCount does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isHomoPortfolio to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isHomoPortfolio to value isHomoPortfolio
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isHomoPortfolio does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isTransferToBCI to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isTransferToBCI to value isTransferToBCI
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isTransferToBCI does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isRefinancForDefRestruct to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isRefinancForDefRestruct to value isRefinancForDefRestruct
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isRefinancForDefRestruct does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute refinOfRestructDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property refinOfRestructDate to value refinOfRestructDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-refinOfRestructDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isRenewableCLForAccounting to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isRenewableCLForAccounting to value isRenewableCLForAccounting
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isRenewableCLForAccounting does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isOverdraftForAccounting to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isOverdraftForAccounting to value isOverdraftForAccounting
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isOverdraftForAccounting does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute isSuspTermsForAgr to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property isSuspTermsForAgr to value isSuspTermsForAgr
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-isSuspTermsForAgr does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute nextRepricingDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property nextRepricingDate to value nextRepricingDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-nextRepricingDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute prevRepricingDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property prevRepricingDate to value prevRepricingDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-prevRepricingDate does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute rateRevisionPeriod to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property rateRevisionPeriod to value rateRevisionPeriod
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-rateRevisionPeriod does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute dateClaimNotice to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property dateClaimNotice to value dateClaimNotice
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-dateClaimNotice does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * and set their attribute agrNumbRefundAdvance to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // Create instances and set their property agrNumbRefundAdvance to value agrNumbRefundAdvance
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by find-by-agrNumbRefundAdvance does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreement another = CreditAgreementTestHelper.getCreditAgreementByPk(resultFound, creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             assertEquals("Result returned by get-creditAgreement-list does not equal to inserted creditAgreement object.", creditAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :             CreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       CreditAgreement anotherCreditAgreement = dao.load(creditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       assertNotNull("Query result is null", anotherCreditAgreement);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       // if the association's cascade is set to all, save-update
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       java.util.Collection debt = anotherCreditAgreement.getDebt();
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       java.util.Collection issuedForCase = anotherCreditAgreement.getIssuedForCase();
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       java.util.Collection limit = anotherCreditAgreement.getLimit();
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       java.util.Collection reserve = anotherCreditAgreement.getReserve();
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :       java.util.Collection account_91315 = anotherCreditAgreement.getAccount_91315();
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :        CreditAgreementTestHelper.delete(anotherCreditAgreement);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\CreditAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :  * Purpose: Defines test class to test the peristence of class Debt
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :  * Test case class to test the persistence of Debt
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * Test object delete. Create a <Code>Debt</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * their attribute <Code>calculationDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * by DAO's <tt>findByCalculationDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :      // Create Debt instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * Test function getDebtList. Create multiple <Code>Debt</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * Query all intances by DAO's <tt>doGetDebtList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       // Create multiple Debt instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * and its subclasses. Save them into database and query all <Code>Debt</Code> instances from 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       // Create instances of Debt and its subclasses. Save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       Debt anotherDebt = dao.load(debt.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :          debt, anotherDebt);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       DebtTestHelper.delete(anotherDebt);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       Debt another = dao.load(debt.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       assertEquals("Queried result does not equal to updated instance", debt, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       DebtTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTestHelper.java :  * Purpose: Defines the test helper class for class Debt
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       Debt another = dao.load(debt.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       assertNull("Inserted instance is not deleted", another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * and set their attribute calculationDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :       // Create instances and set their property calculationDate to value calculationDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :             Debt another = DebtTestHelper.getDebtByPk(resultFound, debt.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :             assertEquals("Result returned by find-by-calculationDate does not equal to inserted debt object.", debt, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :             DebtTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTestHelper.java :  * Purpose: Defines the test helper class for class Email
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :  * Purpose: Defines test class to test the peristence of class Email
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :             Debt another = DebtTestHelper.getDebtByPk(resultFound, debt.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :  * Test case class to test the persistence of Email
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :             assertEquals("Result returned by get-debt-list does not equal to inserted debt object.", debt, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :             DebtTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * subclasses. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * Test object delete. Create a <Code>Email</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * their attribute <Code>address</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :          Debt anotherDebt  = DebtTestHelper.getDebtByPk(resultList, debt.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * by DAO's <tt>findByAddress</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", debt, anotherDebt);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherDebt)));
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :      // Create Email instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :          DebtTestHelper.delete(anotherDebt);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * Test function getEmailList. Create multiple <Code>Email</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * Query all intances by DAO's <tt>doGetEmailList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\DebtTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       // Create multiple Email instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       Email anotherEmail = dao.load(email.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :          email, anotherEmail);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTestHelper.java :  * Purpose: Defines the test helper class for class IdType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :  * Purpose: Defines test class to test the peristence of class IdType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       EmailTestHelper.delete(anotherEmail);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :  * Test case class to test the persistence of IdType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       Email another = dao.load(email.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       assertEquals("Queried result does not equal to updated instance", email, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       EmailTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       Email another = dao.load(email.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * Test object delete. Create a <Code>IdType</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * their attribute <Code>systemID</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * by DAO's <tt>findBySystemID</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :      // Create IdType instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * their attribute <Code>value</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * by DAO's <tt>findByValue</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :      // Create IdType instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * Test function getIdTypeList. Create multiple <Code>IdType</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * Query all intances by DAO's <tt>doGetIdTypeList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :  * Purpose: Defines test class to test the peristence of class Issued_For_case
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * and set their attribute address to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       // Create multiple IdType instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :       // Create instances and set their property address to value address
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :  * Test case class to test the persistence of Issued_For_case
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       IdType anotherIdType = dao.load(idType.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :          idType, anotherIdType);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       IdTypeTestHelper.delete(anotherIdType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :             Email another = EmailTestHelper.getEmailByPk(resultFound, email.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :             assertEquals("Result returned by find-by-address does not equal to inserted email object.", email, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :             EmailTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       IdType another = dao.load(idType.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * Test object delete. Create a <Code>Issued_For_case</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * their attribute <Code>calculationDate</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * by DAO's <tt>findByCalculationDate</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :             Email another = EmailTestHelper.getEmailByPk(resultFound, email.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :      // Create Issued_For_case instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :             assertEquals("Result returned by get-email-list does not equal to inserted email object.", email, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :             EmailTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * Test function getIssued_For_caseList. Create multiple <Code>Issued_For_case</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * Query all intances by DAO's <tt>doGetIssued_For_caseList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       assertEquals("Queried result does not equal to updated instance", idType, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       IdTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       // Create multiple Issued_For_case instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\EmailTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       IdType another = dao.load(idType.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       Issued_For_case anotherIssued_For_case = dao.load(issued_For_case.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * and set their attribute systemID to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :          issued_For_case, anotherIssued_For_case);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       // Create instances and set their property systemID to value systemID
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       Issued_For_caseTestHelper.delete(anotherIssued_For_case);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTestHelper.java :  * Purpose: Defines the test helper class for class Issued_For_case
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             IdType another = IdTypeTestHelper.getIdTypeByPk(resultFound, idType.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       Issued_For_case another = dao.load(issued_For_case.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             assertEquals("Result returned by find-by-systemID does not equal to inserted idType object.", idType, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             IdTypeTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * and set their attribute value to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :  * Purpose: Defines test class to test the peristence of class KommersantEvent
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       assertEquals("Queried result does not equal to updated instance", issued_For_case, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :  * Test case class to test the persistence of KommersantEvent
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       Issued_For_caseTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :       // Create instances and set their property value to value value
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * Test object delete. Create a <Code>KommersantEvent</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       Issued_For_case another = dao.load(issued_For_case.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             IdType another = IdTypeTestHelper.getIdTypeByPk(resultFound, idType.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             assertEquals("Result returned by find-by-value does not equal to inserted idType object.", idType, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * and set their attribute calculationDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>text</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByText</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             IdTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :       // Create instances and set their property calculationDate to value calculationDate
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>header</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByHeader</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :             Issued_For_case another = Issued_For_caseTestHelper.getIssued_For_caseByPk(resultFound, issued_For_case.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             IdType another = IdTypeTestHelper.getIdTypeByPk(resultFound, idType.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :             assertEquals("Result returned by find-by-calculationDate does not equal to inserted issued_For_case object.", issued_For_case, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>publicationDate</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             assertEquals("Result returned by get-idType-list does not equal to inserted idType object.", idType, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :             Issued_For_caseTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByPublicationDate</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :             IdTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>dateFrom</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByDateFrom</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :             Issued_For_case another = Issued_For_caseTestHelper.getIssued_For_caseByPk(resultFound, issued_For_case.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>typeOfEvent</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :             assertEquals("Result returned by get-issued_For_case-list does not equal to inserted issued_For_case object.", issued_For_case, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByTypeOfEvent</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :             Issued_For_caseTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTestHelper.java :  * Purpose: Defines the test helper class for class KommersantEvent
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :  * Purpose: Defines test class to test the peristence of class LegalEntity
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\IdTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :  * Test case class to test the persistence of LegalEntity
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>loadDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByLoadDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * Test object delete. Create a <Code>LegalEntity</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>effectiveFrom</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByEffectiveFrom</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * their attribute <Code>name</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * by DAO's <tt>findByName</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :      // Create LegalEntity instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * their attribute <Code>effectiveTo</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * their attribute <Code>shortname</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * by DAO's <tt>findByEffectiveTo</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * by DAO's <tt>findByShortname</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :      // Create KommersantEvent instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :      // Create LegalEntity instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * Test function getKommersantEventList. Create multiple <Code>KommersantEvent</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * their attribute <Code>kpp</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * Query all intances by DAO's <tt>doGetKommersantEventList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * by DAO's <tt>findByKpp</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create multiple KommersantEvent instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :      // Create LegalEntity instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * their attribute <Code>branch</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * by DAO's <tt>findByBranch</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :      // Create LegalEntity instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       KommersantEvent anotherKommersantEvent = dao.load(kommersantEvent.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :          kommersantEvent, anotherKommersantEvent);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * Test function getLegalEntityList. Create multiple <Code>LegalEntity</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       KommersantEventTestHelper.delete(anotherKommersantEvent);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * Query all intances by DAO's <tt>doGetLegalEntityList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       // Create multiple LegalEntity instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       KommersantEvent another = dao.load(kommersantEvent.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       assertEquals("Queried result does not equal to updated instance", kommersantEvent, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       KommersantEventTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       LegalEntity anotherLegalEntity = dao.load(legalEntity.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :          legalEntity, anotherLegalEntity);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       LegalEntityTestHelper.delete(anotherLegalEntity);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       KommersantEvent another = dao.load(kommersantEvent.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute text to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       LegalEntity another = dao.load(legalEntity.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property text to value text
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       assertEquals("Queried result does not equal to updated instance", legalEntity, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTestHelper.java :  * Purpose: Defines the test helper class for class LegalEntity
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       LegalEntityTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       LegalEntity another = dao.load(legalEntity.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-text does not equal to inserted kommersantEvent object.", kommersantEvent, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :  * Purpose: Defines test class to test the peristence of class LegalOwner
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * and set their attribute name to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute header to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       // Create instances and set their property name to value name
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :  * Test case class to test the persistence of LegalOwner
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTestHelper.java :  * Purpose: Defines the test helper class for class LegalOwner
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property header to value header
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             assertEquals("Result returned by find-by-name does not equal to inserted legalEntity object.", legalEntity, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntityTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * and set their attribute shortname to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-header does not equal to inserted kommersantEvent object.", kommersantEvent, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * Test object delete. Create a <Code>LegalOwner</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       // Create instances and set their property shortname to value shortname
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute publicationDate to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * their attribute <Code>sharePerc</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * by DAO's <tt>findBySharePerc</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property publicationDate to value publicationDate
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :      // Create LegalOwner instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-publicationDate does not equal to inserted kommersantEvent object.", kommersantEvent, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :  * Purpose: Defines test class to test the peristence of class Limit
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute dateFrom to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property dateFrom to value dateFrom
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * their attribute <Code>sharePossPeriod</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :  * Test case class to test the persistence of Limit
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             assertEquals("Result returned by find-by-shortname does not equal to inserted legalEntity object.", legalEntity, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * by DAO's <tt>findBySharePossPeriod</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntityTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :      // Create LegalOwner instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * and set their attribute kpp to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * their attribute <Code>shareComment</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * by DAO's <tt>findByShareComment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       // Create instances and set their property kpp to value kpp
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-dateFrom does not equal to inserted kommersantEvent object.", kommersantEvent, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :      // Create LegalOwner instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute typeOfEvent to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * Test object delete. Create a <Code>Limit</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTestHelper.java :  * Purpose: Defines the test helper class for class Limit
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * Test function getLegalOwnerList. Create multiple <Code>LegalOwner</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property typeOfEvent to value typeOfEvent
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             assertEquals("Result returned by find-by-kpp does not equal to inserted legalEntity object.", legalEntity, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * Query all intances by DAO's <tt>doGetLegalOwnerList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * their attribute <Code>calculationDate</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * by DAO's <tt>findByCalculationDate</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * and set their attribute branch to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :      // Create Limit instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       // Create multiple LegalOwner instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :       // Create instances and set their property branch to value branch
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-typeOfEvent does not equal to inserted kommersantEvent object.", kommersantEvent, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * Test function getLimitList. Create multiple <Code>Limit</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * Query all intances by DAO's <tt>doGetLimitList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute loadDate to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       // Create multiple Limit instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property loadDate to value loadDate
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             assertEquals("Result returned by find-by-branch does not equal to inserted legalEntity object.", legalEntity, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       Limit anotherLimit = dao.load(limit.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :          limit, anotherLimit);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       LimitTestHelper.delete(anotherLimit);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       LegalOwner anotherLegalOwner = dao.load(legalOwner.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :          legalOwner, anotherLegalOwner);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       LegalOwnerTestHelper.delete(anotherLegalOwner);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-loadDate does not equal to inserted kommersantEvent object.", kommersantEvent, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       LegalOwner another = dao.load(legalOwner.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute effectiveFrom to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntity another = LegalEntityTestHelper.getLegalEntityByPk(resultFound, legalEntity.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       assertEquals("Queried result does not equal to updated instance", legalOwner, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property effectiveFrom to value effectiveFrom
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       LegalOwnerTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       Limit another = dao.load(limit.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             assertEquals("Result returned by get-legalEntity-list does not equal to inserted legalEntity object.", legalEntity, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :             LegalEntityTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       assertEquals("Queried result does not equal to updated instance", limit, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       LimitTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       LegalOwner another = dao.load(legalOwner.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * and set their attribute sharePerc to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-effectiveFrom does not equal to inserted kommersantEvent object.", kommersantEvent, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       // Create instances and set their property sharePerc to value sharePerc
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * and set their attribute effectiveTo to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :       // Create instances and set their property effectiveTo to value effectiveTo
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwner another = LegalOwnerTestHelper.getLegalOwnerByPk(resultFound, legalOwner.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalEntityTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             assertEquals("Result returned by find-by-sharePerc does not equal to inserted legalOwner object.", legalOwner, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwnerTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       Limit another = dao.load(limit.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * and set their attribute sharePossPeriod to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * and set their attribute calculationDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by find-by-effectiveTo does not equal to inserted kommersantEvent object.", kommersantEvent, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       // Create instances and set their property sharePossPeriod to value sharePossPeriod
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :       // Create instances and set their property calculationDate to value calculationDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwner another = LegalOwnerTestHelper.getLegalOwnerByPk(resultFound, legalOwner.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :             Limit another = LimitTestHelper.getLimitByPk(resultFound, limit.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             assertEquals("Result returned by find-by-sharePossPeriod does not equal to inserted legalOwner object.", legalOwner, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :             assertEquals("Result returned by find-by-calculationDate does not equal to inserted limit object.", limit, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwnerTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :             LimitTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * and set their attribute shareComment to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :       // Create instances and set their property shareComment to value shareComment
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :  * Purpose: Defines test class to test the peristence of class LoanBalanceInfo
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwner another = LegalOwnerTestHelper.getLegalOwnerByPk(resultFound, legalOwner.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             assertEquals("Result returned by find-by-shareComment does not equal to inserted legalOwner object.", legalOwner, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :  * Test case class to test the persistence of LoanBalanceInfo
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :             Limit another = LimitTestHelper.getLimitByPk(resultFound, limit.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwnerTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEvent another = KommersantEventTestHelper.getKommersantEventByPk(resultFound, kommersantEvent.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :             assertEquals("Result returned by get-limit-list does not equal to inserted limit object.", limit, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :             LimitTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwner another = LegalOwnerTestHelper.getLegalOwnerByPk(resultFound, legalOwner.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * Test object delete. Create a <Code>LoanBalanceInfo</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LimitTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             assertEquals("Result returned by get-legalOwner-list does not equal to inserted legalOwner object.", legalOwner, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :             LegalOwnerTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             assertEquals("Result returned by get-kommersantEvent-list does not equal to inserted kommersantEvent object.", kommersantEvent, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :             KommersantEventTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * their attribute <Code>settlementDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * by DAO's <tt>findBySettlementDate</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LegalOwnerTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :      // Create LoanBalanceInfo instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\KommersantEventTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * Test function getLoanBalanceInfoList. Create multiple <Code>LoanBalanceInfo</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * Query all intances by DAO's <tt>doGetLoanBalanceInfoList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       // Create multiple LoanBalanceInfo instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       LoanBalanceInfo anotherLoanBalanceInfo = dao.load(loanBalanceInfo.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :          loanBalanceInfo, anotherLoanBalanceInfo);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       LoanBalanceInfoTestHelper.delete(anotherLoanBalanceInfo);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       LoanBalanceInfo another = dao.load(loanBalanceInfo.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       assertEquals("Queried result does not equal to updated instance", loanBalanceInfo, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       LoanBalanceInfoTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       LoanBalanceInfo another = dao.load(loanBalanceInfo.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * and set their attribute settlementDate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :       // Create instances and set their property settlementDate to value settlementDate
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :             LoanBalanceInfo another = LoanBalanceInfoTestHelper.getLoanBalanceInfoByPk(resultFound, loanBalanceInfo.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :             assertEquals("Result returned by find-by-settlementDate does not equal to inserted loanBalanceInfo object.", loanBalanceInfo, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :             LoanBalanceInfoTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :             LoanBalanceInfo another = LoanBalanceInfoTestHelper.getLoanBalanceInfoByPk(resultFound, loanBalanceInfo.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :             assertEquals("Result returned by get-loanBalanceInfo-list does not equal to inserted loanBalanceInfo object.", loanBalanceInfo, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :             LoanBalanceInfoTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTestHelper.java :  * Purpose: Defines the test helper class for class LoanBalanceInfo
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :  * Purpose: Defines test class to test the peristence of class Organization
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :  * Test case class to test the persistence of Organization
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * Test object delete. Create a <Code>Organization</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * their attribute <Code>registrationDate</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * by DAO's <tt>findByRegistrationDate</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :      // Create Organization instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * their attribute <Code>licenceIssueDate</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * by DAO's <tt>findByLicenceIssueDate</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :      // Create Organization instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * their attribute <Code>ifns</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * by DAO's <tt>findByIfns</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :      // Create Organization instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * their attribute <Code>registeredBy</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * by DAO's <tt>findByRegisteredBy</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :      // Create Organization instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * their attribute <Code>ogrn</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * by DAO's <tt>findByOgrn</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTestHelper.java :  * Purpose: Defines the test helper class for class Organization
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :      // Create Organization instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * their attribute <Code>liquidatEGRCode</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * by DAO's <tt>findByLiquidatEGRCode</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :      // Create Organization instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * their attribute <Code>referenceLiquidationToken</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * by DAO's <tt>findByReferenceLiquidationToken</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :      // Create Organization instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * Test function getOrganizationList. Create multiple <Code>Organization</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * Query all intances by DAO's <tt>doGetOrganizationList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create multiple Organization instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :  * Purpose: Defines test class to test the peristence of class Party
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and its subclasses. Save them into database and query all <Code>Organization</Code> instances from 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances of Organization and its subclasses. Save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :  * Test case class to test the persistence of Party
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       Organization anotherOrganization = dao.load(organization.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :          organization, anotherOrganization);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * Test object delete. Create a <Code>Party</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       OrganizationTestHelper.delete(anotherOrganization);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * their attribute <Code>party_ID</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * by DAO's <tt>findByParty_ID</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       Organization another = dao.load(organization.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :      // Create Party instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       assertEquals("Queried result does not equal to updated instance", organization, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       OrganizationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * their attribute <Code>inn</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * by DAO's <tt>findByInn</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :      // Create Party instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       Organization another = dao.load(organization.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * Test function getPartyList. Create multiple <Code>Party</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * Query all intances by DAO's <tt>doGetPartyList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       // Create multiple Party instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTestHelper.java :  * Purpose: Defines the test helper class for class Party
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * and its subclasses. Save them into database and query all <Code>Party</Code> instances from 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       // Create instances of Party and its subclasses. Save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and set their attribute registrationDate to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances and set their property registrationDate to value registrationDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       Party anotherParty = dao.load(party.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :          party, anotherParty);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       PartyTestHelper.delete(anotherParty);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :  * Purpose: Defines test class to test the peristence of class Person
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       Party another = dao.load(party.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :  * Test case class to test the persistence of Person
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       assertEquals("Queried result does not equal to updated instance", party, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       PartyTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       Party another = dao.load(party.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * and set their attribute party_ID to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * Test object delete. Create a <Code>Person</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       // Create instances and set their property party_ID to value party_ID
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>surname</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findBySurname</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             Party another = PartyTestHelper.getPartyByPk(resultFound, party.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>name</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             assertEquals("Result returned by find-by-party_ID does not equal to inserted party object.", party, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByName</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             PartyTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * and set their attribute inn to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by find-by-registrationDate does not equal to inserted organization object.", organization, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTestHelper.java :  * Purpose: Defines the test helper class for class Person
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and set their attribute licenceIssueDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       // Create instances and set their property inn to value inn
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>middleName</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByMiddleName</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances and set their property licenceIssueDate to value licenceIssueDate
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             Party another = PartyTestHelper.getPartyByPk(resultFound, party.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>fullName</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             assertEquals("Result returned by find-by-inn does not equal to inserted party object.", party, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             PartyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByFullName</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by find-by-licenceIssueDate does not equal to inserted organization object.", organization, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and set their attribute ifns to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>birthDate</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByBirthDate</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances and set their property ifns to value ifns
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by find-by-ifns does not equal to inserted organization object.", organization, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             Party another = PartyTestHelper.getPartyByPk(resultFound, party.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>documentSeries</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             assertEquals("Result returned by get-party-list does not equal to inserted party object.", party, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByDocumentSeries</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :             PartyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and set their attribute registeredBy to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       Party anotherParty = dao.load(party.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       assertNotNull("Query result is null", anotherParty);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances and set their property registeredBy to value registeredBy
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>documentNumber</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByDocumentNumber</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :  * Purpose: Defines test class to test the peristence of class Phone
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       // if the association's cascade is set to all, save-update
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by find-by-registeredBy does not equal to inserted organization object.", organization, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       assertEquals("Client getClientInfo() is not identical with the queried result! ",
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :          party.getClientInfo(), anotherParty.getClientInfo());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :  * Test case class to test the persistence of Phone
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and set their attribute ogrn to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       java.util.Collection provisionAgreementInfo = anotherParty.getProvisionAgreementInfo();
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>issueOrganization</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByIssueOrganization</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :       java.util.Collection partySourceSystem = anotherParty.getPartySourceSystem();
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :        PartyTestHelper.delete(anotherParty);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances and set their property ogrn to value ogrn
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * subclasses. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>issueDate</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * Test object delete. Create a <Code>Phone</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByIssueDate</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by find-by-ogrn does not equal to inserted organization object.", organization, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * their attribute <Code>phoneNumber</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * by DAO's <tt>findByPhoneNumber</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and set their attribute liquidatEGRCode to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>issuePlace</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :          Party anotherParty  = PartyTestHelper.getPartyByPk(resultList, party.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :      // Create Phone instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByIssuePlace</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * Test function getPhoneList. Create multiple <Code>Phone</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", party, anotherParty);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances and set their property liquidatEGRCode to value liquidatEGRCode
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherParty)));
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :          PartyTestHelper.delete(anotherParty);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * Query all intances by DAO's <tt>doGetPhoneList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       // Create multiple Phone instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>serNumOfDoc</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findBySerNumOfDoc</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PartyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by find-by-liquidatEGRCode does not equal to inserted organization object.", organization, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>citizenship</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByCitizenship</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * and set their attribute referenceLiquidationToken to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       Phone anotherPhone = dao.load(phone.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :          phone, anotherPhone);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       PhoneTestHelper.delete(anotherPhone);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>SNILS</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findBySNILS</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       Phone another = dao.load(phone.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       assertEquals("Queried result does not equal to updated instance", phone, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       PhoneTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :       // Create instances and set their property referenceLiquidationToken to value referenceLiquidationToken
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTestHelper.java :  * Purpose: Defines the test helper class for class Phone
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       Phone another = dao.load(phone.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * and set their attribute phoneNumber to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * their attribute <Code>birthPlace</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * by DAO's <tt>findByBirthPlace</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :      // Create Person instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by find-by-referenceLiquidationToken does not equal to inserted organization object.", organization, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * Test function getPersonList. Create multiple <Code>Person</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * Query all intances by DAO's <tt>doGetPersonList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :       // Create instances and set their property phoneNumber to value phoneNumber
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create multiple Person instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       Person anotherPerson = dao.load(person.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :             Phone another = PhoneTestHelper.getPhoneByPk(resultFound, phone.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :          person, anotherPerson);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :             assertEquals("Result returned by find-by-phoneNumber does not equal to inserted phone object.", phone, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             Organization another = OrganizationTestHelper.getOrganizationByPk(resultFound, organization.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       PersonTestHelper.delete(anotherPerson);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :             PhoneTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             assertEquals("Result returned by get-organization-list does not equal to inserted organization object.", organization, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :             OrganizationTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * subclasses. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       Person another = dao.load(person.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       assertEquals("Queried result does not equal to updated instance", person, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       PersonTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :          Organization anotherOrganization  = OrganizationTestHelper.getOrganizationByPk(resultList, organization.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       Person another = dao.load(person.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :             Phone another = PhoneTestHelper.getPhoneByPk(resultFound, phone.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", organization, anotherOrganization);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :             assertEquals("Result returned by get-phone-list does not equal to inserted phone object.", phone, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherOrganization)));
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :             PhoneTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute surname to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :          OrganizationTestHelper.delete(anotherOrganization);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property surname to value surname
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PhoneTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-surname does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute name to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property name to value name
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\OrganizationTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTestHelper.java :  * Purpose: Defines the test helper class for class ProvisionAgreement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :  * Purpose: Defines test class to test the peristence of class ProvisionAgreement
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-name does not equal to inserted person object.", person, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :  * Test case class to test the persistence of ProvisionAgreement
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute middleName to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property middleName to value middleName
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-middleName does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * Test object delete. Create a <Code>ProvisionAgreement</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * their attribute <Code>startDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * by DAO's <tt>findByStartDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :      // Create ProvisionAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * their attribute <Code>collareteralRights</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * by DAO's <tt>findByCollareteralRights</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :      // Create ProvisionAgreement instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute fullName to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * their attribute <Code>location</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * by DAO's <tt>findByLocation</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :      // Create ProvisionAgreement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * their attribute <Code>analyticalAccount</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property fullName to value fullName
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :  * Purpose: Defines test class to test the peristence of class ProvisionOfCreditAgreement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * by DAO's <tt>findByAnalyticalAccount</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :      // Create ProvisionAgreement instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :  * Test case class to test the persistence of ProvisionOfCreditAgreement
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-fullName does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute birthDate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :     * Test object delete. Create a <Code>ProvisionOfCreditAgreement</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property birthDate to value birthDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * their attribute <Code>planLoanRepaymentDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * by DAO's <tt>findByPlanLoanRepaymentDate</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :     * Test function getProvisionOfCreditAgreementList. Create multiple <Code>ProvisionOfCreditAgreement</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :      // Create ProvisionAgreement instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :     * Query all intances by DAO's <tt>doGetProvisionOfCreditAgreementList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * Test function getProvisionAgreementList. Create multiple <Code>ProvisionAgreement</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       // Create multiple ProvisionOfCreditAgreement instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * Query all intances by DAO's <tt>doGetProvisionAgreementList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       // Create multiple ProvisionAgreement instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       ProvisionOfCreditAgreement anotherProvisionOfCreditAgreement = dao.load(provisionOfCreditAgreement.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :          provisionOfCreditAgreement, anotherProvisionOfCreditAgreement);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-birthDate does not equal to inserted person object.", person, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       ProvisionAgreement anotherProvisionAgreement = dao.load(provisionAgreement.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       ProvisionOfCreditAgreementTestHelper.delete(anotherProvisionOfCreditAgreement);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :          provisionAgreement, anotherProvisionAgreement);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       ProvisionAgreementTestHelper.delete(anotherProvisionAgreement);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute documentSeries to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property documentSeries to value documentSeries
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       ProvisionOfCreditAgreement another = dao.load(provisionOfCreditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       ProvisionAgreement another = dao.load(provisionAgreement.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", provisionOfCreditAgreement, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       ProvisionOfCreditAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", provisionAgreement, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-documentSeries does not equal to inserted person object.", person, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       ProvisionAgreementTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute documentNumber to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       ProvisionAgreement another = dao.load(provisionAgreement.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property documentNumber to value documentNumber
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * and set their attribute startDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       // Create instances and set their property startDate to value startDate
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-documentNumber does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       ProvisionOfCreditAgreement another = dao.load(provisionOfCreditAgreement.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute issueOrganization to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTestHelper.java :  * Purpose: Defines the test helper class for class ProvisionOfCreditAgreement
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property issueOrganization to value issueOrganization
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreement another = ProvisionAgreementTestHelper.getProvisionAgreementByPk(resultFound, provisionAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             assertEquals("Result returned by find-by-startDate does not equal to inserted provisionAgreement object.", provisionAgreement, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-issueOrganization does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :             ProvisionOfCreditAgreement another = ProvisionOfCreditAgreementTestHelper.getProvisionOfCreditAgreementByPk(resultFound, provisionOfCreditAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * and set their attribute collareteralRights to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :             assertEquals("Result returned by get-provisionOfCreditAgreement-list does not equal to inserted provisionOfCreditAgreement object.", provisionOfCreditAgreement, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :             ProvisionOfCreditAgreementTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :  * Purpose: Defines test class to test the peristence of class PublicationsEFRSB
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute issueDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       // Create instances and set their property collareteralRights to value collareteralRights
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property issueDate to value issueDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :  * Test case class to test the persistence of PublicationsEFRSB
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreement another = ProvisionAgreementTestHelper.getProvisionAgreementByPk(resultFound, provisionAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             assertEquals("Result returned by find-by-collareteralRights does not equal to inserted provisionAgreement object.", provisionAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreementTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * and set their attribute location to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-issueDate does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       // Create instances and set their property location to value location
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute issuePlace to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * Test object delete. Create a <Code>PublicationsEFRSB</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property issuePlace to value issuePlace
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>idFile</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByIdFile</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreement another = ProvisionAgreementTestHelper.getProvisionAgreementByPk(resultFound, provisionAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             assertEquals("Result returned by find-by-location does not equal to inserted provisionAgreement object.", provisionAgreement, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreementTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-issuePlace does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * and set their attribute analyticalAccount to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>nameFile</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute serNumOfDoc to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByNameFile</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       // Create instances and set their property analyticalAccount to value analyticalAccount
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property serNumOfDoc to value serNumOfDoc
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>dateNameFile</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByDateNameFile</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-serNumOfDoc does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>nameOfOrganizFromFile</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByNameOfOrganizFromFile</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute citizenship to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property citizenship to value citizenship
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreement another = ProvisionAgreementTestHelper.getProvisionAgreementByPk(resultFound, provisionAgreement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             assertEquals("Result returned by find-by-analyticalAccount does not equal to inserted provisionAgreement object.", provisionAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * and set their attribute planLoanRepaymentDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :       // Create instances and set their property planLoanRepaymentDate to value planLoanRepaymentDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>innFromFile</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByInnFromFile</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>ogrnFromFile</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByOgrnFromFile</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-citizenship does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreement another = ProvisionAgreementTestHelper.getProvisionAgreementByPk(resultFound, provisionAgreement.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute SNILS to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             assertEquals("Result returned by find-by-planLoanRepaymentDate does not equal to inserted provisionAgreement object.", provisionAgreement, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>typeOfSourceFromFile</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreementTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByTypeOfSourceFromFile</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property SNILS to value sNILS
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>typeOfMessageFromFile</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByTypeOfMessageFromFile</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreement another = ProvisionAgreementTestHelper.getProvisionAgreementByPk(resultFound, provisionAgreement.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>numberFromFile</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByNumberFromFile</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             assertEquals("Result returned by get-provisionAgreement-list does not equal to inserted provisionAgreement object.", provisionAgreement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :             ProvisionAgreementTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTestHelper.java :  * Purpose: Defines the test helper class for class PublicationsEFRSB
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-sNILS does not equal to inserted person object.", person, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>publishDateFromFile</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByPublishDateFromFile</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * and set their attribute birthPlace to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :       // Create instances and set their property birthPlace to value birthPlace
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>messageInfoFromFile</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByMessageInfoFromFile</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :  * Purpose: Defines test class to test the peristence of class RefCreditGrantingRegulation
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>codeFromFile</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByCodeFromFile</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by find-by-birthPlace does not equal to inserted person object.", person, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :  * Test case class to test the persistence of RefCreditGrantingRegulation
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>messageDataIDFromFile</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByMessageDataIDFromFile</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             Person another = PersonTestHelper.getPersonByPk(resultFound, person.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * Test object delete. Create a <Code>RefCreditGrantingRegulation</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             assertEquals("Result returned by get-person-list does not equal to inserted person object.", person, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTestHelper.java :  * Purpose: Defines the test helper class for class RefCreditGrantingRegulation
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :             PersonTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>dateIncludeFromFile</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * their attribute <Code>fullDescription</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * by DAO's <tt>findByFullDescription</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findByDateIncludeFromFile</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :      // Create RefCreditGrantingRegulation instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>signOfClientOfBank</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findBySignOfClientOfBank</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PersonTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * Test function getRefCreditGrantingRegulationList. Create multiple <Code>RefCreditGrantingRegulation</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * Query all intances by DAO's <tt>doGetRefCreditGrantingRegulationList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>signOfExistOfProcess</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findBySignOfExistOfProcess</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       // Create multiple RefCreditGrantingRegulation instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * their attribute <Code>signOfExistOfBankruptcy</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * by DAO's <tt>findBySignOfExistOfBankruptcy</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :      // Create PublicationsEFRSB instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * Test function getPublicationsEFRSBList. Create multiple <Code>PublicationsEFRSB</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * Query all intances by DAO's <tt>doGetPublicationsEFRSBList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create multiple PublicationsEFRSB instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       RefCreditGrantingRegulation anotherRefCreditGrantingRegulation = dao.load(refCreditGrantingRegulation.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       PublicationsEFRSB anotherPublicationsEFRSB = dao.load(publicationsEFRSB.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :          refCreditGrantingRegulation, anotherRefCreditGrantingRegulation);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :          publicationsEFRSB, anotherPublicationsEFRSB);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       RefCreditGrantingRegulationTestHelper.delete(anotherRefCreditGrantingRegulation);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       PublicationsEFRSBTestHelper.delete(anotherPublicationsEFRSB);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       RefCreditGrantingRegulation another = dao.load(refCreditGrantingRegulation.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       assertEquals("Queried result does not equal to updated instance", refCreditGrantingRegulation, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       PublicationsEFRSB another = dao.load(publicationsEFRSB.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       RefCreditGrantingRegulationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       assertEquals("Queried result does not equal to updated instance", publicationsEFRSB, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       PublicationsEFRSBTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceActivities
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       RefCreditGrantingRegulation another = dao.load(refCreditGrantingRegulation.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       PublicationsEFRSB another = dao.load(publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * and set their attribute fullDescription to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :  * Test case class to test the persistence of ReferenceActivities
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute idFile to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       // Create instances and set their property fullDescription to value fullDescription
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property idFile to value idFile
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :             RefCreditGrantingRegulation another = RefCreditGrantingRegulationTestHelper.getRefCreditGrantingRegulationByPk(resultFound, refCreditGrantingRegulation.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :     * Test object delete. Create a <Code>ReferenceActivities</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :             assertEquals("Result returned by find-by-fullDescription does not equal to inserted refCreditGrantingRegulation object.", refCreditGrantingRegulation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-idFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :             RefCreditGrantingRegulationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute nameFile to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :     * Test function getReferenceActivitiesList. Create multiple <Code>ReferenceActivities</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property nameFile to value nameFile
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :     * Query all intances by DAO's <tt>doGetReferenceActivitiesList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       // Create multiple ReferenceActivities instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       ReferenceActivities anotherReferenceActivities = dao.load(referenceActivities.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :          referenceActivities, anotherReferenceActivities);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       ReferenceActivitiesTestHelper.delete(anotherReferenceActivities);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :             RefCreditGrantingRegulation another = RefCreditGrantingRegulationTestHelper.getRefCreditGrantingRegulationByPk(resultFound, refCreditGrantingRegulation.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :             assertEquals("Result returned by get-refCreditGrantingRegulation-list does not equal to inserted refCreditGrantingRegulation object.", refCreditGrantingRegulation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-nameFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       ReferenceActivities another = dao.load(referenceActivities.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :             RefCreditGrantingRegulationTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       assertEquals("Queried result does not equal to updated instance", referenceActivities, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute dateNameFile to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       ReferenceActivitiesTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property dateNameFile to value dateNameFile
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       RefCreditGrantingRegulation anotherRefCreditGrantingRegulation = dao.load(refCreditGrantingRegulation.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       assertNotNull("Query result is null", anotherRefCreditGrantingRegulation);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       // if the association's cascade is set to all, save-update
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :       assertEquals("ExtIdentityContainer getExtuids() is not identical with the queried result! ",
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :          refCreditGrantingRegulation.getExtuids(), anotherRefCreditGrantingRegulation.getExtuids());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :        RefCreditGrantingRegulationTestHelper.delete(anotherRefCreditGrantingRegulation);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-dateNameFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute nameOfOrganizFromFile to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property nameOfOrganizFromFile to value nameOfOrganizFromFile
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       ReferenceActivities another = dao.load(referenceActivities.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :             ReferenceActivities another = ReferenceActivitiesTestHelper.getReferenceActivitiesByPk(resultFound, referenceActivities.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :             assertEquals("Result returned by get-referenceActivities-list does not equal to inserted referenceActivities object.", referenceActivities, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceActivities
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :             ReferenceActivitiesTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-nameOfOrganizFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute innFromFile to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property innFromFile to value innFromFile
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceAddressType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :  * Test case class to test the persistence of ReferenceAddressType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-innFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :     * Test object delete. Create a <Code>ReferenceAddressType</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute ogrnFromFile to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :     * Test function getReferenceAddressTypeList. Create multiple <Code>ReferenceAddressType</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceAddressTypeList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceAddressType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property ogrnFromFile to value ogrnFromFile
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       // Create multiple ReferenceAddressType instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-ogrnFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       ReferenceAddressType anotherReferenceAddressType = dao.load(referenceAddressType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :          referenceAddressType, anotherReferenceAddressType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute typeOfSourceFromFile to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       ReferenceAddressTypeTestHelper.delete(anotherReferenceAddressType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property typeOfSourceFromFile to value typeOfSourceFromFile
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       ReferenceAddressType another = dao.load(referenceAddressType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceAddressType, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       ReferenceAddressTypeTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-typeOfSourceFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute typeOfMessageFromFile to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property typeOfMessageFromFile to value typeOfMessageFromFile
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-typeOfMessageFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       ReferenceAddressType another = dao.load(referenceAddressType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute numberFromFile to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property numberFromFile to value numberFromFile
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceBankStructure
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :             ReferenceAddressType another = ReferenceAddressTypeTestHelper.getReferenceAddressTypeByPk(resultFound, referenceAddressType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-numberFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :             assertEquals("Result returned by get-referenceAddressType-list does not equal to inserted referenceAddressType object.", referenceAddressType, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :  * Test case class to test the persistence of ReferenceBankStructure
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :             ReferenceAddressTypeTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute publishDateFromFile to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property publishDateFromFile to value publishDateFromFile
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * Test object delete. Create a <Code>ReferenceBankStructure</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-publishDateFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>terbankCode</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByTerbankCode</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute messageInfoFromFile to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>terbankName</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByTerbankName</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceBankStructure
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>codeOSB</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByCodeOSB</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property messageInfoFromFile to value messageInfoFromFile
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>nameOSB</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByNameOSB</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-messageInfoFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute codeFromFile to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property codeFromFile to value codeFromFile
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>codeGOSB</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByCodeGOSB</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-codeFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>nameGOSB</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByNameGOSB</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute messageDataIDFromFile to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property messageDataIDFromFile to value messageDataIDFromFile
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>codeVSP</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByCodeVSP</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * their attribute <Code>nameVSP</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * by DAO's <tt>findByNameVSP</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :      // Create ReferenceBankStructure instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-messageDataIDFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * Test function getReferenceBankStructureList. Create multiple <Code>ReferenceBankStructure</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * Query all intances by DAO's <tt>doGetReferenceBankStructureList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute dateIncludeFromFile to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create multiple ReferenceBankStructure instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property dateIncludeFromFile to value dateIncludeFromFile
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       ReferenceBankStructure anotherReferenceBankStructure = dao.load(referenceBankStructure.getReferenceBankStructurePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :          referenceBankStructure, anotherReferenceBankStructure);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       ReferenceBankStructureTestHelper.delete(anotherReferenceBankStructure);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-dateIncludeFromFile does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute signOfClientOfBank to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       ReferenceBankStructure another = dao.load(referenceBankStructure.getReferenceBankStructurePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property signOfClientOfBank to value signOfClientOfBank
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceCollateralAgreementType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :  * Test case class to test the persistence of ReferenceCollateralAgreementType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       assertEquals("Queried result does not equal to updated instance", referenceBankStructure, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-signOfClientOfBank does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       ReferenceBankStructureTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute signOfExistOfProcess to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       ReferenceBankStructure another = dao.load(referenceBankStructure.getReferenceBankStructurePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property signOfExistOfProcess to value signOfExistOfProcess
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :     * Test object delete. Create a <Code>ReferenceCollateralAgreementType</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute terbankCode to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property terbankCode to value terbankCode
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :     * Test function getReferenceCollateralAgreementTypeList. Create multiple <Code>ReferenceCollateralAgreementType</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceCollateralAgreementTypeList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       // Create multiple ReferenceCollateralAgreementType instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-terbankCode does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute terbankName to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       ReferenceCollateralAgreementType anotherReferenceCollateralAgreementType = dao.load(referenceCollateralAgreementType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-signOfExistOfProcess does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :          referenceCollateralAgreementType, anotherReferenceCollateralAgreementType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property terbankName to value terbankName
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       ReferenceCollateralAgreementTypeTestHelper.delete(anotherReferenceCollateralAgreementType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * and set their attribute signOfExistOfBankruptcy to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :       // Create instances and set their property signOfExistOfBankruptcy to value signOfExistOfBankruptcy
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceCollateralAgreementType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-terbankName does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute codeOSB to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by find-by-signOfExistOfBankruptcy does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property codeOSB to value codeOSB
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSB another = PublicationsEFRSBTestHelper.getPublicationsEFRSBByPk(resultFound, publicationsEFRSB.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       ReferenceCollateralAgreementType another = dao.load(referenceCollateralAgreementType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceCollateralAgreementType, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       ReferenceCollateralAgreementTypeTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceCountry
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       ReferenceCollateralAgreementType another = dao.load(referenceCollateralAgreementType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-codeOSB does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :  * Test case class to test the persistence of ReferenceCountry
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             assertEquals("Result returned by get-publicationsEFRSB-list does not equal to inserted publicationsEFRSB object.", publicationsEFRSB, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :             PublicationsEFRSBTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute nameOSB to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property nameOSB to value nameOSB
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :     * Test object delete. Create a <Code>ReferenceCountry</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :     * Test function getReferenceCountryList. Create multiple <Code>ReferenceCountry</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :             ReferenceCollateralAgreementType another = ReferenceCollateralAgreementTypeTestHelper.getReferenceCollateralAgreementTypeByPk(resultFound, referenceCollateralAgreementType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :     * Query all intances by DAO's <tt>doGetReferenceCountryList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :             assertEquals("Result returned by get-referenceCollateralAgreementType-list does not equal to inserted referenceCollateralAgreementType object.", referenceCollateralAgreementType, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceCountry
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-nameOSB does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       // Create multiple ReferenceCountry instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :             ReferenceCollateralAgreementTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute codeGOSB to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property codeGOSB to value codeGOSB
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       ReferenceCountry anotherReferenceCountry = dao.load(referenceCountry.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :          referenceCountry, anotherReferenceCountry);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       ReferenceCountryTestHelper.delete(anotherReferenceCountry);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-codeGOSB does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       ReferenceCountry another = dao.load(referenceCountry.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       assertEquals("Queried result does not equal to updated instance", referenceCountry, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       ReferenceCountryTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceCrAgrStatus
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       ReferenceCountry another = dao.load(referenceCountry.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute nameGOSB to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property nameGOSB to value nameGOSB
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :             ReferenceCountry another = ReferenceCountryTestHelper.getReferenceCountryByPk(resultFound, referenceCountry.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceCrAgrStatus
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :  * Test case class to test the persistence of ReferenceCrAgrStatus
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * Test object delete. Create a <Code>ReferenceCrAgrStatus</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceCurrency
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * their attribute <Code>idDRPA</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * by DAO's <tt>findByIdDRPA</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :      // Create ReferenceCrAgrStatus instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :  * Test case class to test the persistence of ReferenceCurrency
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * Test function getReferenceCrAgrStatusList. Create multiple <Code>ReferenceCrAgrStatus</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * Query all intances by DAO's <tt>doGetReferenceCrAgrStatusList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       // Create multiple ReferenceCrAgrStatus instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :     * Test object delete. Create a <Code>ReferenceCurrency</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       ReferenceCrAgrStatus anotherReferenceCrAgrStatus = dao.load(referenceCrAgrStatus.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceCurrency
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :          referenceCrAgrStatus, anotherReferenceCrAgrStatus);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :     * Test function getReferenceCurrencyList. Create multiple <Code>ReferenceCurrency</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       ReferenceCrAgrStatusTestHelper.delete(anotherReferenceCrAgrStatus);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :     * Query all intances by DAO's <tt>doGetReferenceCurrencyList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       // Create multiple ReferenceCurrency instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :             assertEquals("Result returned by get-referenceCountry-list does not equal to inserted referenceCountry object.", referenceCountry, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :             ReferenceCountryTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-nameGOSB does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute codeVSP to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       ReferenceCurrency anotherReferenceCurrency = dao.load(referenceCurrency.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       ReferenceCrAgrStatus another = dao.load(referenceCrAgrStatus.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :          referenceCurrency, anotherReferenceCurrency);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property codeVSP to value codeVSP
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       assertEquals("Queried result does not equal to updated instance", referenceCrAgrStatus, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       ReferenceCurrencyTestHelper.delete(anotherReferenceCurrency);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       ReferenceCrAgrStatusTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-codeVSP does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       ReferenceCrAgrStatus another = dao.load(referenceCrAgrStatus.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       ReferenceCurrency another = dao.load(referenceCurrency.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * and set their attribute nameVSP to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * and set their attribute idDRPA to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :       // Create instances and set their property nameVSP to value nameVSP
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceDebtServicingQuality
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :  * Test case class to test the persistence of ReferenceDebtServicingQuality
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       assertEquals("Queried result does not equal to updated instance", referenceCurrency, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by find-by-nameVSP does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       ReferenceCurrencyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :       // Create instances and set their property idDRPA to value idDRPA
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :     * Test object delete. Create a <Code>ReferenceDebtServicingQuality</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       ReferenceCurrency another = dao.load(referenceCurrency.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :             ReferenceCrAgrStatus another = ReferenceCrAgrStatusTestHelper.getReferenceCrAgrStatusByPk(resultFound, referenceCrAgrStatus.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :     * Test function getReferenceDebtServicingQualityList. Create multiple <Code>ReferenceDebtServicingQuality</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :             assertEquals("Result returned by find-by-idDRPA does not equal to inserted referenceCrAgrStatus object.", referenceCrAgrStatus, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :             ReferenceCrAgrStatusTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :     * Query all intances by DAO's <tt>doGetReferenceDebtServicingQualityList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceDebtServicingQuality
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       // Create multiple ReferenceDebtServicingQuality instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructure another = ReferenceBankStructureTestHelper.getReferenceBankStructureByPk(resultFound, referenceBankStructure.getReferenceBankStructurePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :             ReferenceCurrency another = ReferenceCurrencyTestHelper.getReferenceCurrencyByPk(resultFound, referenceCurrency.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             assertEquals("Result returned by get-referenceBankStructure-list does not equal to inserted referenceBankStructure object.", referenceBankStructure, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :             assertEquals("Result returned by get-referenceCurrency-list does not equal to inserted referenceCurrency object.", referenceCurrency, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :             ReferenceBankStructureTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :             ReferenceCurrencyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :             ReferenceCrAgrStatus another = ReferenceCrAgrStatusTestHelper.getReferenceCrAgrStatusByPk(resultFound, referenceCrAgrStatus.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :             assertEquals("Result returned by get-referenceCrAgrStatus-list does not equal to inserted referenceCrAgrStatus object.", referenceCrAgrStatus, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :             ReferenceCrAgrStatusTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       ReferenceDebtServicingQuality anotherReferenceDebtServicingQuality = dao.load(referenceDebtServicingQuality.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :          referenceDebtServicingQuality, anotherReferenceDebtServicingQuality);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       ReferenceDebtServicingQualityTestHelper.delete(anotherReferenceDebtServicingQuality);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       ReferenceCurrency anotherReferenceCurrency = dao.load(referenceCurrency.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       assertNotNull("Query result is null", anotherReferenceCurrency);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       // if the association's cascade is set to all, save-update
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :       assertEquals("ExtIdentityContainer getExtuids() is not identical with the queried result! ",
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :          referenceCurrency.getExtuids(), anotherReferenceCurrency.getExtuids());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :        ReferenceCurrencyTestHelper.delete(anotherReferenceCurrency);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       ReferenceDebtServicingQuality another = dao.load(referenceDebtServicingQuality.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       assertEquals("Queried result does not equal to updated instance", referenceDebtServicingQuality, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       ReferenceDebtServicingQualityTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       ReferenceDebtServicingQuality another = dao.load(referenceDebtServicingQuality.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceEmailType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :             ReferenceDebtServicingQuality another = ReferenceDebtServicingQualityTestHelper.getReferenceDebtServicingQualityByPk(resultFound, referenceDebtServicingQuality.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :             assertEquals("Result returned by get-referenceDebtServicingQuality-list does not equal to inserted referenceDebtServicingQuality object.", referenceDebtServicingQuality, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :             ReferenceDebtServicingQualityTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :  * Test case class to test the persistence of ReferenceEmailType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       ReferenceDebtServicingQuality anotherReferenceDebtServicingQuality = dao.load(referenceDebtServicingQuality.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       assertNotNull("Query result is null", anotherReferenceDebtServicingQuality);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       // if the association's cascade is set to all, save-update
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :     * Test object delete. Create a <Code>ReferenceEmailType</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :       assertEquals("ExtIdentityContainer getExtuids() is not identical with the queried result! ",
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :          referenceDebtServicingQuality.getExtuids(), anotherReferenceDebtServicingQuality.getExtuids());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :     * Test function getReferenceEmailTypeList. Create multiple <Code>ReferenceEmailType</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :        ReferenceDebtServicingQualityTestHelper.delete(anotherReferenceDebtServicingQuality);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceEmailTypeList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       // Create multiple ReferenceEmailType instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       ReferenceEmailType anotherReferenceEmailType = dao.load(referenceEmailType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :          referenceEmailType, anotherReferenceEmailType);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       ReferenceEmailTypeTestHelper.delete(anotherReferenceEmailType);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       ReferenceEmailType another = dao.load(referenceEmailType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceEmailType, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       ReferenceEmailTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       ReferenceEmailType another = dao.load(referenceEmailType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceEmailType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :             ReferenceEmailType another = ReferenceEmailTypeTestHelper.getReferenceEmailTypeByPk(resultFound, referenceEmailType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :             assertEquals("Result returned by get-referenceEmailType-list does not equal to inserted referenceEmailType object.", referenceEmailType, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :             ReferenceEmailTypeTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceIndustry
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :  * Test case class to test the persistence of ReferenceIndustry
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :     * Test object delete. Create a <Code>ReferenceIndustry</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :     * Test function getReferenceIndustryList. Create multiple <Code>ReferenceIndustry</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :     * Query all intances by DAO's <tt>doGetReferenceIndustryList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       // Create multiple ReferenceIndustry instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       ReferenceIndustry anotherReferenceIndustry = dao.load(referenceIndustry.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :          referenceIndustry, anotherReferenceIndustry);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       ReferenceIndustryTestHelper.delete(anotherReferenceIndustry);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       ReferenceIndustry another = dao.load(referenceIndustry.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       assertEquals("Queried result does not equal to updated instance", referenceIndustry, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       ReferenceIndustryTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceIndustry
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       ReferenceIndustry another = dao.load(referenceIndustry.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :             ReferenceIndustry another = ReferenceIndustryTestHelper.getReferenceIndustryByPk(resultFound, referenceIndustry.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :             assertEquals("Result returned by get-referenceIndustry-list does not equal to inserted referenceIndustry object.", referenceIndustry, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceLegalForm
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :             ReferenceIndustryTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :  * Test case class to test the persistence of ReferenceLegalForm
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * Test object delete. Create a <Code>ReferenceLegalForm</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * their attribute <Code>bpmPOCode</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * by DAO's <tt>findByBpmPOCode</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :      // Create ReferenceLegalForm instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * Test function getReferenceLegalFormList. Create multiple <Code>ReferenceLegalForm</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * Query all intances by DAO's <tt>doGetReferenceLegalFormList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       // Create multiple ReferenceLegalForm instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       ReferenceLegalForm anotherReferenceLegalForm = dao.load(referenceLegalForm.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :          referenceLegalForm, anotherReferenceLegalForm);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       ReferenceLegalFormTestHelper.delete(anotherReferenceLegalForm);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceLegalForm
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       ReferenceLegalForm another = dao.load(referenceLegalForm.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       assertEquals("Queried result does not equal to updated instance", referenceLegalForm, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       ReferenceLegalFormTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       ReferenceLegalForm another = dao.load(referenceLegalForm.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * and set their attribute bpmPOCode to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :       // Create instances and set their property bpmPOCode to value bpmPOCode
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :             ReferenceLegalForm another = ReferenceLegalFormTestHelper.getReferenceLegalFormByPk(resultFound, referenceLegalForm.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :             assertEquals("Result returned by find-by-bpmPOCode does not equal to inserted referenceLegalForm object.", referenceLegalForm, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :             ReferenceLegalFormTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :             ReferenceLegalForm another = ReferenceLegalFormTestHelper.getReferenceLegalFormByPk(resultFound, referenceLegalForm.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :             assertEquals("Result returned by get-referenceLegalForm-list does not equal to inserted referenceLegalForm object.", referenceLegalForm, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :             ReferenceLegalFormTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceLendingModeType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :  * Test case class to test the persistence of ReferenceLendingModeType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :     * Test object delete. Create a <Code>ReferenceLendingModeType</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :     * Test function getReferenceLendingModeTypeList. Create multiple <Code>ReferenceLendingModeType</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceLendingModeTypeList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       // Create multiple ReferenceLendingModeType instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       ReferenceLendingModeType anotherReferenceLendingModeType = dao.load(referenceLendingModeType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :          referenceLendingModeType, anotherReferenceLendingModeType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       ReferenceLendingModeTypeTestHelper.delete(anotherReferenceLendingModeType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       ReferenceLendingModeType another = dao.load(referenceLendingModeType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceLendingModeType, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       ReferenceLendingModeTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       ReferenceLendingModeType another = dao.load(referenceLendingModeType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceLendingModeType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :             ReferenceLendingModeType another = ReferenceLendingModeTypeTestHelper.getReferenceLendingModeTypeByPk(resultFound, referenceLendingModeType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :             assertEquals("Result returned by get-referenceLendingModeType-list does not equal to inserted referenceLendingModeType object.", referenceLendingModeType, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :             ReferenceLendingModeTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       ReferenceLendingModeType anotherReferenceLendingModeType = dao.load(referenceLendingModeType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       assertNotNull("Query result is null", anotherReferenceLendingModeType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       // if the association's cascade is set to all, save-update
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :       assertEquals("ExtIdentityContainer getExtuids() is not identical with the queried result! ",
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :          referenceLendingModeType.getExtuids(), anotherReferenceLendingModeType.getExtuids());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :        ReferenceLendingModeTypeTestHelper.delete(anotherReferenceLendingModeType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceLoanAgrStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :  * Test case class to test the persistence of ReferenceLoanAgrStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :     * Test object delete. Create a <Code>ReferenceLoanAgrStatus</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceLoanAgrStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :     * Test function getReferenceLoanAgrStatusList. Create multiple <Code>ReferenceLoanAgrStatus</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :     * Query all intances by DAO's <tt>doGetReferenceLoanAgrStatusList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       // Create multiple ReferenceLoanAgrStatus instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       ReferenceLoanAgrStatus anotherReferenceLoanAgrStatus = dao.load(referenceLoanAgrStatus.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :          referenceLoanAgrStatus, anotherReferenceLoanAgrStatus);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       ReferenceLoanAgrStatusTestHelper.delete(anotherReferenceLoanAgrStatus);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceLoanQualityCategory
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       ReferenceLoanAgrStatus another = dao.load(referenceLoanAgrStatus.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       assertEquals("Queried result does not equal to updated instance", referenceLoanAgrStatus, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       ReferenceLoanAgrStatusTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :  * Test case class to test the persistence of ReferenceLoanQualityCategory
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       ReferenceLoanAgrStatus another = dao.load(referenceLoanAgrStatus.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * Test object delete. Create a <Code>ReferenceLoanQualityCategory</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * their attribute <Code>idDRPA</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * by DAO's <tt>findByIdDRPA</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :      // Create ReferenceLoanQualityCategory instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * Test function getReferenceLoanQualityCategoryList. Create multiple <Code>ReferenceLoanQualityCategory</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :             ReferenceLoanAgrStatus another = ReferenceLoanAgrStatusTestHelper.getReferenceLoanAgrStatusByPk(resultFound, referenceLoanAgrStatus.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * Query all intances by DAO's <tt>doGetReferenceLoanQualityCategoryList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :             assertEquals("Result returned by get-referenceLoanAgrStatus-list does not equal to inserted referenceLoanAgrStatus object.", referenceLoanAgrStatus, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       // Create multiple ReferenceLoanQualityCategory instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :             ReferenceLoanAgrStatusTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       ReferenceLoanQualityCategory anotherReferenceLoanQualityCategory = dao.load(referenceLoanQualityCategory.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :          referenceLoanQualityCategory, anotherReferenceLoanQualityCategory);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       ReferenceLoanQualityCategoryTestHelper.delete(anotherReferenceLoanQualityCategory);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceLoanQualityCategory
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       ReferenceLoanQualityCategory another = dao.load(referenceLoanQualityCategory.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       assertEquals("Queried result does not equal to updated instance", referenceLoanQualityCategory, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       ReferenceLoanQualityCategoryTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       ReferenceLoanQualityCategory another = dao.load(referenceLoanQualityCategory.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceloanType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :  * Test case class to test the persistence of ReferenceloanType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * and set their attribute idDRPA to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :       // Create instances and set their property idDRPA to value idDRPA
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :     * Test object delete. Create a <Code>ReferenceloanType</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :             ReferenceLoanQualityCategory another = ReferenceLoanQualityCategoryTestHelper.getReferenceLoanQualityCategoryByPk(resultFound, referenceLoanQualityCategory.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :     * Test function getReferenceloanTypeList. Create multiple <Code>ReferenceloanType</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceloanTypeList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :             assertEquals("Result returned by find-by-idDRPA does not equal to inserted referenceLoanQualityCategory object.", referenceLoanQualityCategory, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :             ReferenceLoanQualityCategoryTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       // Create multiple ReferenceloanType instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceloanType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       ReferenceloanType anotherReferenceloanType = dao.load(referenceloanType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :          referenceloanType, anotherReferenceloanType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       ReferenceloanTypeTestHelper.delete(anotherReferenceloanType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       ReferenceloanType another = dao.load(referenceloanType.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :             ReferenceLoanQualityCategory another = ReferenceLoanQualityCategoryTestHelper.getReferenceLoanQualityCategoryByPk(resultFound, referenceLoanQualityCategory.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :             assertEquals("Result returned by get-referenceLoanQualityCategory-list does not equal to inserted referenceLoanQualityCategory object.", referenceLoanQualityCategory, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :             ReferenceLoanQualityCategoryTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceloanType, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       ReferenceloanTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       ReferenceloanType another = dao.load(referenceloanType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :             ReferenceloanType another = ReferenceloanTypeTestHelper.getReferenceloanTypeByPk(resultFound, referenceloanType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceMemberType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :             assertEquals("Result returned by get-referenceloanType-list does not equal to inserted referenceloanType object.", referenceloanType, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :  * Test case class to test the persistence of ReferenceMemberType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :             ReferenceloanTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       ReferenceloanType anotherReferenceloanType = dao.load(referenceloanType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * Test object delete. Create a <Code>ReferenceMemberType</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       assertNotNull("Query result is null", anotherReferenceloanType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       // if the association's cascade is set to all, save-update
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :       assertEquals("ExtIdentityContainer getExtuids() is not identical with the queried result! ",
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :          referenceloanType.getExtuids(), anotherReferenceloanType.getExtuids());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :        ReferenceloanTypeTestHelper.delete(anotherReferenceloanType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * their attribute <Code>bpmPOCode</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * by DAO's <tt>findByBpmPOCode</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :      // Create ReferenceMemberType instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceMemberType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * Test function getReferenceMemberTypeList. Create multiple <Code>ReferenceMemberType</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceMemberTypeList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       // Create multiple ReferenceMemberType instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       ReferenceMemberType anotherReferenceMemberType = dao.load(referenceMemberType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :          referenceMemberType, anotherReferenceMemberType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       ReferenceMemberTypeTestHelper.delete(anotherReferenceMemberType);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       ReferenceMemberType another = dao.load(referenceMemberType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceMemberType, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       ReferenceMemberTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       ReferenceMemberType another = dao.load(referenceMemberType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * and set their attribute bpmPOCode to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :       // Create instances and set their property bpmPOCode to value bpmPOCode
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :             ReferenceMemberType another = ReferenceMemberTypeTestHelper.getReferenceMemberTypeByPk(resultFound, referenceMemberType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :             assertEquals("Result returned by find-by-bpmPOCode does not equal to inserted referenceMemberType object.", referenceMemberType, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :             ReferenceMemberTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceMISProduct
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :             ReferenceMemberType another = ReferenceMemberTypeTestHelper.getReferenceMemberTypeByPk(resultFound, referenceMemberType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :             assertEquals("Result returned by get-referenceMemberType-list does not equal to inserted referenceMemberType object.", referenceMemberType, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :  * Test case class to test the persistence of ReferenceMISProduct
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :             ReferenceMemberTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :     * Test object delete. Create a <Code>ReferenceMISProduct</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :     * Test function getReferenceMISProductList. Create multiple <Code>ReferenceMISProduct</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :     * Query all intances by DAO's <tt>doGetReferenceMISProductList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       // Create multiple ReferenceMISProduct instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       ReferenceMISProduct anotherReferenceMISProduct = dao.load(referenceMISProduct.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :          referenceMISProduct, anotherReferenceMISProduct);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       ReferenceMISProductTestHelper.delete(anotherReferenceMISProduct);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       ReferenceMISProduct another = dao.load(referenceMISProduct.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       assertEquals("Queried result does not equal to updated instance", referenceMISProduct, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       ReferenceMISProductTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceMISProduct
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       ReferenceMISProduct another = dao.load(referenceMISProduct.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :             ReferenceMISProduct another = ReferenceMISProductTestHelper.getReferenceMISProductByPk(resultFound, referenceMISProduct.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :             assertEquals("Result returned by get-referenceMISProduct-list does not equal to inserted referenceMISProduct object.", referenceMISProduct, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :             ReferenceMISProductTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferencePledgeType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :  * Test case class to test the persistence of ReferencePledgeType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :     * Test object delete. Create a <Code>ReferencePledgeType</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :     * Test function getReferencePledgeTypeList. Create multiple <Code>ReferencePledgeType</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :     * Query all intances by DAO's <tt>doGetReferencePledgeTypeList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       // Create multiple ReferencePledgeType instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferencePledgeType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       ReferencePledgeType anotherReferencePledgeType = dao.load(referencePledgeType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :          referencePledgeType, anotherReferencePledgeType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       ReferencePledgeTypeTestHelper.delete(anotherReferencePledgeType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       ReferencePledgeType another = dao.load(referencePledgeType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referencePledgeType, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       ReferencePledgeTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       ReferencePledgeType another = dao.load(referencePledgeType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :             ReferencePledgeType another = ReferencePledgeTypeTestHelper.getReferencePledgeTypeByPk(resultFound, referencePledgeType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :             assertEquals("Result returned by get-referencePledgeType-list does not equal to inserted referencePledgeType object.", referencePledgeType, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :             ReferencePledgeTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceProblemGroup
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :  * Test case class to test the persistence of ReferenceProblemGroup
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :     * Test object delete. Create a <Code>ReferenceProblemGroup</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :     * Test function getReferenceProblemGroupList. Create multiple <Code>ReferenceProblemGroup</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :     * Query all intances by DAO's <tt>doGetReferenceProblemGroupList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       // Create multiple ReferenceProblemGroup instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       ReferenceProblemGroup anotherReferenceProblemGroup = dao.load(referenceProblemGroup.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :          referenceProblemGroup, anotherReferenceProblemGroup);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       ReferenceProblemGroupTestHelper.delete(anotherReferenceProblemGroup);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       ReferenceProblemGroup another = dao.load(referenceProblemGroup.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       assertEquals("Queried result does not equal to updated instance", referenceProblemGroup, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       ReferenceProblemGroupTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceProblemGroup
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       ReferenceProblemGroup another = dao.load(referenceProblemGroup.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :             ReferenceProblemGroup another = ReferenceProblemGroupTestHelper.getReferenceProblemGroupByPk(resultFound, referenceProblemGroup.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :             assertEquals("Result returned by get-referenceProblemGroup-list does not equal to inserted referenceProblemGroup object.", referenceProblemGroup, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :             ReferenceProblemGroupTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceRateStatus
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :  * Test case class to test the persistence of ReferenceRateStatus
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :     * Test object delete. Create a <Code>ReferenceRateStatus</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :     * Test function getReferenceRateStatusList. Create multiple <Code>ReferenceRateStatus</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :     * Query all intances by DAO's <tt>doGetReferenceRateStatusList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       // Create multiple ReferenceRateStatus instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       ReferenceRateStatus anotherReferenceRateStatus = dao.load(referenceRateStatus.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :          referenceRateStatus, anotherReferenceRateStatus);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       ReferenceRateStatusTestHelper.delete(anotherReferenceRateStatus);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceRateStatus
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       ReferenceRateStatus another = dao.load(referenceRateStatus.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       assertEquals("Queried result does not equal to updated instance", referenceRateStatus, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       ReferenceRateStatusTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       ReferenceRateStatus another = dao.load(referenceRateStatus.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceRegionRussia
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :  * Test case class to test the persistence of ReferenceRegionRussia
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :             ReferenceRateStatus another = ReferenceRateStatusTestHelper.getReferenceRateStatusByPk(resultFound, referenceRateStatus.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :     * Test object delete. Create a <Code>ReferenceRegionRussia</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :             assertEquals("Result returned by get-referenceRateStatus-list does not equal to inserted referenceRateStatus object.", referenceRateStatus, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :     * Test function getReferenceRegionRussiaList. Create multiple <Code>ReferenceRegionRussia</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :             ReferenceRateStatusTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :     * Query all intances by DAO's <tt>doGetReferenceRegionRussiaList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       // Create multiple ReferenceRegionRussia instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       ReferenceRegionRussia anotherReferenceRegionRussia = dao.load(referenceRegionRussia.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :          referenceRegionRussia, anotherReferenceRegionRussia);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       ReferenceRegionRussiaTestHelper.delete(anotherReferenceRegionRussia);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       ReferenceRegionRussia another = dao.load(referenceRegionRussia.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       assertEquals("Queried result does not equal to updated instance", referenceRegionRussia, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       ReferenceRegionRussiaTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceRegionRussia
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       ReferenceRegionRussia another = dao.load(referenceRegionRussia.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :             ReferenceRegionRussia another = ReferenceRegionRussiaTestHelper.getReferenceRegionRussiaByPk(resultFound, referenceRegionRussia.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :             assertEquals("Result returned by get-referenceRegionRussia-list does not equal to inserted referenceRegionRussia object.", referenceRegionRussia, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :             ReferenceRegionRussiaTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceResident
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :  * Test case class to test the persistence of ReferenceResident
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :     * Test object delete. Create a <Code>ReferenceResident</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :     * Test function getReferenceResidentList. Create multiple <Code>ReferenceResident</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :     * Query all intances by DAO's <tt>doGetReferenceResidentList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       // Create multiple ReferenceResident instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       ReferenceResident anotherReferenceResident = dao.load(referenceResident.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :          referenceResident, anotherReferenceResident);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       ReferenceResidentTestHelper.delete(anotherReferenceResident);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       ReferenceResident another = dao.load(referenceResident.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       assertEquals("Queried result does not equal to updated instance", referenceResident, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       ReferenceResidentTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       ReferenceResident another = dao.load(referenceResident.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceResident
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :             ReferenceResident another = ReferenceResidentTestHelper.getReferenceResidentByPk(resultFound, referenceResident.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :             assertEquals("Result returned by get-referenceResident-list does not equal to inserted referenceResident object.", referenceResident, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :             ReferenceResidentTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceSegment
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceSegment
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :  * Test case class to test the persistence of ReferenceSegment
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :     * Test object delete. Create a <Code>ReferenceSegment</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :     * Test function getReferenceSegmentList. Create multiple <Code>ReferenceSegment</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :     * Query all intances by DAO's <tt>doGetReferenceSegmentList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       // Create multiple ReferenceSegment instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       ReferenceSegment anotherReferenceSegment = dao.load(referenceSegment.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :          referenceSegment, anotherReferenceSegment);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       ReferenceSegmentTestHelper.delete(anotherReferenceSegment);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceStatusCriteria
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :  * Test case class to test the persistence of ReferenceStatusCriteria
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :     * Test object delete. Create a <Code>ReferenceStatusCriteria</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       ReferenceSegment another = dao.load(referenceSegment.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       assertEquals("Queried result does not equal to updated instance", referenceSegment, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :     * Test function getReferenceStatusCriteriaList. Create multiple <Code>ReferenceStatusCriteria</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       ReferenceSegmentTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :     * Query all intances by DAO's <tt>doGetReferenceStatusCriteriaList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       // Create multiple ReferenceStatusCriteria instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceStatusCriteria
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       ReferenceStatusCriteria anotherReferenceStatusCriteria = dao.load(referenceStatusCriteria.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :          referenceStatusCriteria, anotherReferenceStatusCriteria);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       ReferenceStatusCriteriaTestHelper.delete(anotherReferenceStatusCriteria);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       ReferenceSegment another = dao.load(referenceSegment.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       ReferenceStatusCriteria another = dao.load(referenceStatusCriteria.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       assertEquals("Queried result does not equal to updated instance", referenceStatusCriteria, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       ReferenceStatusCriteriaTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :             ReferenceSegment another = ReferenceSegmentTestHelper.getReferenceSegmentByPk(resultFound, referenceSegment.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :             assertEquals("Result returned by get-referenceSegment-list does not equal to inserted referenceSegment object.", referenceSegment, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :             ReferenceSegmentTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       ReferenceStatusCriteria another = dao.load(referenceStatusCriteria.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :             ReferenceStatusCriteria another = ReferenceStatusCriteriaTestHelper.getReferenceStatusCriteriaByPk(resultFound, referenceStatusCriteria.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :             assertEquals("Result returned by get-referenceStatusCriteria-list does not equal to inserted referenceStatusCriteria object.", referenceStatusCriteria, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :             ReferenceStatusCriteriaTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceStreetType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :  * Test case class to test the persistence of ReferenceStreetType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :     * Test object delete. Create a <Code>ReferenceStreetType</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :     * Test function getReferenceStreetTypeList. Create multiple <Code>ReferenceStreetType</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceStreetTypeList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       // Create multiple ReferenceStreetType instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       ReferenceStreetType anotherReferenceStreetType = dao.load(referenceStreetType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :          referenceStreetType, anotherReferenceStreetType);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       ReferenceStreetTypeTestHelper.delete(anotherReferenceStreetType);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       ReferenceStreetType another = dao.load(referenceStreetType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceStreetType, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       ReferenceStreetTypeTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceStreetType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       ReferenceStreetType another = dao.load(referenceStreetType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :             ReferenceStreetType another = ReferenceStreetTypeTestHelper.getReferenceStreetTypeByPk(resultFound, referenceStreetType.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :             assertEquals("Result returned by get-referenceStreetType-list does not equal to inserted referenceStreetType object.", referenceStreetType, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :             ReferenceStreetTypeTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceTelephonType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :  * Test case class to test the persistence of ReferenceTelephonType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :     * Test object delete. Create a <Code>ReferenceTelephonType</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :     * Test function getReferenceTelephonTypeList. Create multiple <Code>ReferenceTelephonType</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceTelephonTypeList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       // Create multiple ReferenceTelephonType instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       ReferenceTelephonType anotherReferenceTelephonType = dao.load(referenceTelephonType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :          referenceTelephonType, anotherReferenceTelephonType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       ReferenceTelephonTypeTestHelper.delete(anotherReferenceTelephonType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       ReferenceTelephonType another = dao.load(referenceTelephonType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceTelephonType, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       ReferenceTelephonTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       ReferenceTelephonType another = dao.load(referenceTelephonType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :             ReferenceTelephonType another = ReferenceTelephonTypeTestHelper.getReferenceTelephonTypeByPk(resultFound, referenceTelephonType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :             assertEquals("Result returned by get-referenceTelephonType-list does not equal to inserted referenceTelephonType object.", referenceTelephonType, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :             ReferenceTelephonTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceTelephonType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :  * Purpose: Defines test class to test the peristence of class RefIdentificationDocumentKind
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :  * Test case class to test the persistence of RefIdentificationDocumentKind
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :     * Test object delete. Create a <Code>RefIdentificationDocumentKind</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :     * Test function getRefIdentificationDocumentKindList. Create multiple <Code>RefIdentificationDocumentKind</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :     * Query all intances by DAO's <tt>doGetRefIdentificationDocumentKindList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       // Create multiple RefIdentificationDocumentKind instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       RefIdentificationDocumentKind anotherRefIdentificationDocumentKind = dao.load(refIdentificationDocumentKind.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :          refIdentificationDocumentKind, anotherRefIdentificationDocumentKind);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       RefIdentificationDocumentKindTestHelper.delete(anotherRefIdentificationDocumentKind);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       RefIdentificationDocumentKind another = dao.load(refIdentificationDocumentKind.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       assertEquals("Queried result does not equal to updated instance", refIdentificationDocumentKind, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       RefIdentificationDocumentKindTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       RefIdentificationDocumentKind another = dao.load(refIdentificationDocumentKind.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :             RefIdentificationDocumentKind another = RefIdentificationDocumentKindTestHelper.getRefIdentificationDocumentKindByPk(resultFound, refIdentificationDocumentKind.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :             assertEquals("Result returned by get-refIdentificationDocumentKind-list does not equal to inserted refIdentificationDocumentKind object.", refIdentificationDocumentKind, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :             RefIdentificationDocumentKindTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTestHelper.java :  * Purpose: Defines the test helper class for class RefIdentificationDocumentKind
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :  * Purpose: Defines test class to test the peristence of class RelatedBorrowersGroup
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :  * Test case class to test the persistence of RelatedBorrowersGroup
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * Test object delete. Create a <Code>RelatedBorrowersGroup</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * their attribute <Code>gsz_ID</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * by DAO's <tt>findByGsz_ID</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :      // Create RelatedBorrowersGroup instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * their attribute <Code>gsz</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * by DAO's <tt>findByGsz</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :      // Create RelatedBorrowersGroup instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * Test function getRelatedBorrowersGroupList. Create multiple <Code>RelatedBorrowersGroup</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * Query all intances by DAO's <tt>doGetRelatedBorrowersGroupList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTestHelper.java :  * Purpose: Defines the test helper class for class RelatedBorrowersGroup
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       // Create multiple RelatedBorrowersGroup instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       RelatedBorrowersGroup anotherRelatedBorrowersGroup = dao.load(relatedBorrowersGroup.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :          relatedBorrowersGroup, anotherRelatedBorrowersGroup);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       RelatedBorrowersGroupTestHelper.delete(anotherRelatedBorrowersGroup);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       RelatedBorrowersGroup another = dao.load(relatedBorrowersGroup.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       assertEquals("Queried result does not equal to updated instance", relatedBorrowersGroup, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       RelatedBorrowersGroupTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       RelatedBorrowersGroup another = dao.load(relatedBorrowersGroup.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * and set their attribute gsz_ID to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :  * Purpose: Defines test class to test the peristence of class Reserve
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       // Create instances and set their property gsz_ID to value gsz_ID
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :  * Test case class to test the persistence of Reserve
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             RelatedBorrowersGroup another = RelatedBorrowersGroupTestHelper.getRelatedBorrowersGroupByPk(resultFound, relatedBorrowersGroup.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * Test object delete. Create a <Code>Reserve</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             assertEquals("Result returned by find-by-gsz_ID does not equal to inserted relatedBorrowersGroup object.", relatedBorrowersGroup, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             RelatedBorrowersGroupTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * and set their attribute gsz to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * their attribute <Code>calculationDate</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :       // Create instances and set their property gsz to value gsz
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * by DAO's <tt>findByCalculationDate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :      // Create Reserve instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * Test function getReserveList. Create multiple <Code>Reserve</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * Query all intances by DAO's <tt>doGetReserveList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       // Create multiple Reserve instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTestHelper.java :  * Purpose: Defines the test helper class for class Reserve
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       Reserve anotherReserve = dao.load(reserve.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :          reserve, anotherReserve);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       ReserveTestHelper.delete(anotherReserve);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             RelatedBorrowersGroup another = RelatedBorrowersGroupTestHelper.getRelatedBorrowersGroupByPk(resultFound, relatedBorrowersGroup.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             assertEquals("Result returned by find-by-gsz does not equal to inserted relatedBorrowersGroup object.", relatedBorrowersGroup, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             RelatedBorrowersGroupTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       Reserve another = dao.load(reserve.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       assertEquals("Queried result does not equal to updated instance", reserve, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       ReserveTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             RelatedBorrowersGroup another = RelatedBorrowersGroupTestHelper.getRelatedBorrowersGroupByPk(resultFound, relatedBorrowersGroup.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             assertEquals("Result returned by get-relatedBorrowersGroup-list does not equal to inserted relatedBorrowersGroup object.", relatedBorrowersGroup, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :             RelatedBorrowersGroupTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :  * Purpose: Defines test class to test the peristence of class SideType
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       Reserve another = dao.load(reserve.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :  * Test case class to test the persistence of SideType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * and set their attribute calculationDate to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :     * Test object delete. Create a <Code>SideType</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :       // Create instances and set their property calculationDate to value calculationDate
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :     * Test function getSideTypeList. Create multiple <Code>SideType</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :     * Query all intances by DAO's <tt>doGetSideTypeList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       // Create multiple SideType instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :             Reserve another = ReserveTestHelper.getReserveByPk(resultFound, reserve.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       SideType anotherSideType = dao.load(sideType.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :             assertEquals("Result returned by find-by-calculationDate does not equal to inserted reserve object.", reserve, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :          sideType, anotherSideType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :             ReserveTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       SideTypeTestHelper.delete(anotherSideType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       SideType another = dao.load(sideType.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       assertEquals("Queried result does not equal to updated instance", sideType, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       SideTypeTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :             Reserve another = ReserveTestHelper.getReserveByPk(resultFound, reserve.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :             assertEquals("Result returned by get-reserve-list does not equal to inserted reserve object.", reserve, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :             ReserveTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       SideType another = dao.load(sideType.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\ReserveTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :             SideType another = SideTypeTestHelper.getSideTypeByPk(resultFound, sideType.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :             assertEquals("Result returned by get-sideType-list does not equal to inserted sideType object.", sideType, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :             SideTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\SideTypeTestHelper.java :  * Purpose: Defines the test helper class for class SideType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :  * Purpose: Defines test class to test the peristence of class TypeOfSourceAndMessage
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :  * Test case class to test the persistence of TypeOfSourceAndMessage
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTestHelper.java :  * Purpose: Defines the test helper class for class TypeOfSourceAndMessage
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * Test object delete. Create a <Code>TypeOfSourceAndMessage</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * their attribute <Code>messageTypeEFRSB</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * by DAO's <tt>findByMessageTypeEFRSB</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :      // Create TypeOfSourceAndMessage instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * their attribute <Code>valueOfSourceType</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * by DAO's <tt>findByValueOfSourceType</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :      // Create TypeOfSourceAndMessage instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * their attribute <Code>valueOfMessageType</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * by DAO's <tt>findByValueOfMessageType</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :      // Create TypeOfSourceAndMessage instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * Test function getTypeOfSourceAndMessageList. Create multiple <Code>TypeOfSourceAndMessage</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * Query all intances by DAO's <tt>doGetTypeOfSourceAndMessageList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       // Create multiple TypeOfSourceAndMessage instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       TypeOfSourceAndMessage anotherTypeOfSourceAndMessage = dao.load(typeOfSourceAndMessage.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :          typeOfSourceAndMessage, anotherTypeOfSourceAndMessage);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       TypeOfSourceAndMessageTestHelper.delete(anotherTypeOfSourceAndMessage);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       TypeOfSourceAndMessage another = dao.load(typeOfSourceAndMessage.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       assertEquals("Queried result does not equal to updated instance", typeOfSourceAndMessage, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       TypeOfSourceAndMessageTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       TypeOfSourceAndMessage another = dao.load(typeOfSourceAndMessage.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * and set their attribute messageTypeEFRSB to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       // Create instances and set their property messageTypeEFRSB to value messageTypeEFRSB
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessage another = TypeOfSourceAndMessageTestHelper.getTypeOfSourceAndMessageByPk(resultFound, typeOfSourceAndMessage.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             assertEquals("Result returned by find-by-messageTypeEFRSB does not equal to inserted typeOfSourceAndMessage object.", typeOfSourceAndMessage, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessageTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * and set their attribute valueOfSourceType to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       // Create instances and set their property valueOfSourceType to value valueOfSourceType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessage another = TypeOfSourceAndMessageTestHelper.getTypeOfSourceAndMessageByPk(resultFound, typeOfSourceAndMessage.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             assertEquals("Result returned by find-by-valueOfSourceType does not equal to inserted typeOfSourceAndMessage object.", typeOfSourceAndMessage, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessageTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * and set their attribute valueOfMessageType to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :       // Create instances and set their property valueOfMessageType to value valueOfMessageType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessage another = TypeOfSourceAndMessageTestHelper.getTypeOfSourceAndMessageByPk(resultFound, typeOfSourceAndMessage.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             assertEquals("Result returned by find-by-valueOfMessageType does not equal to inserted typeOfSourceAndMessage object.", typeOfSourceAndMessage, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessageTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessage another = TypeOfSourceAndMessageTestHelper.getTypeOfSourceAndMessageByPk(resultFound, typeOfSourceAndMessage.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             assertEquals("Result returned by get-typeOfSourceAndMessage-list does not equal to inserted typeOfSourceAndMessage object.", typeOfSourceAndMessage, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :             TypeOfSourceAndMessageTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :  * Purpose: Defines test class to test the peristence of class AgreedStatus
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTestHelper.java :  * Purpose: Defines the test helper class for class AgreedStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :  * Test case class to test the persistence of AgreedStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :     * Test object delete. Create a <Code>AgreedStatus</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :     * Test function getAgreedStatusList. Create multiple <Code>AgreedStatus</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :     * Query all intances by DAO's <tt>doGetAgreedStatusList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       // Create multiple AgreedStatus instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       AgreedStatus anotherAgreedStatus = dao.load(agreedStatus.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :  * Purpose: Defines test class to test the peristence of class ApplConsiderationResult
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :          agreedStatus, anotherAgreedStatus);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       AgreedStatusTestHelper.delete(anotherAgreedStatus);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :  * Test case class to test the persistence of ApplConsiderationResult
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :     * Test object delete. Create a <Code>ApplConsiderationResult</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       AgreedStatus another = dao.load(agreedStatus.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       assertEquals("Queried result does not equal to updated instance", agreedStatus, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :     * Test function getApplConsiderationResultList. Create multiple <Code>ApplConsiderationResult</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :     * Query all intances by DAO's <tt>doGetApplConsiderationResultList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       AgreedStatusTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTestHelper.java :  * Purpose: Defines the test helper class for class ApplConsiderationResult
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       // Create multiple ApplConsiderationResult instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       AgreedStatus another = dao.load(agreedStatus.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       ApplConsiderationResult anotherApplConsiderationResult = dao.load(applConsiderationResult.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :          applConsiderationResult, anotherApplConsiderationResult);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       ApplConsiderationResultTestHelper.delete(anotherApplConsiderationResult);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       ApplConsiderationResult another = dao.load(applConsiderationResult.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       assertEquals("Queried result does not equal to updated instance", applConsiderationResult, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       ApplConsiderationResultTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :             AgreedStatus another = AgreedStatusTestHelper.getAgreedStatusByPk(resultFound, agreedStatus.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :             assertEquals("Result returned by get-agreedStatus-list does not equal to inserted agreedStatus object.", agreedStatus, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :             AgreedStatusTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       ApplConsiderationResult another = dao.load(applConsiderationResult.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :             ApplConsiderationResult another = ApplConsiderationResultTestHelper.getApplConsiderationResultByPk(resultFound, applConsiderationResult.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :  * Purpose: Defines test class to test the peristence of class ApplicantForBankruptcy
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :             assertEquals("Result returned by get-applConsiderationResult-list does not equal to inserted applConsiderationResult object.", applConsiderationResult, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :             ApplConsiderationResultTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :  * Test case class to test the persistence of ApplicantForBankruptcy
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * Test object delete. Create a <Code>ApplicantForBankruptcy</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>innOfApplicant</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByInnOfApplicant</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>nameOfApplicant</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByNameOfApplicant</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>dateOfFilingApplication</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByDateOfFilingApplication</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>dateOfConsiderationApplication</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByDateOfConsiderationApplication</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>bankruptcyCaseNumber</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTestHelper.java :  * Purpose: Defines the test helper class for class ApplicantForBankruptcy
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByBankruptcyCaseNumber</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>courtCaseOfApplicant</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByCourtCaseOfApplicant</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>numberCaseOfApplicant</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByNumberCaseOfApplicant</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>yearCaseOfApplicant</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByYearCaseOfApplicant</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>commentByApplicant</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByCommentByApplicant</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * their attribute <Code>idOfCourtDecission</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * by DAO's <tt>findByIdOfCourtDecission</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :      // Create ApplicantForBankruptcy instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * Test function getApplicantForBankruptcyList. Create multiple <Code>ApplicantForBankruptcy</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * Query all intances by DAO's <tt>doGetApplicantForBankruptcyList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :  * Purpose: Defines test class to test the peristence of class Au
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :  * Test case class to test the persistence of Au
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTestHelper.java :  * Purpose: Defines the test helper class for class Au
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create multiple ApplicantForBankruptcy instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       ApplicantForBankruptcy anotherApplicantForBankruptcy = dao.load(applicantForBankruptcy.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :          applicantForBankruptcy, anotherApplicantForBankruptcy);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       ApplicantForBankruptcyTestHelper.delete(anotherApplicantForBankruptcy);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       ApplicantForBankruptcy another = dao.load(applicantForBankruptcy.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       assertEquals("Queried result does not equal to updated instance", applicantForBankruptcy, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :  * Purpose: Defines test class to test the peristence of class BankPosition
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       ApplicantForBankruptcyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :  * Test case class to test the persistence of BankPosition
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       ApplicantForBankruptcy another = dao.load(applicantForBankruptcy.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute innOfApplicant to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property innOfApplicant to value innOfApplicant
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * Test object delete. Create a <Code>BankPosition</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * Test object delete. Create a <Code>Au</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>surnameAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findBySurnameAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>nameAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByNameAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>patronomycAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByPatronomycAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :  * Purpose: Defines test class to test the peristence of class Bankruptcy
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>snils</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findBySnils</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :  * Test case class to test the persistence of Bankruptcy
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>registrationNumberOfAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByRegistrationNumberOfAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * Test object delete. Create a <Code>Bankruptcy</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * their attribute <Code>caseOfBankruptcy</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * by DAO's <tt>findByCaseOfBankruptcy</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :      // Create Bankruptcy instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * their attribute <Code>courtCase</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * by DAO's <tt>findByCourtCase</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :      // Create Bankruptcy instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>dateRegistrRosreestrAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByDateRegistrRosreestrAU</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * their attribute <Code>numberCase</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * by DAO's <tt>findByNumberCase</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :      // Create Bankruptcy instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>dateOfInclusionToSROofAU</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTestHelper.java :  * Purpose: Defines the test helper class for class Bankruptcy
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByDateOfInclusionToSROofAU</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * their attribute <Code>yearCase</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * by DAO's <tt>findByYearCase</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>dateOfBirthdayAU</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :      // Create Bankruptcy instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByDateOfBirthdayAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * their attribute <Code>statusOfBankruptcy</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * by DAO's <tt>findByStatusOfBankruptcy</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>addressOfRegistrationOfAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByAddressOfRegistrationOfAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>factAddressOfAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByFactAddressOfAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :      // Create Bankruptcy instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>ratingAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByRatingAU</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * Test function getBankruptcyList. Create multiple <Code>Bankruptcy</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * Query all intances by DAO's <tt>doGetBankruptcyList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       // Create multiple Bankruptcy instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>restrictionOnAppointmnetOfAU</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByRestrictionOnAppointmnetOfAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * their attribute <Code>commentStatement</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       Bankruptcy anotherBankruptcy = dao.load(bankruptcy.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * by DAO's <tt>findByCommentStatement</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :          bankruptcy, anotherBankruptcy);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       BankruptcyTestHelper.delete(anotherBankruptcy);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :  * Purpose: Defines test class to test the peristence of class Claim
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       Bankruptcy another = dao.load(bankruptcy.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       assertEquals("Queried result does not equal to updated instance", bankruptcy, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       BankruptcyTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :  * Test case class to test the persistence of Claim
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :      // Create Au instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTestHelper.java :  * Purpose: Defines the test helper class for class BankPosition
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-innOfApplicant does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute nameOfApplicant to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property nameOfApplicant to value nameOfApplicant
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-nameOfApplicant does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute dateOfFilingApplication to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property dateOfFilingApplication to value dateOfFilingApplication
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * their attribute <Code>client_type</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-dateOfFilingApplication does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * by DAO's <tt>findByClient_type</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute dateOfConsiderationApplication to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :      // Create BankPosition instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * Test function getBankPositionList. Create multiple <Code>BankPosition</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property dateOfConsiderationApplication to value dateOfConsiderationApplication
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * Query all intances by DAO's <tt>doGetBankPositionList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       // Create multiple BankPosition instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       BankPosition anotherBankPosition = dao.load(bankPosition.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :          bankPosition, anotherBankPosition);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       BankPositionTestHelper.delete(anotherBankPosition);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       BankPosition another = dao.load(bankPosition.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       assertEquals("Queried result does not equal to updated instance", bankPosition, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       BankPositionTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTestHelper.java :  * Purpose: Defines the test helper class for class Claim
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-dateOfConsiderationApplication does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute bankruptcyCaseNumber to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property bankruptcyCaseNumber to value bankruptcyCaseNumber
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       BankPosition another = dao.load(bankPosition.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * and set their attribute client_type to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-bankruptcyCaseNumber does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute courtCaseOfApplicant to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :       // Create instances and set their property client_type to value client_type
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property courtCaseOfApplicant to value courtCaseOfApplicant
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :             BankPosition another = BankPositionTestHelper.getBankPositionByPk(resultFound, bankPosition.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :             assertEquals("Result returned by find-by-client_type does not equal to inserted bankPosition object.", bankPosition, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :             BankPositionTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * Test function getAuList. Create multiple <Code>Au</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * Query all intances by DAO's <tt>doGetAuList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * Test object delete. Create a <Code>Claim</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create multiple Au instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       Bankruptcy another = dao.load(bankruptcy.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * their attribute <Code>idClaim</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * by DAO's <tt>findByIdClaim</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       Au anotherAu = dao.load(au.getAuPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :      // Create Claim instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * and set their attribute caseOfBankruptcy to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :          au, anotherAu);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       AuTestHelper.delete(anotherAu);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * their attribute <Code>signOfIncluding</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * by DAO's <tt>findBySignOfIncluding</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :      // Create Claim instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       // Create instances and set their property caseOfBankruptcy to value caseOfBankruptcy
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       Au another = dao.load(au.getAuPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * Test function getClaimList. Create multiple <Code>Claim</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       assertEquals("Queried result does not equal to updated instance", au, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * Query all intances by DAO's <tt>doGetClaimList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       AuTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       // Create multiple Claim instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             Bankruptcy another = BankruptcyTestHelper.getBankruptcyByPk(resultFound, bankruptcy.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             assertEquals("Result returned by find-by-caseOfBankruptcy does not equal to inserted bankruptcy object.", bankruptcy, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       Au another = dao.load(au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             BankruptcyTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * and set their attribute courtCase to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute surnameAU to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       Claim anotherClaim = dao.load(claim.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :          claim, anotherClaim);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       ClaimTestHelper.delete(anotherClaim);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property surnameAU to value surnameAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       Claim another = dao.load(claim.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-surnameAU does not equal to inserted au object.", au, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       // Create instances and set their property courtCase to value courtCase
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute nameAU to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property nameAU to value nameAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       assertEquals("Queried result does not equal to updated instance", claim, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       ClaimTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             Bankruptcy another = BankruptcyTestHelper.getBankruptcyByPk(resultFound, bankruptcy.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             assertEquals("Result returned by find-by-courtCase does not equal to inserted bankruptcy object.", bankruptcy, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             BankruptcyTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * and set their attribute numberCase to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTestHelper.java :  * Purpose: Defines the test helper class for class Conclusion
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       Claim another = dao.load(claim.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * and set their attribute idClaim to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       // Create instances and set their property numberCase to value numberCase
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       // Create instances and set their property idClaim to value idClaim
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             Bankruptcy another = BankruptcyTestHelper.getBankruptcyByPk(resultFound, bankruptcy.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-nameAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             assertEquals("Result returned by find-by-numberCase does not equal to inserted bankruptcy object.", bankruptcy, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute patronomycAU to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             BankruptcyTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             Claim another = ClaimTestHelper.getClaimByPk(resultFound, claim.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             assertEquals("Result returned by find-by-idClaim does not equal to inserted claim object.", claim, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * and set their attribute yearCase to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             ClaimTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property patronomycAU to value patronomycAU
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       // Create instances and set their property yearCase to value yearCase
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * and set their attribute signOfIncluding to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :       // Create instances and set their property signOfIncluding to value signOfIncluding
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-patronomycAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             Bankruptcy another = BankruptcyTestHelper.getBankruptcyByPk(resultFound, bankruptcy.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute snils to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :             BankPosition another = BankPositionTestHelper.getBankPositionByPk(resultFound, bankPosition.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-courtCaseOfApplicant does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :             assertEquals("Result returned by get-bankPosition-list does not equal to inserted bankPosition object.", bankPosition, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :             BankPositionTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :  * Purpose: Defines test class to test the peristence of class Conclusion
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute numberCaseOfApplicant to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :  * Test case class to test the persistence of Conclusion
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * Test object delete. Create a <Code>Conclusion</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property numberCaseOfApplicant to value numberCaseOfApplicant
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * their attribute <Code>sufficiencyOfDebtor</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * by DAO's <tt>findBySufficiencyOfDebtor</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :      // Create Conclusion instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-numberCaseOfApplicant does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * their attribute <Code>possibilityOfRecovery</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property snils to value snils
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             Claim another = ClaimTestHelper.getClaimByPk(resultFound, claim.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             assertEquals("Result returned by find-by-signOfIncluding does not equal to inserted claim object.", claim, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             assertEquals("Result returned by find-by-yearCase does not equal to inserted bankruptcy object.", bankruptcy, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             ClaimTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             BankruptcyTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-snils does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * and set their attribute statusOfBankruptcy to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute registrationNumberOfAU to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :       // Create instances and set their property statusOfBankruptcy to value statusOfBankruptcy
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property registrationNumberOfAU to value registrationNumberOfAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             Claim another = ClaimTestHelper.getClaimByPk(resultFound, claim.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             assertEquals("Result returned by get-claim-list does not equal to inserted claim object.", claim, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :             ClaimTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-registrationNumberOfAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute dateRegistrRosreestrAU to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             Bankruptcy another = BankruptcyTestHelper.getBankruptcyByPk(resultFound, bankruptcy.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             assertEquals("Result returned by find-by-statusOfBankruptcy does not equal to inserted bankruptcy object.", bankruptcy, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property dateRegistrRosreestrAU to value dateRegistrRosreestrAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ClaimTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             BankruptcyTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-dateRegistrRosreestrAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute dateOfInclusionToSROofAU to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             Bankruptcy another = BankruptcyTestHelper.getBankruptcyByPk(resultFound, bankruptcy.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             assertEquals("Result returned by get-bankruptcy-list does not equal to inserted bankruptcy object.", bankruptcy, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property dateOfInclusionToSROofAU to value dateOfInclusionToSROofAU
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :             BankruptcyTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute yearCaseOfApplicant to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * by DAO's <tt>findByPossibilityOfRecovery</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property yearCaseOfApplicant to value yearCaseOfApplicant
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :      // Create Conclusion instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * their attribute <Code>signOfFraudulentBankruptcy</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * by DAO's <tt>findBySignOfFraudulentBankruptcy</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-yearCaseOfApplicant does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :      // Create Conclusion instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute commentByApplicant to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * their attribute <Code>signOfDeliberateBankruptcy</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * by DAO's <tt>findBySignOfDeliberateBankruptcy</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property commentByApplicant to value commentByApplicant
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :      // Create Conclusion instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-dateOfInclusionToSROofAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute dateOfBirthdayAU to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property dateOfBirthdayAU to value dateOfBirthdayAU
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-dateOfBirthdayAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute addressOfRegistrationOfAU to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property addressOfRegistrationOfAU to value addressOfRegistrationOfAU
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-addressOfRegistrationOfAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute factAddressOfAU to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property factAddressOfAU to value factAddressOfAU
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-factAddressOfAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute ratingAU to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property ratingAU to value ratingAU
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-ratingAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute restrictionOnAppointmnetOfAU to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property restrictionOnAppointmnetOfAU to value restrictionOnAppointmnetOfAU
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-restrictionOnAppointmnetOfAU does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * Test function getConclusionList. Create multiple <Code>Conclusion</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-commentByApplicant does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * Query all intances by DAO's <tt>doGetConclusionList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * and set their attribute idOfCourtDecission to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       // Create multiple Conclusion instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * and set their attribute commentStatement to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :       // Create instances and set their property idOfCourtDecission to value idOfCourtDecission
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       Conclusion anotherConclusion = dao.load(conclusion.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :       // Create instances and set their property commentStatement to value commentStatement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :          conclusion, anotherConclusion);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       ConclusionTestHelper.delete(anotherConclusion);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by find-by-idOfCourtDecission does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       Conclusion another = dao.load(conclusion.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       assertEquals("Queried result does not equal to updated instance", conclusion, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       ConclusionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by find-by-commentStatement does not equal to inserted au object.", au, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcy another = ApplicantForBankruptcyTestHelper.getApplicantForBankruptcyByPk(resultFound, applicantForBankruptcy.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             assertEquals("Result returned by get-applicantForBankruptcy-list does not equal to inserted applicantForBankruptcy object.", applicantForBankruptcy, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :             ApplicantForBankruptcyTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       Conclusion another = dao.load(conclusion.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             Au another = AuTestHelper.getAuByPk(resultFound, au.getAuPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * and set their attribute sufficiencyOfDebtor to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             assertEquals("Result returned by get-au-list does not equal to inserted au object.", au, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :             AuTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       // Create instances and set their property sufficiencyOfDebtor to value sufficiencyOfDebtor
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\AuTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             Conclusion another = ConclusionTestHelper.getConclusionByPk(resultFound, conclusion.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             assertEquals("Result returned by find-by-sufficiencyOfDebtor does not equal to inserted conclusion object.", conclusion, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             ConclusionTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * and set their attribute possibilityOfRecovery to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       // Create instances and set their property possibilityOfRecovery to value possibilityOfRecovery
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             Conclusion another = ConclusionTestHelper.getConclusionByPk(resultFound, conclusion.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             assertEquals("Result returned by find-by-possibilityOfRecovery does not equal to inserted conclusion object.", conclusion, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             ConclusionTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * and set their attribute signOfFraudulentBankruptcy to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       // Create instances and set their property signOfFraudulentBankruptcy to value signOfFraudulentBankruptcy
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             Conclusion another = ConclusionTestHelper.getConclusionByPk(resultFound, conclusion.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             assertEquals("Result returned by find-by-signOfFraudulentBankruptcy does not equal to inserted conclusion object.", conclusion, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             ConclusionTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * and set their attribute signOfDeliberateBankruptcy to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :       // Create instances and set their property signOfDeliberateBankruptcy to value signOfDeliberateBankruptcy
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             Conclusion another = ConclusionTestHelper.getConclusionByPk(resultFound, conclusion.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             assertEquals("Result returned by find-by-signOfDeliberateBankruptcy does not equal to inserted conclusion object.", conclusion, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             ConclusionTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             Conclusion another = ConclusionTestHelper.getConclusionByPk(resultFound, conclusion.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             assertEquals("Result returned by get-conclusion-list does not equal to inserted conclusion object.", conclusion, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :             ConclusionTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\dao\RationaleForInitDao.java :     * Find <Code>RationaleForInit</Code> instances from persistence store by attribute otherRationale
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\dao\RationaleForInitDao.java :     * @param otherRationale
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\dao\RationaleForInitDao.java :    public List findByOtherRationale(String otherRationale) throws DaoException;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\dao\RationaleForInitDao.java :     * persistence store by attribute otherRationale
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\dao\RationaleForInitDao.java :     * @param otherRationale
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\dao\RationaleForInitDao.java :    public List findByOtherRationale(String otherRationale, int firstResult, int maxResult) throws DaoException;
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :    private static final String FIND_BY_PROPERTY_OTHERRATIONALE = "Select o from RationaleForInit o where o.otherRationale = :otherRationale";
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :       if (!(rationaleForInitObject.getOtherRationale() == null || (rationaleForInitObject.getOtherRationale() != null && rationaleForInitObject.getOtherRationale().equals("")))) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :          buffer.append(" and o.otherRationale = :otherRationale");
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :          paramNames.add("otherRationale");
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :          params.add(rationaleForInitObject.getOtherRationale());      
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :     * @see ru.sbrf.uvz.model.bankruptcy.dao.RationaleForInitDao#findByOtherRationale(String)
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :    public List findByOtherRationale(String otherRationale) throws DaoException{
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERRATIONALE, "otherRationale", otherRationale);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :     * @see ru.sbrf.uvz.model.bankruptcy.dao.RationaleForInitDao#findByOtherRationale(String, int, int)
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :    public List findByOtherRationale(String otherRationale, int firstResult, int maxResult) throws DaoException {   
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERRATIONALE, "otherRationale", otherRationale, firstResult, maxResult); 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :  * Purpose: Defines test class to test the peristence of class HistoryOfAUForSRO
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :  * Test case class to test the persistence of HistoryOfAUForSRO
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * Test object delete. Create a <Code>HistoryOfAUForSRO</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * their attribute <Code>dateOfBeginForAU</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * by DAO's <tt>findByDateOfBeginForAU</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :      // Create HistoryOfAUForSRO instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * their attribute <Code>dateOfEndForAU</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * by DAO's <tt>findByDateOfEndForAU</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :      // Create HistoryOfAUForSRO instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * Test function getHistoryOfAUForSROList. Create multiple <Code>HistoryOfAUForSRO</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * Query all intances by DAO's <tt>doGetHistoryOfAUForSROList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       // Create multiple HistoryOfAUForSRO instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       HistoryOfAUForSRO anotherHistoryOfAUForSRO = dao.load(historyOfAUForSRO.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :          historyOfAUForSRO, anotherHistoryOfAUForSRO);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTestHelper.java :  * Purpose: Defines the test helper class for class HistoryOfAUForSRO
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       HistoryOfAUForSROTestHelper.delete(anotherHistoryOfAUForSRO);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       HistoryOfAUForSRO another = dao.load(historyOfAUForSRO.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       assertEquals("Queried result does not equal to updated instance", historyOfAUForSRO, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       HistoryOfAUForSROTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       HistoryOfAUForSRO another = dao.load(historyOfAUForSRO.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * and set their attribute dateOfBeginForAU to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       // Create instances and set their property dateOfBeginForAU to value dateOfBeginForAU
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :  * Purpose: Defines test class to test the peristence of class HistoryOfAU
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             HistoryOfAUForSRO another = HistoryOfAUForSROTestHelper.getHistoryOfAUForSROByPk(resultFound, historyOfAUForSRO.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             assertEquals("Result returned by find-by-dateOfBeginForAU does not equal to inserted historyOfAUForSRO object.", historyOfAUForSRO, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             HistoryOfAUForSROTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :  * Test case class to test the persistence of HistoryOfAU
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTestHelper.java :  * Purpose: Defines the test helper class for class HistoryOfAU
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * and set their attribute dateOfEndForAU to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :       // Create instances and set their property dateOfEndForAU to value dateOfEndForAU
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * Test object delete. Create a <Code>HistoryOfAU</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>surnameAU</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findBySurnameAU</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>nameAU</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findByNameAU</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>patronomycAU</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findByPatronomycAU</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             HistoryOfAUForSRO another = HistoryOfAUForSROTestHelper.getHistoryOfAUForSROByPk(resultFound, historyOfAUForSRO.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>dateOfBeginForAU</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findByDateOfBeginForAU</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>dateOfEndForAU</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findByDateOfEndForAU</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             assertEquals("Result returned by find-by-dateOfEndForAU does not equal to inserted historyOfAUForSRO object.", historyOfAUForSRO, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :  * Purpose: Defines test class to test the peristence of class HistoryOfSRO
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :  * Test case class to test the persistence of HistoryOfSRO
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>signOfLoyaltyAUInHistory</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findBySignOfLoyaltyAUInHistory</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * Test object delete. Create a <Code>HistoryOfSRO</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTestHelper.java :  * Purpose: Defines the test helper class for class HistoryOfSRO
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * their attribute <Code>signOfApprovalForSRO</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>dateOfNonLoyaltyForAU</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * by DAO's <tt>findBySignOfApprovalForSRO</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findByDateOfNonLoyaltyForAU</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :      // Create HistoryOfSRO instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * their attribute <Code>approvalDateOfSRO</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>dateOfDisqualification</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * by DAO's <tt>findByApprovalDateOfSRO</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findByDateOfDisqualification</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :      // Create HistoryOfSRO instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * their attribute <Code>completionDateForSRO</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>numberOfDisqualification</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * by DAO's <tt>findByCompletionDateForSRO</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findByNumberOfDisqualification</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :      // Create HistoryOfSRO instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * their attribute <Code>dateOfAppointmentOfSROFromCA</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * their attribute <Code>signOfCurrentSROAndAU</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * by DAO's <tt>findByDateOfAppointmentOfSROFromCA</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * by DAO's <tt>findBySignOfCurrentSROAndAU</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :      // Create HistoryOfSRO instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :      // Create HistoryOfAU instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * Test function getHistoryOfAUList. Create multiple <Code>HistoryOfAU</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTestHelper.java :  * Purpose: Defines the test helper class for class MeetingIniciator
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :  * Purpose: Defines test class to test the peristence of class MeetingIniciator
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :  * Test case class to test the persistence of MeetingIniciator
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :  * Purpose: Defines test class to test the peristence of class PossiblyStageOfBankruptcy
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :  * Test case class to test the persistence of PossiblyStageOfBankruptcy
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * Test object delete. Create a <Code>PossiblyStageOfBankruptcy</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * their attribute <Code>nameOfStage</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * by DAO's <tt>findByNameOfStage</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :      // Create PossiblyStageOfBankruptcy instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * their attribute <Code>client_type</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * by DAO's <tt>findByClient_type</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :      // Create PossiblyStageOfBankruptcy instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * Test function getPossiblyStageOfBankruptcyList. Create multiple <Code>PossiblyStageOfBankruptcy</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTestHelper.java :  * Purpose: Defines the test helper class for class MeetingOfCreditors
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * Query all intances by DAO's <tt>doGetPossiblyStageOfBankruptcyList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       // Create multiple PossiblyStageOfBankruptcy instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       PossiblyStageOfBankruptcy anotherPossiblyStageOfBankruptcy = dao.load(possiblyStageOfBankruptcy.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :          possiblyStageOfBankruptcy, anotherPossiblyStageOfBankruptcy);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       PossiblyStageOfBankruptcyTestHelper.delete(anotherPossiblyStageOfBankruptcy);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       PossiblyStageOfBankruptcy another = dao.load(possiblyStageOfBankruptcy.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       assertEquals("Queried result does not equal to updated instance", possiblyStageOfBankruptcy, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       PossiblyStageOfBankruptcyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             HistoryOfAUForSROTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       PossiblyStageOfBankruptcy another = dao.load(possiblyStageOfBankruptcy.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * and set their attribute nameOfStage to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       // Create instances and set their property nameOfStage to value nameOfStage
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             HistoryOfAUForSRO another = HistoryOfAUForSROTestHelper.getHistoryOfAUForSROByPk(resultFound, historyOfAUForSRO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             PossiblyStageOfBankruptcy another = PossiblyStageOfBankruptcyTestHelper.getPossiblyStageOfBankruptcyByPk(resultFound, possiblyStageOfBankruptcy.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             assertEquals("Result returned by get-historyOfAUForSRO-list does not equal to inserted historyOfAUForSRO object.", historyOfAUForSRO, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :             HistoryOfAUForSROTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-nameOfStage does not equal to inserted possiblyStageOfBankruptcy object.", possiblyStageOfBankruptcy, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             PossiblyStageOfBankruptcyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * and set their attribute client_type to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :       // Create instances and set their property client_type to value client_type
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             PossiblyStageOfBankruptcy another = PossiblyStageOfBankruptcyTestHelper.getPossiblyStageOfBankruptcyByPk(resultFound, possiblyStageOfBankruptcy.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-client_type does not equal to inserted possiblyStageOfBankruptcy object.", possiblyStageOfBankruptcy, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             PossiblyStageOfBankruptcyTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :     * Test object delete. Create a <Code>MeetingIniciator</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :  * Purpose: Defines test class to test the peristence of class MeetingOfCreditors
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * Test function getHistoryOfSROList. Create multiple <Code>HistoryOfSRO</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :     * Test function getMeetingIniciatorList. Create multiple <Code>MeetingIniciator</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * Query all intances by DAO's <tt>doGetHistoryOfSROList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :  * Test case class to test the persistence of MeetingOfCreditors
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :     * Query all intances by DAO's <tt>doGetMeetingIniciatorList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       // Create multiple MeetingIniciator instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       // Create multiple HistoryOfSRO instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       MeetingIniciator anotherMeetingIniciator = dao.load(meetingIniciator.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       HistoryOfSRO anotherHistoryOfSRO = dao.load(historyOfSRO.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * Test object delete. Create a <Code>MeetingOfCreditors</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :          meetingIniciator, anotherMeetingIniciator);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :          historyOfSRO, anotherHistoryOfSRO);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       MeetingIniciatorTestHelper.delete(anotherMeetingIniciator);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       HistoryOfSROTestHelper.delete(anotherHistoryOfSRO);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>idOfMeeting</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByIdOfMeeting</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       MeetingIniciator another = dao.load(meetingIniciator.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       assertEquals("Queried result does not equal to updated instance", meetingIniciator, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>briefAgenda</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       HistoryOfSRO another = dao.load(historyOfSRO.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByBriefAgenda</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       MeetingIniciatorTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       assertEquals("Queried result does not equal to updated instance", historyOfSRO, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       HistoryOfSROTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>plannedDateOfMeeting</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByPlannedDateOfMeeting</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       HistoryOfSRO another = dao.load(historyOfSRO.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * and set their attribute signOfApprovalForSRO to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>meetingTime</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTestHelper.java :  * Purpose: Defines the test helper class for class PossiblyStageOfBankruptcy
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByMeetingTime</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       // Create instances and set their property signOfApprovalForSRO to value signOfApprovalForSRO
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       MeetingIniciator another = dao.load(meetingIniciator.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :  * Purpose: Defines test class to test the peristence of class Publication
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :  * Test case class to test the persistence of Publication
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSRO another = HistoryOfSROTestHelper.getHistoryOfSROByPk(resultFound, historyOfSRO.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             assertEquals("Result returned by find-by-signOfApprovalForSRO does not equal to inserted historyOfSRO object.", historyOfSRO, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>meetingPlace</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSROTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByMeetingPlace</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * and set their attribute approvalDateOfSRO to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :             MeetingIniciator another = MeetingIniciatorTestHelper.getMeetingIniciatorByPk(resultFound, meetingIniciator.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :             assertEquals("Result returned by get-meetingIniciator-list does not equal to inserted meetingIniciator object.", meetingIniciator, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :             MeetingIniciatorTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>userComment</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByUserComment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * Test object delete. Create a <Code>Publication</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>factComment</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>messageDataID</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByFactComment</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByMessageDataID</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       // Create instances and set their property approvalDateOfSRO to value approvalDateOfSRO
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * Query all intances by DAO's <tt>doGetHistoryOfAUList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>managerComment</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByManagerComment</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>dateOfPublication</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByDateOfPublication</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>signOfAgreed</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findBySignOfAgreed</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>textOfPublication</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             PossiblyStageOfBankruptcy another = PossiblyStageOfBankruptcyTestHelper.getPossiblyStageOfBankruptcyByPk(resultFound, possiblyStageOfBankruptcy.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByTextOfPublication</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             assertEquals("Result returned by get-possiblyStageOfBankruptcy-list does not equal to inserted possiblyStageOfBankruptcy object.", possiblyStageOfBankruptcy, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :             PossiblyStageOfBankruptcyTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>desicionDateTime</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByDesicionDateTime</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>sourceOfPublication</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findBySourceOfPublication</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * their attribute <Code>agreedFIO</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * by DAO's <tt>findByAgreedFIO</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :      // Create MeetingOfCreditors instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>idDocument</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * Test function getMeetingOfCreditorsList. Create multiple <Code>MeetingOfCreditors</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * Query all intances by DAO's <tt>doGetMeetingOfCreditorsList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create multiple MeetingOfCreditors instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByIdDocument</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>fullNameEFRSB</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByFullNameEFRSB</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTestHelper.java :  * Purpose: Defines the test helper class for class Publication
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create multiple HistoryOfAU instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :  * Purpose: Defines test class to test the peristence of class QuestionForMeeting
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :  * Test case class to test the persistence of QuestionForMeeting
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * Test object delete. Create a <Code>QuestionForMeeting</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * their attribute <Code>textOfQuestion</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       HistoryOfAU anotherHistoryOfAU = dao.load(historyOfAU.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * by DAO's <tt>findByTextOfQuestion</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :          historyOfAU, anotherHistoryOfAU);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       HistoryOfAUTestHelper.delete(anotherHistoryOfAU);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :      // Create QuestionForMeeting instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * their attribute <Code>decisionByQuestion</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * by DAO's <tt>findByDecisionByQuestion</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       HistoryOfAU another = dao.load(historyOfAU.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :      // Create QuestionForMeeting instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       assertEquals("Queried result does not equal to updated instance", historyOfAU, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       HistoryOfAUTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * their attribute <Code>offeredPosition</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * by DAO's <tt>findByOfferedPosition</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :      // Create QuestionForMeeting instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       HistoryOfAU another = dao.load(historyOfAU.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * their attribute <Code>agreedPosition</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute surnameAU to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * by DAO's <tt>findByAgreedPosition</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSRO another = HistoryOfSROTestHelper.getHistoryOfSROByPk(resultFound, historyOfSRO.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             assertEquals("Result returned by find-by-approvalDateOfSRO does not equal to inserted historyOfSRO object.", historyOfSRO, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property surnameAU to value surnameAU
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSROTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * and set their attribute completionDateForSRO to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :      // Create QuestionForMeeting instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       // Create instances and set their property completionDateForSRO to value completionDateForSRO
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTestHelper.java :  * Purpose: Defines the test helper class for class QuestionForMeeting
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-surnameAU does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute nameAU to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSRO another = HistoryOfSROTestHelper.getHistoryOfSROByPk(resultFound, historyOfSRO.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             assertEquals("Result returned by find-by-completionDateForSRO does not equal to inserted historyOfSRO object.", historyOfSRO, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSROTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property nameAU to value nameAU
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * and set their attribute dateOfAppointmentOfSROFromCA to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * Test function getQuestionForMeetingList. Create multiple <Code>QuestionForMeeting</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * Query all intances by DAO's <tt>doGetQuestionForMeetingList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :       // Create instances and set their property dateOfAppointmentOfSROFromCA to value dateOfAppointmentOfSROFromCA
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       // Create multiple QuestionForMeeting instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-nameAU does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute patronomycAU to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSRO another = HistoryOfSROTestHelper.getHistoryOfSROByPk(resultFound, historyOfSRO.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       QuestionForMeeting anotherQuestionForMeeting = dao.load(questionForMeeting.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :          questionForMeeting, anotherQuestionForMeeting);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             assertEquals("Result returned by find-by-dateOfAppointmentOfSROFromCA does not equal to inserted historyOfSRO object.", historyOfSRO, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSROTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       QuestionForMeetingTestHelper.delete(anotherQuestionForMeeting);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       QuestionForMeeting another = dao.load(questionForMeeting.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property patronomycAU to value patronomycAU
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       assertEquals("Queried result does not equal to updated instance", questionForMeeting, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       QuestionForMeetingTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       MeetingOfCreditors anotherMeetingOfCreditors = dao.load(meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :          meetingOfCreditors, anotherMeetingOfCreditors);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       MeetingOfCreditorsTestHelper.delete(anotherMeetingOfCreditors);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSRO another = HistoryOfSROTestHelper.getHistoryOfSROByPk(resultFound, historyOfSRO.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>innFirmEFRSB</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       MeetingOfCreditors another = dao.load(meetingOfCreditors.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             assertEquals("Result returned by get-historyOfSRO-list does not equal to inserted historyOfSRO object.", historyOfSRO, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       assertEquals("Queried result does not equal to updated instance", meetingOfCreditors, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       QuestionForMeeting another = dao.load(questionForMeeting.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :             HistoryOfSROTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByInnFirmEFRSB</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       MeetingOfCreditorsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * and set their attribute textOfQuestion to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>ogrnFirmEFRSB</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByOgrnFirmEFRSB</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       MeetingOfCreditors another = dao.load(meetingOfCreditors.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       // Create instances and set their property textOfQuestion to value textOfQuestion
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute idOfMeeting to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * their attribute <Code>typeMessageEFRSB</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * by DAO's <tt>findByTypeMessageEFRSB</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property idOfMeeting to value idOfMeeting
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :      // Create Publication instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * Test function getPublicationList. Create multiple <Code>Publication</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeeting another = QuestionForMeetingTestHelper.getQuestionForMeetingByPk(resultFound, questionForMeeting.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * Query all intances by DAO's <tt>doGetPublicationList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             assertEquals("Result returned by find-by-textOfQuestion does not equal to inserted questionForMeeting object.", questionForMeeting, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create multiple Publication instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeetingTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-idOfMeeting does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * and set their attribute decisionByQuestion to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute briefAgenda to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTestHelper.java :  * Purpose: Defines the test helper class for class RationaleForInit
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-patronomycAU does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :  * Purpose: Defines test class to test the peristence of class RationaleForInit
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTestHelper.java :       persistentObject.setOtherRationale(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute dateOfBeginForAU to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       // Create instances and set their property decisionByQuestion to value decisionByQuestion
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property dateOfBeginForAU to value dateOfBeginForAU
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTestHelper.java :      persistentObject.setOtherRationale(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :  * Test case class to test the persistence of RationaleForInit
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeeting another = QuestionForMeetingTestHelper.getQuestionForMeetingByPk(resultFound, questionForMeeting.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-dateOfBeginForAU does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             assertEquals("Result returned by find-by-decisionByQuestion does not equal to inserted questionForMeeting object.", questionForMeeting, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeetingTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Test object delete. Create a <Code>RationaleForInit</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute dateOfEndForAU to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * and set their attribute offeredPosition to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property dateOfEndForAU to value dateOfEndForAU
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * their attribute <Code>expectedRealisationDate</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       // Create instances and set their property offeredPosition to value offeredPosition
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * by DAO's <tt>findByExpectedRealisationDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      // Create RationaleForInit instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-dateOfEndForAU does not equal to inserted historyOfAU object.", historyOfAU, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Test query function </tt>findByOtherRationale</tt>. Create multiple <Code>RationaleForInit</Code> instances and set 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeeting another = QuestionForMeetingTestHelper.getQuestionForMeetingByPk(resultFound, questionForMeeting.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute signOfLoyaltyAUInHistory to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * their attribute <Code>otherRationale</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * by DAO's <tt>findByOtherRationale</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             assertEquals("Result returned by find-by-offeredPosition does not equal to inserted questionForMeeting object.", questionForMeeting, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property briefAgenda to value briefAgenda
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :  * Purpose: Defines test class to test the peristence of class ReasonedJudgmentSlct
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       Publication anotherPublication = dao.load(publication.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :  * Test case class to test the persistence of ReasonedJudgmentSlct
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :          publication, anotherPublication);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       PublicationTestHelper.delete(anotherPublication);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :     * Test object delete. Create a <Code>ReasonedJudgmentSlct</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-briefAgenda does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :     * Test function getReasonedJudgmentSlctList. Create multiple <Code>ReasonedJudgmentSlct</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :     * Query all intances by DAO's <tt>doGetReasonedJudgmentSlctList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute plannedDateOfMeeting to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       // Create multiple ReasonedJudgmentSlct instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       Publication another = dao.load(publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       assertEquals("Queried result does not equal to updated instance", publication, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       PublicationTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property plannedDateOfMeeting to value plannedDateOfMeeting
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       Publication another = dao.load(publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       ReasonedJudgmentSlct anotherReasonedJudgmentSlct = dao.load(reasonedJudgmentSlct.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :          reasonedJudgmentSlct, anotherReasonedJudgmentSlct);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute messageDataID to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       ReasonedJudgmentSlctTestHelper.delete(anotherReasonedJudgmentSlct);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-plannedDateOfMeeting does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property messageDataID to value messageDataID
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute meetingTime to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       ReasonedJudgmentSlct another = dao.load(reasonedJudgmentSlct.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       assertEquals("Queried result does not equal to updated instance", reasonedJudgmentSlct, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       ReasonedJudgmentSlctTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property meetingTime to value meetingTime
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-messageDataID does not equal to inserted publication object.", publication, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute dateOfPublication to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-meetingTime does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute meetingPlace to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property dateOfPublication to value dateOfPublication
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       ReasonedJudgmentSlct another = dao.load(reasonedJudgmentSlct.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-dateOfPublication does not equal to inserted publication object.", publication, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTestHelper.java :  * Purpose: Defines the test helper class for class ReasonedJudgmentSlct
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute textOfPublication to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property textOfPublication to value textOfPublication
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property meetingPlace to value meetingPlace
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-meetingPlace does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :             ReasonedJudgmentSlct another = ReasonedJudgmentSlctTestHelper.getReasonedJudgmentSlctByPk(resultFound, reasonedJudgmentSlct.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :             assertEquals("Result returned by get-reasonedJudgmentSlct-list does not equal to inserted reasonedJudgmentSlct object.", reasonedJudgmentSlct, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute userComment to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :             ReasonedJudgmentSlctTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property userComment to value userComment
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-textOfPublication does not equal to inserted publication object.", publication, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute sourceOfPublication to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property signOfLoyaltyAUInHistory to value signOfLoyaltyAUInHistory
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property sourceOfPublication to value sourceOfPublication
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeetingTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :    public void testFindByOtherRationale() throws Exception {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * and set their attribute agreedPosition to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-sourceOfPublication does not equal to inserted publication object.", publication, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      logger.debug("Test find-by-otherRationale begins!");
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      String otherRationale = String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8))));
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute idDocument to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      // Create RationaleForInit instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :       // Create instances and set their property agreedPosition to value agreedPosition
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      rationaleForInits = preFindByOtherRationale(otherRationale);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-signOfLoyaltyAUInHistory does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      // Query RationaleForInit instances by property otherRationale
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      List result = doFindByOtherRationale(otherRationale);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property idDocument to value idDocument
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      afterFindByOtherRationale(rationaleForInits, result);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute dateOfNonLoyaltyForAU to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      logger.debug("Test find-by-otherRationale ends!");
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * their attribute <Code>calculateDateTime</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property dateOfNonLoyaltyForAU to value dateOfNonLoyaltyForAU
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * by DAO's <tt>findByCalculateDateTime</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      // Create RationaleForInit instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-idDocument does not equal to inserted publication object.", publication, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * their attribute <Code>signOfAgreed</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute fullNameEFRSB to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * by DAO's <tt>findBySignOfAgreed</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      // Create RationaleForInit instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-userComment does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute factComment to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * their attribute <Code>desicionDateTime</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property factComment to value factComment
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeeting another = QuestionForMeetingTestHelper.getQuestionForMeetingByPk(resultFound, questionForMeeting.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * by DAO's <tt>findByDesicionDateTime</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      // Create RationaleForInit instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             assertEquals("Result returned by find-by-agreedPosition does not equal to inserted questionForMeeting object.", questionForMeeting, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeetingTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * their attribute <Code>agreedFIO</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-factComment does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * by DAO's <tt>findByAgreedFIO</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :      // Create RationaleForInit instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Test function getRationaleForInitList. Create multiple <Code>RationaleForInit</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Query all intances by DAO's <tt>doGetRationaleForInitList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-dateOfNonLoyaltyForAU does not equal to inserted historyOfAU object.", historyOfAU, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property fullNameEFRSB to value fullNameEFRSB
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute dateOfDisqualification to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property dateOfDisqualification to value dateOfDisqualification
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-dateOfDisqualification does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-fullNameEFRSB does not equal to inserted publication object.", publication, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute innFirmEFRSB to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property innFirmEFRSB to value innFirmEFRSB
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceBacruptApplicant
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :  * Test case class to test the persistence of ReferenceBacruptApplicant
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute numberOfDisqualification to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-innFirmEFRSB does not equal to inserted publication object.", publication, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property numberOfDisqualification to value numberOfDisqualification
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute ogrnFirmEFRSB to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property ogrnFirmEFRSB to value ogrnFirmEFRSB
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :     * Test object delete. Create a <Code>ReferenceBacruptApplicant</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-numberOfDisqualification does not equal to inserted historyOfAU object.", historyOfAU, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :     * Test function getReferenceBacruptApplicantList. Create multiple <Code>ReferenceBacruptApplicant</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-ogrnFirmEFRSB does not equal to inserted publication object.", publication, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :     * Query all intances by DAO's <tt>doGetReferenceBacruptApplicantList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * and set their attribute signOfCurrentSROAndAU to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       // Create multiple ReferenceBacruptApplicant instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * and set their attribute typeMessageEFRSB to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :       // Create instances and set their property typeMessageEFRSB to value typeMessageEFRSB
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :       // Create instances and set their property signOfCurrentSROAndAU to value signOfCurrentSROAndAU
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       ReferenceBacruptApplicant anotherReferenceBacruptApplicant = dao.load(referenceBacruptApplicant.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :          referenceBacruptApplicant, anotherReferenceBacruptApplicant);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       ReferenceBacruptApplicantTestHelper.delete(anotherReferenceBacruptApplicant);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by find-by-signOfCurrentSROAndAU does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       ReferenceBacruptApplicant another = dao.load(referenceBacruptApplicant.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       assertEquals("Queried result does not equal to updated instance", referenceBacruptApplicant, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceBacruptApplicant
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       ReferenceBacruptApplicantTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by find-by-typeMessageEFRSB does not equal to inserted publication object.", publication, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAU another = HistoryOfAUTestHelper.getHistoryOfAUByPk(resultFound, historyOfAU.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             assertEquals("Result returned by get-historyOfAU-list does not equal to inserted historyOfAU object.", historyOfAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :             HistoryOfAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       ReferenceBacruptApplicant another = dao.load(referenceBacruptApplicant.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             Publication another = PublicationTestHelper.getPublicationByPk(resultFound, publication.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             assertEquals("Result returned by get-publication-list does not equal to inserted publication object.", publication, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :             PublicationTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute managerComment to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeeting another = QuestionForMeetingTestHelper.getQuestionForMeetingByPk(resultFound, questionForMeeting.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       // Create multiple RationaleForInit instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             assertEquals("Result returned by get-questionForMeeting-list does not equal to inserted questionForMeeting object.", questionForMeeting, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :             QuestionForMeetingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       RationaleForInit anotherRationaleForInit = dao.load(rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :          rationaleForInit, anotherRationaleForInit);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       RationaleForInitTestHelper.delete(anotherRationaleForInit);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       RationaleForInit another = dao.load(rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       assertEquals("Queried result does not equal to updated instance", rationaleForInit, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       RationaleForInitTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       RationaleForInit another = dao.load(rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * and set their attribute expectedRealisationDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       // Create instances and set their property expectedRealisationDate to value expectedRealisationDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInit another = RationaleForInitTestHelper.getRationaleForInitByPk(resultFound, rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             assertEquals("Result returned by find-by-expectedRealisationDate does not equal to inserted rationaleForInit object.", rationaleForInit, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInitTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Do function <tt>FindByOtherRationale</tt> test preparation. Create <Code>RationaleForInit</Code> instances 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * and set their attribute otherRationale to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :    private List preFindByOtherRationale(String otherRationale) throws Exception {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       List oldRationaleForInits = dao.findByOtherRationale(otherRationale);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       // Create instances and set their property otherRationale to value otherRationale
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :          rationaleForInit.setOtherRationale(otherRationale);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :  * Test case class to test the persistence of ReferenceDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Query <Code>RationaleForInit</Code> instances from database by attribute <Code>otherRationale</Code>.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :    private List doFindByOtherRationale(String otherRationale) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       return dao.findByOtherRationale(otherRationale);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Verify if method <tt>findByOtherRationale</tt> can find all <Code>RationaleForInit</Code> instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :    private void afterFindByOtherRationale(List rationaleForInits, List resultFound) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :          assertNotNull("Result returned by find-by-otherRationale is null.", resultFound);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :          assertEquals("Result count returned by find-by-otherRationale is incorrect.", rationaleForInits.size(), resultFound.size());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :     * Test object delete. Create a <Code>ReferenceDecision</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInit another = RationaleForInitTestHelper.getRationaleForInitByPk(resultFound, rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             assertEquals("Result returned by find-by-otherRationale does not equal to inserted rationaleForInit object.", rationaleForInit, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInitTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :     * Test function getReferenceDecisionList. Create multiple <Code>ReferenceDecision</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :     * Query all intances by DAO's <tt>doGetReferenceDecisionList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * and set their attribute calculateDateTime to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       // Create multiple ReferenceDecision instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       // Create instances and set their property calculateDateTime to value calculateDateTime
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       ReferenceDecision anotherReferenceDecision = dao.load(referenceDecision.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :          referenceDecision, anotherReferenceDecision);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       ReferenceDecisionTestHelper.delete(anotherReferenceDecision);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInit another = RationaleForInitTestHelper.getRationaleForInitByPk(resultFound, rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             assertEquals("Result returned by find-by-calculateDateTime does not equal to inserted rationaleForInit object.", rationaleForInit, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInitTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       ReferenceDecision another = dao.load(referenceDecision.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       assertEquals("Queried result does not equal to updated instance", referenceDecision, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * and set their attribute signOfAgreed to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       ReferenceDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       // Create instances and set their property signOfAgreed to value signOfAgreed
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceQuestions
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property managerComment to value managerComment
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :             ReferenceBacruptApplicant another = ReferenceBacruptApplicantTestHelper.getReferenceBacruptApplicantByPk(resultFound, referenceBacruptApplicant.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\PublicationTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :             assertEquals("Result returned by get-referenceBacruptApplicant-list does not equal to inserted referenceBacruptApplicant object.", referenceBacruptApplicant, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-managerComment does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :             ReferenceBacruptApplicantTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute signOfAgreed to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property signOfAgreed to value signOfAgreed
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-signOfAgreed does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute desicionDateTime to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property desicionDateTime to value desicionDateTime
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-desicionDateTime does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * and set their attribute agreedFIO to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :       // Create instances and set their property agreedFIO to value agreedFIO
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by find-by-agreedFIO does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceQuestions
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditors another = MeetingOfCreditorsTestHelper.getMeetingOfCreditorsByPk(resultFound, meetingOfCreditors.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             assertEquals("Result returned by get-meetingOfCreditors-list does not equal to inserted meetingOfCreditors object.", meetingOfCreditors, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :             MeetingOfCreditorsTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInit another = RationaleForInitTestHelper.getRationaleForInitByPk(resultFound, rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             assertEquals("Result returned by find-by-signOfAgreed does not equal to inserted rationaleForInit object.", rationaleForInit, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       ReferenceDecision another = dao.load(referenceDecision.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInitTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * and set their attribute desicionDateTime to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       // Create instances and set their property desicionDateTime to value desicionDateTime
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceTypeOfGovernment
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :  * Test case class to test the persistence of ReferenceTypeOfGovernment
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInit another = RationaleForInitTestHelper.getRationaleForInitByPk(resultFound, rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             assertEquals("Result returned by find-by-desicionDateTime does not equal to inserted rationaleForInit object.", rationaleForInit, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInitTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :             ReferenceDecision another = ReferenceDecisionTestHelper.getReferenceDecisionByPk(resultFound, referenceDecision.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * and set their attribute agreedFIO to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :             assertEquals("Result returned by get-referenceDecision-list does not equal to inserted referenceDecision object.", referenceDecision, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :             ReferenceDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :       // Create instances and set their property agreedFIO to value agreedFIO
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :     * Test object delete. Create a <Code>ReferenceTypeOfGovernment</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInit another = RationaleForInitTestHelper.getRationaleForInitByPk(resultFound, rationaleForInit.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :     * Test function getReferenceTypeOfGovernmentList. Create multiple <Code>ReferenceTypeOfGovernment</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :     * Query all intances by DAO's <tt>doGetReferenceTypeOfGovernmentList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             assertEquals("Result returned by find-by-agreedFIO does not equal to inserted rationaleForInit object.", rationaleForInit, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInitTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       // Create multiple ReferenceTypeOfGovernment instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       ReferenceTypeOfGovernment anotherReferenceTypeOfGovernment = dao.load(referenceTypeOfGovernment.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :          referenceTypeOfGovernment, anotherReferenceTypeOfGovernment);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       ReferenceTypeOfGovernmentTestHelper.delete(anotherReferenceTypeOfGovernment);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceTypeOfGovernment
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :  * Test case class to test the persistence of ReferenceQuestions
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInit another = RationaleForInitTestHelper.getRationaleForInitByPk(resultFound, rationaleForInit.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             assertEquals("Result returned by get-rationaleForInit-list does not equal to inserted rationaleForInit object.", rationaleForInit, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :             RationaleForInitTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * Test object delete. Create a <Code>ReferenceQuestions</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * their attribute <Code>client_type</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * by DAO's <tt>findByClient_type</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :      // Create ReferenceQuestions instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * Test function getReferenceQuestionsList. Create multiple <Code>ReferenceQuestions</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * Query all intances by DAO's <tt>doGetReferenceQuestionsList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       // Create multiple ReferenceQuestions instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       ReferenceQuestions anotherReferenceQuestions = dao.load(referenceQuestions.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :          referenceQuestions, anotherReferenceQuestions);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       ReferenceQuestionsTestHelper.delete(anotherReferenceQuestions);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       ReferenceQuestions another = dao.load(referenceQuestions.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       assertEquals("Queried result does not equal to updated instance", referenceQuestions, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       ReferenceQuestionsTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       ReferenceTypeOfGovernment another = dao.load(referenceTypeOfGovernment.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       ReferenceQuestions another = dao.load(referenceQuestions.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :  * Purpose: Defines test class to test the peristence of class RefReasonedJudgment
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :  * Test case class to test the persistence of RefReasonedJudgment
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :     * Test object delete. Create a <Code>RefReasonedJudgment</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :     * Test function getRefReasonedJudgmentList. Create multiple <Code>RefReasonedJudgment</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :     * Query all intances by DAO's <tt>doGetRefReasonedJudgmentList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       // Create multiple RefReasonedJudgment instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       RefReasonedJudgment anotherRefReasonedJudgment = dao.load(refReasonedJudgment.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :          refReasonedJudgment, anotherRefReasonedJudgment);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       RefReasonedJudgmentTestHelper.delete(anotherRefReasonedJudgment);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       RefReasonedJudgment another = dao.load(refReasonedJudgment.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       assertEquals("Queried result does not equal to updated instance", refReasonedJudgment, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       RefReasonedJudgmentTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTestHelper.java :  * Purpose: Defines the test helper class for class RefReasonedJudgment
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       RefReasonedJudgment another = dao.load(refReasonedJudgment.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :  * Purpose: Defines test class to test the peristence of class RefStatusOfCredMeet
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :  * Test case class to test the persistence of RefStatusOfCredMeet
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :             RefReasonedJudgment another = RefReasonedJudgmentTestHelper.getRefReasonedJudgmentByPk(resultFound, refReasonedJudgment.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :             assertEquals("Result returned by get-refReasonedJudgment-list does not equal to inserted refReasonedJudgment object.", refReasonedJudgment, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTestHelper.java :  * Purpose: Defines the test helper class for class RefStatusOfCredMeet
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :             RefReasonedJudgmentTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :     * Test object delete. Create a <Code>RefStatusOfCredMeet</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :     * Test function getRefStatusOfCredMeetList. Create multiple <Code>RefStatusOfCredMeet</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :     * Query all intances by DAO's <tt>doGetRefStatusOfCredMeetList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       // Create multiple RefStatusOfCredMeet instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * and set their attribute client_type to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :       // Create instances and set their property client_type to value client_type
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       RefStatusOfCredMeet anotherRefStatusOfCredMeet = dao.load(refStatusOfCredMeet.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :          refStatusOfCredMeet, anotherRefStatusOfCredMeet);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       RefStatusOfCredMeetTestHelper.delete(anotherRefStatusOfCredMeet);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :             ReferenceQuestions another = ReferenceQuestionsTestHelper.getReferenceQuestionsByPk(resultFound, referenceQuestions.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       RefStatusOfCredMeet another = dao.load(refStatusOfCredMeet.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :             assertEquals("Result returned by find-by-client_type does not equal to inserted referenceQuestions object.", referenceQuestions, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :             ReferenceQuestionsTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTestHelper.java :  * Purpose: Defines the test helper class for class RefTypeCredMeet
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * save them into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       assertEquals("Queried result does not equal to updated instance", refStatusOfCredMeet, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       RefStatusOfCredMeetTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :  * Purpose: Defines test class to test the peristence of class RefTypeQuestion
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :  * Purpose: Defines test class to test the peristence of class RefTypeCredMeet
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :  * Test case class to test the persistence of RefTypeQuestion
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :  * Test case class to test the persistence of RefTypeCredMeet
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       RefStatusOfCredMeet another = dao.load(refStatusOfCredMeet.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :     * Test object delete. Create a <Code>RefTypeQuestion</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :     * Test object delete. Create a <Code>RefTypeCredMeet</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       assertEquals("Queried result does not equal to updated instance", referenceTypeOfGovernment, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       ReferenceTypeOfGovernmentTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       ReferenceTypeOfGovernment another = dao.load(referenceTypeOfGovernment.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :             ReferenceTypeOfGovernment another = ReferenceTypeOfGovernmentTestHelper.getReferenceTypeOfGovernmentByPk(resultFound, referenceTypeOfGovernment.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :             assertEquals("Result returned by get-referenceTypeOfGovernment-list does not equal to inserted referenceTypeOfGovernment object.", referenceTypeOfGovernment, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :             ReferenceTypeOfGovernmentTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTestHelper.java :  * Purpose: Defines the test helper class for class RefTypeQuestion
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :  * Purpose: Defines test class to test the peristence of class RegisterCreditorRequirements
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :  * Test case class to test the persistence of RegisterCreditorRequirements
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * Test object delete. Create a <Code>RegisterCreditorRequirements</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * their attribute <Code>idOfCreditor</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * by DAO's <tt>findByIdOfCreditor</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :      // Create RegisterCreditorRequirements instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * their attribute <Code>innOfCreditor</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * by DAO's <tt>findByInnOfCreditor</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :      // Create RegisterCreditorRequirements instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * their attribute <Code>snilsOfCreditor</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * by DAO's <tt>findBySnilsOfCreditor</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :      // Create RegisterCreditorRequirements instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * their attribute <Code>fullNameOfCreditorForJuridical</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * by DAO's <tt>findByFullNameOfCreditorForJuridical</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :      // Create RegisterCreditorRequirements instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * their attribute <Code>fullNameOfCreditorForFisical</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * by DAO's <tt>findByFullNameOfCreditorForFisical</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :      // Create RegisterCreditorRequirements instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * their attribute <Code>shortNameOfCreditorForJuridical</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * by DAO's <tt>findByShortNameOfCreditorForJuridical</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :      // Create RegisterCreditorRequirements instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * Test function getRegisterCreditorRequirementsList. Create multiple <Code>RegisterCreditorRequirements</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * Query all intances by DAO's <tt>doGetRegisterCreditorRequirementsList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       // Create multiple RegisterCreditorRequirements instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :  * Purpose: Defines test class to test the peristence of class RequestOut
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       RegisterCreditorRequirements anotherRegisterCreditorRequirements = dao.load(registerCreditorRequirements.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :          registerCreditorRequirements, anotherRegisterCreditorRequirements);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       RegisterCreditorRequirementsTestHelper.delete(anotherRegisterCreditorRequirements);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :  * Test case class to test the persistence of RequestOut
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       RegisterCreditorRequirements another = dao.load(registerCreditorRequirements.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       assertEquals("Queried result does not equal to updated instance", registerCreditorRequirements, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       RegisterCreditorRequirementsTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * Test object delete. Create a <Code>RequestOut</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTestHelper.java :  * Purpose: Defines the test helper class for class RequestOut
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * their attribute <Code>typeOfGovernment</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * by DAO's <tt>findByTypeOfGovernment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :      // Create RequestOut instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       RegisterCreditorRequirements another = dao.load(registerCreditorRequirements.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * their attribute <Code>nameOfGovernment</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * and set their attribute idOfCreditor to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * by DAO's <tt>findByNameOfGovernment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :      // Create RequestOut instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       // Create instances and set their property idOfCreditor to value idOfCreditor
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * their attribute <Code>addressOfGovernment</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * by DAO's <tt>findByAddressOfGovernment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :      // Create RequestOut instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * their attribute <Code>descriptionOfRequest</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirements another = RegisterCreditorRequirementsTestHelper.getRegisterCreditorRequirementsByPk(resultFound, registerCreditorRequirements.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * by DAO's <tt>findByDescriptionOfRequest</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             assertEquals("Result returned by find-by-idOfCreditor does not equal to inserted registerCreditorRequirements object.", registerCreditorRequirements, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :      // Create RequestOut instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirementsTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * and set their attribute innOfCreditor to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * their attribute <Code>dateOfRequest</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       // Create instances and set their property innOfCreditor to value innOfCreditor
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirements another = RegisterCreditorRequirementsTestHelper.getRegisterCreditorRequirementsByPk(resultFound, registerCreditorRequirements.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             assertEquals("Result returned by find-by-innOfCreditor does not equal to inserted registerCreditorRequirements object.", registerCreditorRequirements, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirementsTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * by DAO's <tt>findByDateOfRequest</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * and set their attribute snilsOfCreditor to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :      // Create RequestOut instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * their attribute <Code>dateOfAnswer</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * by DAO's <tt>findByDateOfAnswer</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :             ReferenceQuestions another = ReferenceQuestionsTestHelper.getReferenceQuestionsByPk(resultFound, referenceQuestions.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :      // Create RequestOut instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * their attribute <Code>commentStatement</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * by DAO's <tt>findByCommentStatement</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :             assertEquals("Result returned by get-referenceQuestions-list does not equal to inserted referenceQuestions object.", referenceQuestions, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :      // Create RequestOut instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :             ReferenceQuestionsTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * Test function getRequestOutList. Create multiple <Code>RequestOut</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * Query all intances by DAO's <tt>doGetRequestOutList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create multiple RequestOut instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :     * Test function getRefTypeCredMeetList. Create multiple <Code>RefTypeCredMeet</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :     * Test function getRefTypeQuestionList. Create multiple <Code>RefTypeQuestion</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :     * Query all intances by DAO's <tt>doGetRefTypeCredMeetList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       RequestOut anotherRequestOut = dao.load(requestOut.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       // Create multiple RefTypeCredMeet instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :     * Query all intances by DAO's <tt>doGetRefTypeQuestionList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :          requestOut, anotherRequestOut);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       RequestOutTestHelper.delete(anotherRequestOut);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       // Create multiple RefTypeQuestion instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       RefTypeCredMeet anotherRefTypeCredMeet = dao.load(refTypeCredMeet.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :          refTypeCredMeet, anotherRefTypeCredMeet);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       RefTypeCredMeetTestHelper.delete(anotherRefTypeCredMeet);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       RefTypeQuestion anotherRefTypeQuestion = dao.load(refTypeQuestion.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       RequestOut another = dao.load(requestOut.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :          refTypeQuestion, anotherRefTypeQuestion);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       assertEquals("Queried result does not equal to updated instance", requestOut, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       RefTypeQuestionTestHelper.delete(anotherRefTypeQuestion);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       RequestOutTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       RefTypeCredMeet another = dao.load(refTypeCredMeet.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       assertEquals("Queried result does not equal to updated instance", refTypeCredMeet, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       RequestOut another = dao.load(requestOut.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :             RefStatusOfCredMeet another = RefStatusOfCredMeetTestHelper.getRefStatusOfCredMeetByPk(resultFound, refStatusOfCredMeet.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :             assertEquals("Result returned by get-refStatusOfCredMeet-list does not equal to inserted refStatusOfCredMeet object.", refStatusOfCredMeet, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :             RefStatusOfCredMeetTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :  * Purpose: Defines test class to test the peristence of class SroAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :  * Test case class to test the persistence of SroAU
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTestHelper.java :  * Purpose: Defines the test helper class for class RequestToCAForSRO
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * Test object delete. Create a <Code>SroAU</Code> instance and save it into database. Delete the 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>nameSROAU</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByNameSROAU</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>shortNameSROAU</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByShortNameSROAU</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>registrationNumber</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByRegistrationNumber</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>dateOfInclusion</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByDateOfInclusion</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>addressOfLocation</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByAddressOfLocation</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>addressOfActualLocation</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByAddressOfActualLocation</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>addressForCorrespondence</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByAddressForCorrespondence</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>phones</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByPhones</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>fax</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByFax</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>mail</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByMail</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>website</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByWebsite</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>subjectRF</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findBySubjectRF</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>head1Position</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByHead1Position</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>head1FIO</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByHead1FIO</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>head2Position</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByHead2Position</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>head2FIO</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByHead2FIO</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>dateOfExclusion</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByDateOfExclusion</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>groundsForExclusion</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByGroundsForExclusion</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>numberOfRegionsOfPresenceSRO</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByNumberOfRegionsOfPresenceSRO</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>signedCooperationAgreement</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findBySignedCooperationAgreement</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>dateExpiryCoopAgreement</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByDateExpiryCoopAgreement</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>ratingSRO</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByRatingSRO</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>restrictionOnAppointment</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByRestrictionOnAppointment</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>numberOfAccreditedAppraisers</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByNumberOfAccreditedAppraisers</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>numberAccredElPlatforms</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByNumberAccredElPlatforms</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>numberAccredAuctionOrgs</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByNumberAccredAuctionOrgs</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>timelinessOfReporting</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByTimelinessOfReporting</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>numberDischarge</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByNumberDischarge</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * their attribute <Code>commentStatement</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * by DAO's <tt>findByCommentStatement</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :      // Create SroAU instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * Test function getSroAUList. Create multiple <Code>SroAU</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * Query all intances by DAO's <tt>doGetSroAUList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create multiple SroAU instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       SroAU anotherSroAU = dao.load(sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :          sroAU, anotherSroAU);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       SroAUTestHelper.delete(anotherSroAU);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       SroAU another = dao.load(sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       assertEquals("Queried result does not equal to updated instance", sroAU, another);  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       SroAU another = dao.load(sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute nameSROAU to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property nameSROAU to value nameSROAU
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :  * Purpose: Defines test class to test the peristence of class RequestToCAForSRO
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-nameSROAU does not equal to inserted sroAU object.", sroAU, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :  * Test case class to test the persistence of RequestToCAForSRO
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute shortNameSROAU to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * Test object delete. Create a <Code>RequestToCAForSRO</Code> instance and save it into database. Delete the 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>requestToCAForSRO_ID</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByRequestToCAForSRO_ID</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property shortNameSROAU to value shortNameSROAU
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>signOfChooseBefore</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findBySignOfChooseBefore</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>nameSROFromCA</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-shortNameSROAU does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByNameSROFromCA</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute registrationNumber to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>signInteractionSROFromCA</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property registrationNumber to value registrationNumber
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findBySignInteractionSROFromCA</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-registrationNumber does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute dateOfInclusion to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property dateOfInclusion to value dateOfInclusion
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>innAUFromCA</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByInnAUFromCA</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-dateOfInclusion does not equal to inserted sroAU object.", sroAU, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       assertNull("Inserted instance is not deleted", another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute addressOfLocation to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * and set their attribute typeOfGovernment to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property addressOfLocation to value addressOfLocation
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create instances and set their property typeOfGovernment to value typeOfGovernment
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-addressOfLocation does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute addressOfActualLocation to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property addressOfActualLocation to value addressOfActualLocation
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by find-by-typeOfGovernment does not equal to inserted requestOut object.", requestOut, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * and set their attribute nameOfGovernment to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-addressOfActualLocation does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create instances and set their property nameOfGovernment to value nameOfGovernment
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute addressForCorrespondence to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property addressForCorrespondence to value addressForCorrespondence
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by find-by-nameOfGovernment does not equal to inserted requestOut object.", requestOut, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * and set their attribute addressOfGovernment to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-addressForCorrespondence does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create instances and set their property addressOfGovernment to value addressOfGovernment
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute phones to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property phones to value phones
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by find-by-addressOfGovernment does not equal to inserted requestOut object.", requestOut, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       RefTypeCredMeetTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * and set their attribute descriptionOfRequest to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       RefTypeQuestion another = dao.load(refTypeQuestion.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       // Create instances and set their property snilsOfCreditor to value snilsOfCreditor
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create instances and set their property descriptionOfRequest to value descriptionOfRequest
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       assertEquals("Queried result does not equal to updated instance", refTypeQuestion, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       RefTypeQuestionTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirements another = RegisterCreditorRequirementsTestHelper.getRegisterCreditorRequirementsByPk(resultFound, registerCreditorRequirements.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             assertEquals("Result returned by find-by-snilsOfCreditor does not equal to inserted registerCreditorRequirements object.", registerCreditorRequirements, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirementsTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * and set their attribute fullNameOfCreditorForJuridical to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       RefTypeCredMeet another = dao.load(refTypeCredMeet.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       // Create instances and set their property fullNameOfCreditorForJuridical to value fullNameOfCreditorForJuridical
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by find-by-descriptionOfRequest does not equal to inserted requestOut object.", requestOut, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       RefTypeQuestion another = dao.load(refTypeQuestion.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * and set their attribute dateOfRequest to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create instances and set their property dateOfRequest to value dateOfRequest
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirements another = RegisterCreditorRequirementsTestHelper.getRegisterCreditorRequirementsByPk(resultFound, registerCreditorRequirements.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             assertEquals("Result returned by find-by-fullNameOfCreditorForJuridical does not equal to inserted registerCreditorRequirements object.", registerCreditorRequirements, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirementsTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * and set their attribute fullNameOfCreditorForFisical to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :             RefTypeCredMeet another = RefTypeCredMeetTestHelper.getRefTypeCredMeetByPk(resultFound, refTypeCredMeet.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :             assertEquals("Result returned by get-refTypeCredMeet-list does not equal to inserted refTypeCredMeet object.", refTypeCredMeet, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :             RefTypeQuestion another = RefTypeQuestionTestHelper.getRefTypeQuestionByPk(resultFound, refTypeQuestion.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :             assertEquals("Result returned by get-refTypeQuestion-list does not equal to inserted refTypeQuestion object.", refTypeQuestion, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :             RefTypeQuestionTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTestHelper.java :  * Purpose: Defines the test helper class for class RegisterCreditorRequirements
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       // Create instances and set their property fullNameOfCreditorForFisical to value fullNameOfCreditorForFisical
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by find-by-dateOfRequest does not equal to inserted requestOut object.", requestOut, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * and set their attribute dateOfAnswer to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :             RefTypeCredMeetTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-phones does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute fax to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>surnameAUFromCA</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findBySurnameAUFromCA</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property fax to value fax
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>nameAUFromCA</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByNameAUFromCA</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-fax does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>patronomycAUFromCA</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute mail to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByPatronomycAUFromCA</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property mail to value mail
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>commentCA</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByCommentCA</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-mail does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>suggestedSRO</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findBySuggestedSRO</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute website to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property website to value website
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>signInteractionSuggestedSRO</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findBySignInteractionSuggestedSRO</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :  * Purpose: Defines test class to test the peristence of class StageOfBankruptcy
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-website does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>innSuggestedAU</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute subjectRF to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :  * Test case class to test the persistence of StageOfBankruptcy
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTestHelper.java :  * Purpose: Defines the test helper class for class StageOfBankruptcy
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * Test object delete. Create a <Code>StageOfBankruptcy</Code> instance and save it into database. Delete the 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByInnSuggestedAU</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>dateOfBegin</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property subjectRF to value subjectRF
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByDateOfBegin</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>dateOfCourtForEnd</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>surnameSuggestedAU</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findBySurnameSuggestedAU</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByDateOfCourtForEnd</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :  * Purpose: Defines test class to test the peristence of class TypeOfBankruptcy
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-subjectRF does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute head1Position to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>nameSuggestedAU</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>dateOfEnd</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByNameSuggestedAU</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByDateOfEnd</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :  * Test case class to test the persistence of TypeOfBankruptcy
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property head1Position to value head1Position
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :     * Test object delete. Create a <Code>TypeOfBankruptcy</Code> instance and save it into database. Delete the 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>patronomycSuggestedAU</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :     * Test function getTypeOfBankruptcyList. Create multiple <Code>TypeOfBankruptcy</Code> instances and save them into database.  
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByPatronomycSuggestedAU</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :     * Query all intances by DAO's <tt>doGetTypeOfBankruptcyList</tt> method. Verify if the method can find all 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       // Create multiple TypeOfBankruptcy instance and insert them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>commentLeader</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByCommentLeader</tt> method. Verify if the method can find all instances saved before.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       TypeOfBankruptcy anotherTypeOfBankruptcy = dao.load(typeOfBankruptcy.getAbstractReferencePK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>dateRequest</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :          typeOfBankruptcy, anotherTypeOfBankruptcy);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByDateRequest</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       TypeOfBankruptcyTestHelper.delete(anotherTypeOfBankruptcy);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>dateAnswer</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByDateAnswer</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       TypeOfBankruptcy another = dao.load(typeOfBankruptcy.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       assertEquals("Queried result does not equal to updated instance", typeOfBankruptcy, another);  
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       TypeOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>signApprovalByCourt</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findBySignApprovalByCourt</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTestHelper.java :  * Purpose: Defines the test helper class for class SroAU
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       TypeOfBankruptcy another = dao.load(typeOfBankruptcy.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :     * save them into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-head1Position does not equal to inserted sroAU object.", sroAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>numberOfDaysForStage</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * their attribute <Code>dateApprovalByCourt</Code> to specified value. Save these instances into database and query them 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * by DAO's <tt>findByDateApprovalByCourt</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByNumberOfDaysForStage</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute head1FIO to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :      // Create RequestToCAForSRO instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :             TypeOfBankruptcy another = TypeOfBankruptcyTestHelper.getTypeOfBankruptcyByPk(resultFound, typeOfBankruptcy.getAbstractReferencePK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property head1FIO to value head1FIO
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * Test function getRequestToCAForSROList. Create multiple <Code>RequestToCAForSRO</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :             assertEquals("Result returned by get-typeOfBankruptcy-list does not equal to inserted typeOfBankruptcy object.", typeOfBankruptcy, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * Query all intances by DAO's <tt>doGetRequestToCAForSROList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :             TypeOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create multiple RequestToCAForSRO instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-head1FIO does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute head2Position to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       RequestToCAForSRO anotherRequestToCAForSRO = dao.load(requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :          requestToCAForSRO, anotherRequestToCAForSRO);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       RequestToCAForSROTestHelper.delete(anotherRequestToCAForSRO);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property head2Position to value head2Position
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       RequestToCAForSRO another = dao.load(requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       assertEquals("Queried result does not equal to updated instance", requestToCAForSRO, another);  
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       RequestToCAForSROTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirements another = RegisterCreditorRequirementsTestHelper.getRegisterCreditorRequirementsByPk(resultFound, registerCreditorRequirements.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       RequestToCAForSRO another = dao.load(requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             assertEquals("Result returned by find-by-fullNameOfCreditorForFisical does not equal to inserted registerCreditorRequirements object.", registerCreditorRequirements, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-head2Position does not equal to inserted sroAU object.", sroAU, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create instances and set their property dateOfAnswer to value dateOfAnswer
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute head2FIO to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>numberOfMonthsForStage</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByNumberOfMonthsForStage</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property head2FIO to value head2FIO
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by find-by-dateOfAnswer does not equal to inserted requestOut object.", requestOut, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>statusOfStage</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByStatusOfStage</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * and set their attribute commentStatement to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-head2FIO does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute dateOfExclusion to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :       // Create instances and set their property commentStatement to value commentStatement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>currentStage</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByCurrentStage</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property dateOfExclusion to value dateOfExclusion
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>signOfLoyaltyOfCurrentAU</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findBySignOfLoyaltyOfCurrentAU</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by find-by-commentStatement does not equal to inserted requestOut object.", requestOut, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute requestToCAForSRO_ID to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirementsTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property requestToCAForSRO_ID to value requestToCAForSRO_ID
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTestHelper.java :  * Purpose: Defines the test helper class for class TypeOfBankruptcy
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * and set their attribute shortNameOfCreditorForJuridical to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :       // Create instances and set their property shortNameOfCreditorForJuridical to value shortNameOfCreditorForJuridical
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOut another = RequestOutTestHelper.getRequestOutByPk(resultFound, requestOut.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             assertEquals("Result returned by get-requestOut-list does not equal to inserted requestOut object.", requestOut, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :             RequestOutTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirements another = RegisterCreditorRequirementsTestHelper.getRegisterCreditorRequirementsByPk(resultFound, registerCreditorRequirements.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             assertEquals("Result returned by find-by-shortNameOfCreditorForJuridical does not equal to inserted registerCreditorRequirements object.", registerCreditorRequirements, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirementsTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-requestToCAForSRO_ID does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * save them into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute signOfChooseBefore to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property signOfChooseBefore to value signOfChooseBefore
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirements another = RegisterCreditorRequirementsTestHelper.getRegisterCreditorRequirementsByPk(resultFound, registerCreditorRequirements.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             assertEquals("Result returned by get-registerCreditorRequirements-list does not equal to inserted registerCreditorRequirements object.", registerCreditorRequirements, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-signOfChooseBefore does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :             RegisterCreditorRequirementsTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute nameSROFromCA to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-dateOfExclusion does not equal to inserted sroAU object.", sroAU, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>dateOfNonLoyaltyOfCurrentAU</Code> to specified value. Save these instances into database and query them 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByDateOfNonLoyaltyOfCurrentAU</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * been saved. Save the instance in the end.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute groundsForExclusion to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property groundsForExclusion to value groundsForExclusion
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * their attribute <Code>commentUser</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * by DAO's <tt>findByCommentUser</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :      // Create StageOfBankruptcy instances and save them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * Test function getStageOfBankruptcyList. Create multiple <Code>StageOfBankruptcy</Code> instances and save them into database.  
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-groundsForExclusion does not equal to inserted sroAU object.", sroAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * Query all intances by DAO's <tt>doGetStageOfBankruptcyList</tt> method. Verify if the method can find all 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create multiple StageOfBankruptcy instance and insert them into database
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute numberOfRegionsOfPresenceSRO to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property nameSROFromCA to value nameSROFromCA
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-nameSROFromCA does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       StageOfBankruptcy anotherStageOfBankruptcy = dao.load(stageOfBankruptcy.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute signInteractionSROFromCA to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :          stageOfBankruptcy, anotherStageOfBankruptcy);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property numberOfRegionsOfPresenceSRO to value numberOfRegionsOfPresenceSRO
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       StageOfBankruptcyTestHelper.delete(anotherStageOfBankruptcy);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       StageOfBankruptcy another = dao.load(stageOfBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       assertEquals("Queried result does not equal to updated instance", stageOfBankruptcy, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       StageOfBankruptcyTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property signInteractionSROFromCA to value signInteractionSROFromCA
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-numberOfRegionsOfPresenceSRO does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute signedCooperationAgreement to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       StageOfBankruptcy another = dao.load(stageOfBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       assertNull("Inserted instance is not deleted", another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute dateOfBegin to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property signedCooperationAgreement to value signedCooperationAgreement
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-signInteractionSROFromCA does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property dateOfBegin to value dateOfBegin
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute innAUFromCA to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-signedCooperationAgreement does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property innAUFromCA to value innAUFromCA
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute dateExpiryCoopAgreement to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property dateExpiryCoopAgreement to value dateExpiryCoopAgreement
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-innAUFromCA does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-dateOfBegin does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute surnameAUFromCA to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute dateOfCourtForEnd to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-dateExpiryCoopAgreement does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property surnameAUFromCA to value surnameAUFromCA
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property dateOfCourtForEnd to value dateOfCourtForEnd
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-surnameAUFromCA does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute ratingSRO to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute nameAUFromCA to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property ratingSRO to value ratingSRO
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-ratingSRO does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-dateOfCourtForEnd does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute restrictionOnAppointment to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property nameAUFromCA to value nameAUFromCA
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute dateOfEnd to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property restrictionOnAppointment to value restrictionOnAppointment
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property dateOfEnd to value dateOfEnd
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-nameAUFromCA does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute patronomycAUFromCA to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-restrictionOnAppointment does not equal to inserted sroAU object.", sroAU, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property patronomycAUFromCA to value patronomycAUFromCA
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute numberOfAccreditedAppraisers to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-dateOfEnd does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property numberOfAccreditedAppraisers to value numberOfAccreditedAppraisers
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-patronomycAUFromCA does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute numberOfDaysForStage to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute commentCA to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property numberOfDaysForStage to value numberOfDaysForStage
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property commentCA to value commentCA
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-numberOfAccreditedAppraisers does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute numberAccredElPlatforms to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-numberOfDaysForStage does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute numberOfMonthsForStage to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property numberOfMonthsForStage to value numberOfMonthsForStage
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property numberAccredElPlatforms to value numberAccredElPlatforms
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-commentCA does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute suggestedSRO to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-numberAccredElPlatforms does not equal to inserted sroAU object.", sroAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-numberOfMonthsForStage does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute numberAccredAuctionOrgs to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property suggestedSRO to value suggestedSRO
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute statusOfStage to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property numberAccredAuctionOrgs to value numberAccredAuctionOrgs
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property statusOfStage to value statusOfStage
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-numberAccredAuctionOrgs does not equal to inserted sroAU object.", sroAU, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-suggestedSRO does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-statusOfStage does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute timelinessOfReporting to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute signInteractionSuggestedSRO to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute currentStage to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property timelinessOfReporting to value timelinessOfReporting
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property currentStage to value currentStage
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property signInteractionSuggestedSRO to value signInteractionSuggestedSRO
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-timelinessOfReporting does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute numberDischarge to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-currentStage does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-signInteractionSuggestedSRO does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute innSuggestedAU to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property numberDischarge to value numberDischarge
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute signOfLoyaltyOfCurrentAU to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property innSuggestedAU to value innSuggestedAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-numberDischarge does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * and set their attribute commentStatement to specified value. Save these instances into database.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :       // Create instances and set their property commentStatement to value commentStatement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property signOfLoyaltyOfCurrentAU to value signOfLoyaltyOfCurrentAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by find-by-commentStatement does not equal to inserted sroAU object.", sroAU, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-signOfLoyaltyOfCurrentAU does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute dateOfNonLoyaltyOfCurrentAU to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-innSuggestedAU does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property dateOfNonLoyaltyOfCurrentAU to value dateOfNonLoyaltyOfCurrentAU
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute surnameSuggestedAU to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property surnameSuggestedAU to value surnameSuggestedAU
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAU another = SroAUTestHelper.getSroAUByPk(resultFound, sroAU.getSroAUPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             assertEquals("Result returned by get-sroAU-list does not equal to inserted sroAU object.", sroAU, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :             SroAUTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-dateOfNonLoyaltyOfCurrentAU does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\SroAUTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * and set their attribute commentUser to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :       // Create instances and set their property commentUser to value commentUser
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-surnameSuggestedAU does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by find-by-commentUser does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute nameSuggestedAU to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * save them into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property nameSuggestedAU to value nameSuggestedAU
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcy another = StageOfBankruptcyTestHelper.getStageOfBankruptcyByPk(resultFound, stageOfBankruptcy.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-nameSuggestedAU does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             assertEquals("Result returned by get-stageOfBankruptcy-list does not equal to inserted stageOfBankruptcy object.", stageOfBankruptcy, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :             StageOfBankruptcyTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute patronomycSuggestedAU to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * been saved. Save the instance in the end.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property patronomycSuggestedAU to value patronomycSuggestedAU
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-patronomycSuggestedAU does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute commentLeader to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property commentLeader to value commentLeader
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-commentLeader does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute dateRequest to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property dateRequest to value dateRequest
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-dateRequest does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute dateAnswer to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property dateAnswer to value dateAnswer
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-dateAnswer does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute signApprovalByCourt to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property signApprovalByCourt to value signApprovalByCourt
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-signApprovalByCourt does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * and set their attribute dateApprovalByCourt to specified value. Save these instances into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :       // Create instances and set their property dateApprovalByCourt to value dateApprovalByCourt
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by find-by-dateApprovalByCourt does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * save them into database.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSRO another = RequestToCAForSROTestHelper.getRequestToCAForSROByPk(resultFound, requestToCAForSRO.getAbstractEntityPK());
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             assertEquals("Result returned by get-requestToCAForSRO-list does not equal to inserted requestToCAForSRO object.", requestToCAForSRO, another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :             RequestToCAForSROTestHelper.delete(another);
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * been saved. Save the instance in the end.
14 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :  * Purpose: Defines test class to test the peristence of class CommentStatement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :  * Test case class to test the persistence of CommentStatement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * Test object delete. Create a <Code>CommentStatement</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * their attribute <Code>commentText</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * by DAO's <tt>findByCommentText</tt> method. Verify if the method can find all instances saved before.
16 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTestHelper.java :  * Purpose: Defines the test helper class for class CommentStatement
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :      // Create CommentStatement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * their attribute <Code>commentDate</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * by DAO's <tt>findByCommentDate</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :      // Create CommentStatement instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * Test function getCommentStatementList. Create multiple <Code>CommentStatement</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * Query all intances by DAO's <tt>doGetCommentStatementList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       // Create multiple CommentStatement instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       CommentStatement anotherCommentStatement = dao.load(commentStatement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :          commentStatement, anotherCommentStatement);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       CommentStatementTestHelper.delete(anotherCommentStatement);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       CommentStatement another = dao.load(commentStatement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       assertEquals("Queried result does not equal to updated instance", commentStatement, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       CommentStatementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       CommentStatement another = dao.load(commentStatement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       assertNull("Inserted instance is not deleted", another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * and set their attribute commentText to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       // Create instances and set their property commentText to value commentText
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             CommentStatement another = CommentStatementTestHelper.getCommentStatementByPk(resultFound, commentStatement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             assertEquals("Result returned by find-by-commentText does not equal to inserted commentStatement object.", commentStatement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             CommentStatementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * and set their attribute commentDate to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :       // Create instances and set their property commentDate to value commentDate
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             CommentStatement another = CommentStatementTestHelper.getCommentStatementByPk(resultFound, commentStatement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             assertEquals("Result returned by find-by-commentDate does not equal to inserted commentStatement object.", commentStatement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             CommentStatementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             CommentStatement another = CommentStatementTestHelper.getCommentStatementByPk(resultFound, commentStatement.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             assertEquals("Result returned by get-commentStatement-list does not equal to inserted commentStatement object.", commentStatement, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :             CommentStatementTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\CommentStatementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :  * Purpose: Defines test class to test the peristence of class DataAdminOperatorID
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :  * Test case class to test the persistence of DataAdminOperatorID
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * Test object delete. Create a <Code>DataAdminOperatorID</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * their attribute <Code>userIdentifier</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * by DAO's <tt>findByUserIdentifier</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :      // Create DataAdminOperatorID instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * their attribute <Code>fullName</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * by DAO's <tt>findByFullName</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :      // Create DataAdminOperatorID instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * their attribute <Code>phone</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * by DAO's <tt>findByPhone</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :      // Create DataAdminOperatorID instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * their attribute <Code>email</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * by DAO's <tt>findByEmail</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTestHelper.java :  * Purpose: Defines the test helper class for class DataAdminOperatorID
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :      // Create DataAdminOperatorID instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * their attribute <Code>orgUnit</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * by DAO's <tt>findByOrgUnit</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :      // Create DataAdminOperatorID instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * Test function getDataAdminOperatorIDList. Create multiple <Code>DataAdminOperatorID</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * Query all intances by DAO's <tt>doGetDataAdminOperatorIDList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       // Create multiple DataAdminOperatorID instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :  * Purpose: Defines test class to test the peristence of class ExtIdentityContainer
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       DataAdminOperatorID anotherDataAdminOperatorID = dao.load(dataAdminOperatorID.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :          dataAdminOperatorID, anotherDataAdminOperatorID);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :  * Test case class to test the persistence of ExtIdentityContainer
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       DataAdminOperatorIDTestHelper.delete(anotherDataAdminOperatorID);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       DataAdminOperatorID another = dao.load(dataAdminOperatorID.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       assertEquals("Queried result does not equal to updated instance", dataAdminOperatorID, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTestHelper.java :  * Purpose: Defines the test helper class for class ExtIdentityContainer
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :  * Purpose: Defines test class to test the peristence of class ExtIdentityRef
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :  * Test case class to test the persistence of ExtIdentityRef
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTestHelper.java :  * Purpose: Defines the test helper class for class ExtIdentityRef
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :     * Test object delete. Create a <Code>ExtIdentityRef</Code> instance and save it into database. Delete the 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :     * Test function getExtIdentityRefList. Create multiple <Code>ExtIdentityRef</Code> instances and save them into database.  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :     * Query all intances by DAO's <tt>doGetExtIdentityRefList</tt> method. Verify if the method can find all 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       // Create multiple ExtIdentityRef instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :     * Test object delete. Create a <Code>ExtIdentityContainer</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :     * Test function getExtIdentityContainerList. Create multiple <Code>ExtIdentityContainer</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :     * Query all intances by DAO's <tt>doGetExtIdentityContainerList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       // Create multiple ExtIdentityContainer instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       ExtIdentityContainer anotherExtIdentityContainer = dao.load(extIdentityContainer.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :          extIdentityContainer, anotherExtIdentityContainer);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       ExtIdentityContainerTestHelper.delete(anotherExtIdentityContainer);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       ExtIdentityContainer another = dao.load(extIdentityContainer.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       assertEquals("Queried result does not equal to updated instance", extIdentityContainer, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       ExtIdentityContainerTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       ExtIdentityContainer another = dao.load(extIdentityContainer.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :     * save them into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :  * Purpose: Defines test class to test the peristence of class RefExtIdNamespace
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :             ExtIdentityContainer another = ExtIdentityContainerTestHelper.getExtIdentityContainerByPk(resultFound, extIdentityContainer.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :             assertEquals("Result returned by get-extIdentityContainer-list does not equal to inserted extIdentityContainer object.", extIdentityContainer, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :             ExtIdentityContainerTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :  * Test case class to test the persistence of RefExtIdNamespace
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       ExtIdentityContainer anotherExtIdentityContainer = dao.load(extIdentityContainer.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       assertNotNull("Query result is null", anotherExtIdentityContainer);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       // if the association's cascade is set to all, save-update
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :       java.util.Collection uid = anotherExtIdentityContainer.getUid();
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * Test object delete. Create a <Code>RefExtIdNamespace</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :        ExtIdentityContainerTestHelper.delete(anotherExtIdentityContainer);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * their attribute <Code>isExternalSystem</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.java :     * Delete the instance from database if instance with the same primary key as specified 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * by DAO's <tt>findByIsExternalSystem</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :      // Create RefExtIdNamespace instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * Test function getRefExtIdNamespaceList. Create multiple <Code>RefExtIdNamespace</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * Query all intances by DAO's <tt>doGetRefExtIdNamespaceList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       // Create multiple RefExtIdNamespace instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       RefExtIdNamespace anotherRefExtIdNamespace = dao.load(refExtIdNamespace.getAbstractReferencePK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :          refExtIdNamespace, anotherRefExtIdNamespace);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       RefExtIdNamespaceTestHelper.delete(anotherRefExtIdNamespace);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTestHelper.java :  * Purpose: Defines the test helper class for class RefExtIdNamespace
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       DataAdminOperatorIDTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       RefExtIdNamespace another = dao.load(refExtIdNamespace.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceDepartment
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceDepartment
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       assertEquals("Queried result does not equal to updated instance", refExtIdNamespace, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       DataAdminOperatorID another = dao.load(dataAdminOperatorID.getAbstractEntityPK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       RefExtIdNamespaceTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :  * Test case class to test the persistence of ReferenceDepartment
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * and set their attribute userIdentifier to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       RefExtIdNamespace another = dao.load(refExtIdNamespace.getAbstractReferencePK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       // Create instances and set their property userIdentifier to value userIdentifier
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * and set their attribute isExternalSystem to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :       // Create instances and set their property isExternalSystem to value isExternalSystem
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * Test object delete. Create a <Code>ReferenceDepartment</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :             RefExtIdNamespace another = RefExtIdNamespaceTestHelper.getRefExtIdNamespaceByPk(resultFound, refExtIdNamespace.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>orgUnitType</Code> to specified value. Save these instances into database and query them 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :             assertEquals("Result returned by find-by-isExternalSystem does not equal to inserted refExtIdNamespace object.", refExtIdNamespace, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByOrgUnitType</tt> method. Verify if the method can find all instances saved before.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :             RefExtIdNamespaceTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>parentOrgUnit</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorID another = DataAdminOperatorIDTestHelper.getDataAdminOperatorIDByPk(resultFound, dataAdminOperatorID.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByParentOrgUnit</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             assertEquals("Result returned by find-by-userIdentifier does not equal to inserted dataAdminOperatorID object.", dataAdminOperatorID, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorIDTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :             RefExtIdNamespace another = RefExtIdNamespaceTestHelper.getRefExtIdNamespaceByPk(resultFound, refExtIdNamespace.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * and set their attribute fullName to specified value. Save these instances into database.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :             assertEquals("Result returned by get-refExtIdNamespace-list does not equal to inserted refExtIdNamespace object.", refExtIdNamespace, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>branch</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       // Create instances and set their property fullName to value fullName
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :             RefExtIdNamespaceTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       ExtIdentityRef anotherExtIdentityRef = dao.load(extIdentityRef.getExtIdentityRefPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :          extIdentityRef, anotherExtIdentityRef);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorID another = DataAdminOperatorIDTestHelper.getDataAdminOperatorIDByPk(resultFound, dataAdminOperatorID.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       ExtIdentityRefTestHelper.delete(anotherExtIdentityRef);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             assertEquals("Result returned by find-by-fullName does not equal to inserted dataAdminOperatorID object.", dataAdminOperatorID, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorIDTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       ExtIdentityRef another = dao.load(extIdentityRef.getExtIdentityRefPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByBranch</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       assertEquals("Queried result does not equal to updated instance", extIdentityRef, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * and set their attribute phone to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       ExtIdentityRefTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>subbranch</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       // Create instances and set their property phone to value phone
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findBySubbranch</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorID another = DataAdminOperatorIDTestHelper.getDataAdminOperatorIDByPk(resultFound, dataAdminOperatorID.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             assertEquals("Result returned by find-by-phone does not equal to inserted dataAdminOperatorID object.", dataAdminOperatorID, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorIDTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * and set their attribute email to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       // Create instances and set their property email to value email
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>division</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByDivision</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       ExtIdentityRef another = dao.load(extIdentityRef.getExtIdentityRefPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       assertNull("Inserted instance is not deleted", another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>timezone</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByTimezone</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorID another = DataAdminOperatorIDTestHelper.getDataAdminOperatorIDByPk(resultFound, dataAdminOperatorID.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             assertEquals("Result returned by find-by-email does not equal to inserted dataAdminOperatorID object.", dataAdminOperatorID, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>closeDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorIDTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * and set their attribute orgUnit to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :             ExtIdentityRef another = ExtIdentityRefTestHelper.getExtIdentityRefByPk(resultFound, extIdentityRef.getExtIdentityRefPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByCloseDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :       // Create instances and set their property orgUnit to value orgUnit
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :             assertEquals("Result returned by get-extIdentityRef-list does not equal to inserted extIdentityRef object.", extIdentityRef, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :             ExtIdentityRefTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>assignee</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByAssignee</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorID another = DataAdminOperatorIDTestHelper.getDataAdminOperatorIDByPk(resultFound, dataAdminOperatorID.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             assertEquals("Result returned by find-by-orgUnit does not equal to inserted dataAdminOperatorID object.", dataAdminOperatorID, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>delegateOrgUnit</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorIDTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByDelegateOrgUnit</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       ExtIdentityRef anotherExtIdentityRef = dao.load(extIdentityRef.getExtIdentityRefPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       assertNotNull("Query result is null", anotherExtIdentityRef);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * save them into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       // if the association's cascade is set to all, save-update
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :       assertEquals("RefExtIdNamespace getNamespace() is not identical with the queried result! ",
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :          extIdentityRef.getNamespace(), anotherExtIdentityRef.getNamespace());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :        ExtIdentityRefTestHelper.delete(anotherExtIdentityRef);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * their attribute <Code>closedOrgUnit</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * by DAO's <tt>findByClosedOrgUnit</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :     * been saved. Save the instance in the end.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ExtIdentityRefTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :      // Create ReferenceDepartment instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorID another = DataAdminOperatorIDTestHelper.getDataAdminOperatorIDByPk(resultFound, dataAdminOperatorID.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * Test function getReferenceDepartmentList. Create multiple <Code>ReferenceDepartment</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * Query all intances by DAO's <tt>doGetReferenceDepartmentList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             assertEquals("Result returned by get-dataAdminOperatorID-list does not equal to inserted dataAdminOperatorID object.", dataAdminOperatorID, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :             DataAdminOperatorIDTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create multiple ReferenceDepartment instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       ReferenceDepartment anotherReferenceDepartment = dao.load(referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :          referenceDepartment, anotherReferenceDepartment);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       ReferenceDepartmentTestHelper.delete(anotherReferenceDepartment);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       ReferenceDepartment another = dao.load(referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       assertEquals("Queried result does not equal to updated instance", referenceDepartment, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       ReferenceDepartment another = dao.load(referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute orgUnitType to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property orgUnitType to value orgUnitType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-orgUnitType does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute parentOrgUnit to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property parentOrgUnit to value parentOrgUnit
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-parentOrgUnit does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute branch to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property branch to value branch
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-branch does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute subbranch to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property subbranch to value subbranch
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-subbranch does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute division to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property division to value division
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-division does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute timezone to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property timezone to value timezone
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-timezone does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute closeDate to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property closeDate to value closeDate
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-closeDate does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute assignee to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property assignee to value assignee
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-assignee does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute delegateOrgUnit to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property delegateOrgUnit to value delegateOrgUnit
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-delegateOrgUnit does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * and set their attribute closedOrgUnit to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :       // Create instances and set their property closedOrgUnit to value closedOrgUnit
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by find-by-closedOrgUnit does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartment another = ReferenceDepartmentTestHelper.getReferenceDepartmentByPk(resultFound, referenceDepartment.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             assertEquals("Result returned by get-referenceDepartment-list does not equal to inserted referenceDepartment object.", referenceDepartment, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :             ReferenceDepartmentTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :  * Purpose: Defines test class to test the peristence of class AuthorityKPA
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :  * Test case class to test the persistence of AuthorityKPA
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * Test object delete. Create a <Code>AuthorityKPA</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * their attribute <Code>bankBranch</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * by DAO's <tt>findByBankBranch</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :      // Create AuthorityKPA instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * their attribute <Code>branchType</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * by DAO's <tt>findByBranchType</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :      // Create AuthorityKPA instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * Test function getAuthorityKPAList. Create multiple <Code>AuthorityKPA</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * Query all intances by DAO's <tt>doGetAuthorityKPAList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       // Create multiple AuthorityKPA instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       AuthorityKPA anotherAuthorityKPA = dao.load(authorityKPA.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :          authorityKPA, anotherAuthorityKPA);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       AuthorityKPATestHelper.delete(anotherAuthorityKPA);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       AuthorityKPA another = dao.load(authorityKPA.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       assertEquals("Queried result does not equal to updated instance", authorityKPA, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       AuthorityKPATestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       AuthorityKPA another = dao.load(authorityKPA.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * and set their attribute bankBranch to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       // Create instances and set their property bankBranch to value bankBranch
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             AuthorityKPA another = AuthorityKPATestHelper.getAuthorityKPAByPk(resultFound, authorityKPA.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             assertEquals("Result returned by find-by-bankBranch does not equal to inserted authorityKPA object.", authorityKPA, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATestHelper.java :  * Purpose: Defines the test helper class for class AuthorityKPA
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             AuthorityKPATestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * and set their attribute branchType to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :       // Create instances and set their property branchType to value branchType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             AuthorityKPA another = AuthorityKPATestHelper.getAuthorityKPAByPk(resultFound, authorityKPA.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             assertEquals("Result returned by find-by-branchType does not equal to inserted authorityKPA object.", authorityKPA, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             AuthorityKPATestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             AuthorityKPA another = AuthorityKPATestHelper.getAuthorityKPAByPk(resultFound, authorityKPA.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             assertEquals("Result returned by get-authorityKPA-list does not equal to inserted authorityKPA object.", authorityKPA, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :             AuthorityKPATestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :  * Purpose: Defines test class to test the peristence of class Calculation
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :  * Test case class to test the persistence of Calculation
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * Test object delete. Create a <Code>Calculation</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * their attribute <Code>koQuestionType_code</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTestHelper.java :  * Purpose: Defines the test helper class for class Calculation
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * by DAO's <tt>findByKoQuestionType_code</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :      // Create Calculation instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * their attribute <Code>initiationLevel</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * by DAO's <tt>findByInitiationLevel</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :      // Create Calculation instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * their attribute <Code>decisionLevel</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * by DAO's <tt>findByDecisionLevel</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :      // Create Calculation instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * their attribute <Code>isSpecialQuestion</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * by DAO's <tt>findByIsSpecialQuestion</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :      // Create Calculation instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * their attribute <Code>isNeedARCheck</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * by DAO's <tt>findByIsNeedARCheck</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :      // Create Calculation instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * their attribute <Code>isVerificate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * by DAO's <tt>findByIsVerificate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :      // Create Calculation instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * their attribute <Code>categoryAR</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * by DAO's <tt>findByCategoryAR</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :      // Create Calculation instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * Test function getCalculationList. Create multiple <Code>Calculation</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * Query all intances by DAO's <tt>doGetCalculationList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\AuthorityKPATest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create multiple Calculation instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       Calculation anotherCalculation = dao.load(calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :          calculation, anotherCalculation);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       CalculationTestHelper.delete(anotherCalculation);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       Calculation another = dao.load(calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       assertEquals("Queried result does not equal to updated instance", calculation, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       Calculation another = dao.load(calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * and set their attribute koQuestionType_code to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create instances and set their property koQuestionType_code to value koQuestionType_code
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by find-by-koQuestionType_code does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * and set their attribute initiationLevel to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create instances and set their property initiationLevel to value initiationLevel
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by find-by-initiationLevel does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * and set their attribute decisionLevel to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create instances and set their property decisionLevel to value decisionLevel
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by find-by-decisionLevel does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * and set their attribute isSpecialQuestion to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create instances and set their property isSpecialQuestion to value isSpecialQuestion
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by find-by-isSpecialQuestion does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * and set their attribute isNeedARCheck to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create instances and set their property isNeedARCheck to value isNeedARCheck
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by find-by-isNeedARCheck does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * and set their attribute isVerificate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create instances and set their property isVerificate to value isVerificate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by find-by-isVerificate does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * and set their attribute categoryAR to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :       // Create instances and set their property categoryAR to value categoryAR
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by find-by-categoryAR does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             Calculation another = CalculationTestHelper.getCalculationByPk(resultFound, calculation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             assertEquals("Result returned by get-calculation-list does not equal to inserted calculation object.", calculation, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :             CalculationTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\CalculationTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :  * Purpose: Defines test class to test the peristence of class DecisionMakingFormat
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :  * Test case class to test the persistence of DecisionMakingFormat
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :     * Test object delete. Create a <Code>DecisionMakingFormat</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :     * Test function getDecisionMakingFormatList. Create multiple <Code>DecisionMakingFormat</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :     * Query all intances by DAO's <tt>doGetDecisionMakingFormatList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       // Create multiple DecisionMakingFormat instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       DecisionMakingFormat anotherDecisionMakingFormat = dao.load(decisionMakingFormat.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :          decisionMakingFormat, anotherDecisionMakingFormat);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       DecisionMakingFormatTestHelper.delete(anotherDecisionMakingFormat);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTestHelper.java :  * Purpose: Defines the test helper class for class DecisionMakingFormat
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       DecisionMakingFormat another = dao.load(decisionMakingFormat.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       assertEquals("Queried result does not equal to updated instance", decisionMakingFormat, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       DecisionMakingFormatTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       DecisionMakingFormat another = dao.load(decisionMakingFormat.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :             DecisionMakingFormat another = DecisionMakingFormatTestHelper.getDecisionMakingFormatByPk(resultFound, decisionMakingFormat.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :             assertEquals("Result returned by get-decisionMakingFormat-list does not equal to inserted decisionMakingFormat object.", decisionMakingFormat, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :             DecisionMakingFormatTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :  * Purpose: Defines test class to test the peristence of class KoDecision
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTestHelper.java :  * Purpose: Defines the test helper class for class DecisionMaking
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :  * Test case class to test the persistence of KoDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * Test object delete. Create a <Code>KoDecision</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>caseId</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByCaseId</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>decisionLevel</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByDecisionLevel</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>isVerificate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByIsVerificate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>categoryAR</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByCategoryAR</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>isNeedARCheck</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByIsNeedARCheck</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>questionCount</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByQuestionCount</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>decisionNumber</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByDecisionNumber</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>paragraphNumber</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByParagraphNumber</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>decisionDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByDecisionDate</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :  * Purpose: Defines test class to test the peristence of class DecisionMaking
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>updateDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByUpdateDate</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :  * Test case class to test the persistence of DecisionMaking
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>decisionStatus</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByDecisionStatus</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * Test object delete. Create a <Code>DecisionMaking</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * their attribute <Code>decisionStatusLocalized</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * by DAO's <tt>findByDecisionStatusLocalized</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isCreditDeal</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :      // Create KoDecision instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsCreditDeal</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * Test function getKoDecisionList. Create multiple <Code>KoDecision</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * Query all intances by DAO's <tt>doGetKoDecisionList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isClientInChildBank</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsClientInChildBank</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isDealOFR</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsDealOFR</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isDealNoVND</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsDealNoVND</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create multiple KoDecision instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isComplicatedDeal</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsComplicatedDeal</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       KoDecision anotherKoDecision = dao.load(koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :          koDecision, anotherKoDecision);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       KoDecisionTestHelper.delete(anotherKoDecision);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       KoDecision another = dao.load(koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       assertEquals("Queried result does not equal to updated instance", koDecision, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       KoDecisionTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isTransboundaryDeal</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsTransboundaryDeal</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isSberbankCapital</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsSberbankCapital</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isHandLimit</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsHandLimit</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * their attribute <Code>isSimpleOFR</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * by DAO's <tt>findByIsSimpleOFR</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :      // Create DecisionMaking instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * Test function getDecisionMakingList. Create multiple <Code>DecisionMaking</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * Query all intances by DAO's <tt>doGetDecisionMakingList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create multiple DecisionMaking instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       KoDecision another = dao.load(koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute caseId to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property caseId to value caseId
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-caseId does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute decisionLevel to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property decisionLevel to value decisionLevel
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-decisionLevel does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute isVerificate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property isVerificate to value isVerificate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-isVerificate does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute categoryAR to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property categoryAR to value categoryAR
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-categoryAR does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute isNeedARCheck to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property isNeedARCheck to value isNeedARCheck
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTestHelper.java :  * Purpose: Defines the test helper class for class KoDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-isNeedARCheck does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute questionCount to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property questionCount to value questionCount
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-questionCount does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute decisionNumber to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property decisionNumber to value decisionNumber
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-decisionNumber does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute paragraphNumber to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property paragraphNumber to value paragraphNumber
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-paragraphNumber does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute decisionDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property decisionDate to value decisionDate
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       DecisionMaking anotherDecisionMaking = dao.load(decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :          decisionMaking, anotherDecisionMaking);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       DecisionMakingTestHelper.delete(anotherDecisionMaking);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       DecisionMaking another = dao.load(decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       assertEquals("Queried result does not equal to updated instance", decisionMaking, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       DecisionMaking another = dao.load(decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isCreditDeal to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isCreditDeal to value isCreditDeal
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isCreditDeal does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isClientInChildBank to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isClientInChildBank to value isClientInChildBank
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isClientInChildBank does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isDealOFR to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isDealOFR to value isDealOFR
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isDealOFR does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isDealNoVND to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isDealNoVND to value isDealNoVND
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :  * Purpose: Defines test class to test the peristence of class KoQuestionCategory
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :  * Test case class to test the persistence of KoQuestionCategory
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isDealNoVND does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isComplicatedDeal to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isComplicatedDeal to value isComplicatedDeal
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :     * Test object delete. Create a <Code>KoQuestionCategory</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :     * Test function getKoQuestionCategoryList. Create multiple <Code>KoQuestionCategory</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :     * Query all intances by DAO's <tt>doGetKoQuestionCategoryList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isComplicatedDeal does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isTransboundaryDeal to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       // Create multiple KoQuestionCategory instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isTransboundaryDeal to value isTransboundaryDeal
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       KoQuestionCategory anotherKoQuestionCategory = dao.load(koQuestionCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :          koQuestionCategory, anotherKoQuestionCategory);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       KoQuestionCategoryTestHelper.delete(anotherKoQuestionCategory);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       KoQuestionCategory another = dao.load(koQuestionCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       assertEquals("Queried result does not equal to updated instance", koQuestionCategory, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       KoQuestionCategoryTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isTransboundaryDeal does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isSberbankCapital to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isSberbankCapital to value isSberbankCapital
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       KoQuestionCategory another = dao.load(koQuestionCategory.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isSberbankCapital does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isHandLimit to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isHandLimit to value isHandLimit
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :             KoQuestionCategory another = KoQuestionCategoryTestHelper.getKoQuestionCategoryByPk(resultFound, koQuestionCategory.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isHandLimit does not equal to inserted decisionMaking object.", decisionMaking, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :             assertEquals("Result returned by get-koQuestionCategory-list does not equal to inserted koQuestionCategory object.", koQuestionCategory, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :             KoQuestionCategoryTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-decisionDate does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute updateDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property updateDate to value updateDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-updateDate does not equal to inserted koDecision object.", koDecision, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * and set their attribute isSimpleOFR to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :       // Create instances and set their property isSimpleOFR to value isSimpleOFR
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by find-by-isSimpleOFR does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMaking another = DecisionMakingTestHelper.getDecisionMakingByPk(resultFound, decisionMaking.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             assertEquals("Result returned by get-decisionMaking-list does not equal to inserted decisionMaking object.", decisionMaking, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :             DecisionMakingTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\DecisionMakingTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :  * Purpose: Defines test class to test the peristence of class KoQuestionMaterials
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :  * Test case class to test the persistence of KoQuestionMaterials
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * Test object delete. Create a <Code>KoQuestionMaterials</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * their attribute <Code>material_code</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * by DAO's <tt>findByMaterial_code</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :      // Create KoQuestionMaterials instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionCategoryTestHelper.java :  * Purpose: Defines the test helper class for class KoQuestionCategory
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * their attribute <Code>availableFor</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * by DAO's <tt>findByAvailableFor</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :      // Create KoQuestionMaterials instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * their attribute <Code>disabledFor</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * by DAO's <tt>findByDisabledFor</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :      // Create KoQuestionMaterials instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * their attribute <Code>hasTemplate</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * by DAO's <tt>findByHasTemplate</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :      // Create KoQuestionMaterials instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * their attribute <Code>templateLink</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * by DAO's <tt>findByTemplateLink</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :      // Create KoQuestionMaterials instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * Test function getKoQuestionMaterialsList. Create multiple <Code>KoQuestionMaterials</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * Query all intances by DAO's <tt>doGetKoQuestionMaterialsList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       // Create multiple KoQuestionMaterials instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       KoQuestionMaterials anotherKoQuestionMaterials = dao.load(koQuestionMaterials.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :          koQuestionMaterials, anotherKoQuestionMaterials);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       KoQuestionMaterialsTestHelper.delete(anotherKoQuestionMaterials);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTestHelper.java :  * Purpose: Defines the test helper class for class KoQuestionMaterials
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :  * Purpose: Defines test class to test the peristence of class KoQuestionServices
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :  * Test case class to test the persistence of KoQuestionServices
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * Test object delete. Create a <Code>KoQuestionServices</Code> instance and save it into database. Delete the 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * their attribute <Code>availableFor</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * by DAO's <tt>findByAvailableFor</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :      // Create KoQuestionServices instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * their attribute <Code>disabledFor</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * by DAO's <tt>findByDisabledFor</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :      // Create KoQuestionServices instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * Test function getKoQuestionServicesList. Create multiple <Code>KoQuestionServices</Code> instances and save them into database.  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * Query all intances by DAO's <tt>doGetKoQuestionServicesList</tt> method. Verify if the method can find all 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       // Create multiple KoQuestionServices instance and insert them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       KoQuestionServices anotherKoQuestionServices = dao.load(koQuestionServices.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :          koQuestionServices, anotherKoQuestionServices);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       KoQuestionServicesTestHelper.delete(anotherKoQuestionServices);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       KoQuestionServices another = dao.load(koQuestionServices.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       assertEquals("Queried result does not equal to updated instance", koQuestionServices, another);  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       KoQuestionServicesTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :  * Purpose: Defines test class to test the peristence of class KoQuestionType
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       KoQuestionServices another = dao.load(koQuestionServices.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :  * Test case class to test the persistence of KoQuestionType
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       assertNull("Inserted instance is not deleted", another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * and set their attribute availableFor to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       // Create instances and set their property availableFor to value availableFor
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * Test object delete. Create a <Code>KoQuestionType</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTestHelper.java :  * Purpose: Defines the test helper class for class KoQuestionType
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTestHelper.java :  * Purpose: Defines the test helper class for class KoQuestionServices
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             KoQuestionServices another = KoQuestionServicesTestHelper.getKoQuestionServicesByPk(resultFound, koQuestionServices.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * their attribute <Code>isVerificate</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * by DAO's <tt>findByIsVerificate</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             assertEquals("Result returned by find-by-availableFor does not equal to inserted koQuestionServices object.", koQuestionServices, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             KoQuestionServicesTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :      // Create KoQuestionType instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * and set their attribute disabledFor to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * their attribute <Code>isStandardCheck</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * by DAO's <tt>findByIsStandardCheck</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :      // Create KoQuestionType instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :       // Create instances and set their property disabledFor to value disabledFor
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * their attribute <Code>isDisabled</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * by DAO's <tt>findByIsDisabled</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :      // Create KoQuestionType instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * their attribute <Code>msAccessCode</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             KoQuestionServices another = KoQuestionServicesTestHelper.getKoQuestionServicesByPk(resultFound, koQuestionServices.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * by DAO's <tt>findByMsAccessCode</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :      // Create KoQuestionType instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * their attribute <Code>msAccessLabel</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * by DAO's <tt>findByMsAccessLabel</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             assertEquals("Result returned by find-by-disabledFor does not equal to inserted koQuestionServices object.", koQuestionServices, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             KoQuestionServicesTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute decisionStatus to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property decisionStatus to value decisionStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-decisionStatus does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * and set their attribute decisionStatusLocalized to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :       // Create instances and set their property decisionStatusLocalized to value decisionStatusLocalized
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :      // Create KoQuestionType instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by find-by-decisionStatusLocalized does not equal to inserted koDecision object.", koDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * their attribute <Code>isSpecialQuestion</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :  * Purpose: Defines test class to test the peristence of class LevelDecisionOverwrite
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * by DAO's <tt>findByIsSpecialQuestion</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :      // Create KoQuestionType instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :  * Test case class to test the persistence of LevelDecisionOverwrite
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * Test function getKoQuestionTypeList. Create multiple <Code>KoQuestionType</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * Query all intances by DAO's <tt>doGetKoQuestionTypeList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       // Create multiple KoQuestionType instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTestHelper.java :  * Purpose: Defines the test helper class for class LevelDecisionOverwrite
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecision another = KoDecisionTestHelper.getKoDecisionByPk(resultFound, koDecision.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       KoQuestionType anotherKoQuestionType = dao.load(koQuestionType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             assertEquals("Result returned by get-koDecision-list does not equal to inserted koDecision object.", koDecision, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * Test object delete. Create a <Code>LevelDecisionOverwrite</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :          koQuestionType, anotherKoQuestionType);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       KoQuestionTypeTestHelper.delete(anotherKoQuestionType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :             KoDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * their attribute <Code>koQuestionType_code</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * by DAO's <tt>findByKoQuestionType_code</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       KoQuestionType another = dao.load(koQuestionType.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :      // Create LevelDecisionOverwrite instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoDecisionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       assertEquals("Queried result does not equal to updated instance", koQuestionType, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       KoQuestionTypeTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * their attribute <Code>caseId</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * by DAO's <tt>findByCaseId</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceBaseQuestWeight
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       KoQuestionType another = dao.load(koQuestionType.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :      // Create LevelDecisionOverwrite instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * and set their attribute isVerificate to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * their attribute <Code>decisionLevel</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * by DAO's <tt>findByDecisionLevel</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :  * Test case class to test the persistence of ReferenceBaseQuestWeight
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :      // Create LevelDecisionOverwrite instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       // Create instances and set their property isVerificate to value isVerificate
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * their attribute <Code>isVerificate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * by DAO's <tt>findByIsVerificate</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             KoQuestionServices another = KoQuestionServicesTestHelper.getKoQuestionServicesByPk(resultFound, koQuestionServices.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             assertEquals("Result returned by get-koQuestionServices-list does not equal to inserted koQuestionServices object.", koQuestionServices, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       KoQuestionMaterials another = dao.load(koQuestionMaterials.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :             KoQuestionServicesTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       assertEquals("Queried result does not equal to updated instance", koQuestionMaterials, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       KoQuestionMaterialsTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * been saved. Save the instance in the end.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       KoQuestionMaterials another = dao.load(koQuestionMaterials.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * and set their attribute material_code to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       // Create instances and set their property material_code to value material_code
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterials another = KoQuestionMaterialsTestHelper.getKoQuestionMaterialsByPk(resultFound, koQuestionMaterials.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             assertEquals("Result returned by find-by-material_code does not equal to inserted koQuestionMaterials object.", koQuestionMaterials, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterialsTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceFinancialMarketsActType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceBaseQuestWeight
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :  * Test case class to test the persistence of ReferenceFinancialMarketsActType
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :     * Test object delete. Create a <Code>ReferenceFinancialMarketsActType</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :     * Test function getReferenceFinancialMarketsActTypeList. Create multiple <Code>ReferenceFinancialMarketsActType</Code> instances and save them into database.  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :     * Query all intances by DAO's <tt>doGetReferenceFinancialMarketsActTypeList</tt> method. Verify if the method can find all 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       // Create multiple ReferenceFinancialMarketsActType instance and insert them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       ReferenceFinancialMarketsActType anotherReferenceFinancialMarketsActType = dao.load(referenceFinancialMarketsActType.getAbstractReferencePK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :          referenceFinancialMarketsActType, anotherReferenceFinancialMarketsActType);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       ReferenceFinancialMarketsActTypeTestHelper.delete(anotherReferenceFinancialMarketsActType);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionType another = KoQuestionTypeTestHelper.getKoQuestionTypeByPk(resultFound, koQuestionType.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             assertEquals("Result returned by find-by-isVerificate does not equal to inserted koQuestionType object.", koQuestionType, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * and set their attribute isStandardCheck to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * Test object delete. Create a <Code>ReferenceBaseQuestWeight</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * their attribute <Code>toolAvailability</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * by DAO's <tt>findByToolAvailability</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :      // Create ReferenceBaseQuestWeight instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :      // Create LevelDecisionOverwrite instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceKoSecretaryEmail
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :  * Test case class to test the persistence of ReferenceKoSecretaryEmail
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * Test object delete. Create a <Code>ReferenceKoSecretaryEmail</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * their attribute <Code>bankBranch</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * by DAO's <tt>findByBankBranch</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :      // Create ReferenceKoSecretaryEmail instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * their attribute <Code>categoryAR</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * by DAO's <tt>findByCategoryAR</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * their attribute <Code>email</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * by DAO's <tt>findByEmail</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :      // Create LevelDecisionOverwrite instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :      // Create ReferenceKoSecretaryEmail instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * their attribute <Code>gender</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * their attribute <Code>isNeedARCheck</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * by DAO's <tt>findByGender</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * by DAO's <tt>findByIsNeedARCheck</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :      // Create ReferenceKoSecretaryEmail instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :      // Create LevelDecisionOverwrite instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * their attribute <Code>secretaryName</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * by DAO's <tt>findBySecretaryName</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * Test function getLevelDecisionOverwriteList. Create multiple <Code>LevelDecisionOverwrite</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * Query all intances by DAO's <tt>doGetLevelDecisionOverwriteList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :      // Create ReferenceKoSecretaryEmail instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       // Create multiple LevelDecisionOverwrite instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       LevelDecisionOverwrite anotherLevelDecisionOverwrite = dao.load(levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :          levelDecisionOverwrite, anotherLevelDecisionOverwrite);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       LevelDecisionOverwriteTestHelper.delete(anotherLevelDecisionOverwrite);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * Test function getReferenceKoSecretaryEmailList. Create multiple <Code>ReferenceKoSecretaryEmail</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * Query all intances by DAO's <tt>doGetReferenceKoSecretaryEmailList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       // Create multiple ReferenceKoSecretaryEmail instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       LevelDecisionOverwrite another = dao.load(levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       assertEquals("Queried result does not equal to updated instance", levelDecisionOverwrite, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       LevelDecisionOverwriteTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       ReferenceKoSecretaryEmail anotherReferenceKoSecretaryEmail = dao.load(referenceKoSecretaryEmail.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :          referenceKoSecretaryEmail, anotherReferenceKoSecretaryEmail);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       ReferenceKoSecretaryEmailTestHelper.delete(anotherReferenceKoSecretaryEmail);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       LevelDecisionOverwrite another = dao.load(levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * and set their attribute koQuestionType_code to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       ReferenceKoSecretaryEmail another = dao.load(referenceKoSecretaryEmail.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       assertEquals("Queried result does not equal to updated instance", referenceKoSecretaryEmail, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       ReferenceKoSecretaryEmailTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       ReferenceKoSecretaryEmail another = dao.load(referenceKoSecretaryEmail.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * and set their attribute bankBranch to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       // Create instances and set their property bankBranch to value bankBranch
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       // Create instances and set their property koQuestionType_code to value koQuestionType_code
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwrite another = LevelDecisionOverwriteTestHelper.getLevelDecisionOverwriteByPk(resultFound, levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             assertEquals("Result returned by find-by-koQuestionType_code does not equal to inserted levelDecisionOverwrite object.", levelDecisionOverwrite, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwriteTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * and set their attribute caseId to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       // Create instances and set their property caseId to value caseId
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmail another = ReferenceKoSecretaryEmailTestHelper.getReferenceKoSecretaryEmailByPk(resultFound, referenceKoSecretaryEmail.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             assertEquals("Result returned by find-by-bankBranch does not equal to inserted referenceKoSecretaryEmail object.", referenceKoSecretaryEmail, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmailTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * and set their attribute email to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwrite another = LevelDecisionOverwriteTestHelper.getLevelDecisionOverwriteByPk(resultFound, levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             assertEquals("Result returned by find-by-caseId does not equal to inserted levelDecisionOverwrite object.", levelDecisionOverwrite, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwriteTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * and set their attribute decisionLevel to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       // Create instances and set their property decisionLevel to value decisionLevel
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwrite another = LevelDecisionOverwriteTestHelper.getLevelDecisionOverwriteByPk(resultFound, levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             assertEquals("Result returned by find-by-decisionLevel does not equal to inserted levelDecisionOverwrite object.", levelDecisionOverwrite, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwriteTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * and set their attribute isVerificate to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       // Create instances and set their property isVerificate to value isVerificate
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwrite another = LevelDecisionOverwriteTestHelper.getLevelDecisionOverwriteByPk(resultFound, levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             assertEquals("Result returned by find-by-isVerificate does not equal to inserted levelDecisionOverwrite object.", levelDecisionOverwrite, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwriteTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * and set their attribute categoryAR to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       // Create instances and set their property categoryAR to value categoryAR
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwrite another = LevelDecisionOverwriteTestHelper.getLevelDecisionOverwriteByPk(resultFound, levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             assertEquals("Result returned by find-by-categoryAR does not equal to inserted levelDecisionOverwrite object.", levelDecisionOverwrite, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwriteTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * and set their attribute isNeedARCheck to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :       // Create instances and set their property isNeedARCheck to value isNeedARCheck
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwrite another = LevelDecisionOverwriteTestHelper.getLevelDecisionOverwriteByPk(resultFound, levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             assertEquals("Result returned by find-by-isNeedARCheck does not equal to inserted levelDecisionOverwrite object.", levelDecisionOverwrite, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwriteTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwrite another = LevelDecisionOverwriteTestHelper.getLevelDecisionOverwriteByPk(resultFound, levelDecisionOverwrite.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             assertEquals("Result returned by get-levelDecisionOverwrite-list does not equal to inserted levelDecisionOverwrite object.", levelDecisionOverwrite, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :             LevelDecisionOverwriteTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceMaterials
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :  * Test case class to test the persistence of ReferenceMaterials
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :     * Test object delete. Create a <Code>ReferenceMaterials</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :     * Test function getReferenceMaterialsList. Create multiple <Code>ReferenceMaterials</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :     * Query all intances by DAO's <tt>doGetReferenceMaterialsList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       // Create multiple ReferenceMaterials instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       ReferenceMaterials anotherReferenceMaterials = dao.load(referenceMaterials.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :          referenceMaterials, anotherReferenceMaterials);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       ReferenceMaterialsTestHelper.delete(anotherReferenceMaterials);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceFinancialMarketsActType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       ReferenceMaterials another = dao.load(referenceMaterials.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       assertEquals("Queried result does not equal to updated instance", referenceMaterials, another);  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       ReferenceMaterialsTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       ReferenceMaterials another = dao.load(referenceMaterials.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :             ReferenceMaterials another = ReferenceMaterialsTestHelper.getReferenceMaterialsByPk(resultFound, referenceMaterials.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :             assertEquals("Result returned by get-referenceMaterials-list does not equal to inserted referenceMaterials object.", referenceMaterials, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :             ReferenceMaterialsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * Test function getReferenceBaseQuestWeightList. Create multiple <Code>ReferenceBaseQuestWeight</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * Query all intances by DAO's <tt>doGetReferenceBaseQuestWeightList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       // Create multiple ReferenceBaseQuestWeight instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       ReferenceBaseQuestWeight anotherReferenceBaseQuestWeight = dao.load(referenceBaseQuestWeight.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :          referenceBaseQuestWeight, anotherReferenceBaseQuestWeight);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       ReferenceBaseQuestWeightTestHelper.delete(anotherReferenceBaseQuestWeight);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceKoSecretaryEmail
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       ReferenceBaseQuestWeight another = dao.load(referenceBaseQuestWeight.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       assertEquals("Queried result does not equal to updated instance", referenceBaseQuestWeight, another);  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceMaterials
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       ReferenceBaseQuestWeightTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       ReferenceBaseQuestWeight another = dao.load(referenceBaseQuestWeight.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * and set their attribute toolAvailability to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :       // Create instances and set their property toolAvailability to value toolAvailability
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :             ReferenceBaseQuestWeight another = ReferenceBaseQuestWeightTestHelper.getReferenceBaseQuestWeightByPk(resultFound, referenceBaseQuestWeight.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :             assertEquals("Result returned by find-by-toolAvailability does not equal to inserted referenceBaseQuestWeight object.", referenceBaseQuestWeight, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :             ReferenceBaseQuestWeightTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :  * Purpose: Defines test class to test the peristence of class ReferenceVND
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :  * Test case class to test the persistence of ReferenceVND
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :     * Test object delete. Create a <Code>ReferenceVND</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :     * Test function getReferenceVNDList. Create multiple <Code>ReferenceVND</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :     * Query all intances by DAO's <tt>doGetReferenceVNDList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       // Create multiple ReferenceVND instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       ReferenceVND anotherReferenceVND = dao.load(referenceVND.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :          referenceVND, anotherReferenceVND);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       ReferenceVNDTestHelper.delete(anotherReferenceVND);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       ReferenceVND another = dao.load(referenceVND.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       assertEquals("Queried result does not equal to updated instance", referenceVND, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       ReferenceVNDTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       ReferenceVND another = dao.load(referenceVND.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       // Create instances and set their property isStandardCheck to value isStandardCheck
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * and set their attribute availableFor to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionType another = KoQuestionTypeTestHelper.getKoQuestionTypeByPk(resultFound, koQuestionType.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             assertEquals("Result returned by find-by-isStandardCheck does not equal to inserted koQuestionType object.", koQuestionType, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * and set their attribute isDisabled to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       // Create instances and set their property availableFor to value availableFor
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       // Create instances and set their property isDisabled to value isDisabled
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterials another = KoQuestionMaterialsTestHelper.getKoQuestionMaterialsByPk(resultFound, koQuestionMaterials.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :             ReferenceVND another = ReferenceVNDTestHelper.getReferenceVNDByPk(resultFound, referenceVND.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             assertEquals("Result returned by find-by-availableFor does not equal to inserted koQuestionMaterials object.", koQuestionMaterials, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :             assertEquals("Result returned by get-referenceVND-list does not equal to inserted referenceVND object.", referenceVND, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionType another = KoQuestionTypeTestHelper.getKoQuestionTypeByPk(resultFound, koQuestionType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :             ReferenceVNDTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterialsTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             assertEquals("Result returned by find-by-isDisabled does not equal to inserted koQuestionType object.", koQuestionType, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionTypeTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * and set their attribute disabledFor to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * and set their attribute msAccessCode to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       // Create instances and set their property msAccessCode to value msAccessCode
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       // Create instances and set their property disabledFor to value disabledFor
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterials another = KoQuestionMaterialsTestHelper.getKoQuestionMaterialsByPk(resultFound, koQuestionMaterials.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             assertEquals("Result returned by find-by-disabledFor does not equal to inserted koQuestionMaterials object.", koQuestionMaterials, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterialsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * and set their attribute hasTemplate to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       // Create instances and set their property hasTemplate to value hasTemplate
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionType another = KoQuestionTypeTestHelper.getKoQuestionTypeByPk(resultFound, koQuestionType.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             assertEquals("Result returned by find-by-msAccessCode does not equal to inserted koQuestionType object.", koQuestionType, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * and set their attribute msAccessLabel to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       // Create instances and set their property msAccessLabel to value msAccessLabel
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :             ReferenceBaseQuestWeight another = ReferenceBaseQuestWeightTestHelper.getReferenceBaseQuestWeightByPk(resultFound, referenceBaseQuestWeight.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceVNDTestHelper.java :  * Purpose: Defines the test helper class for class ReferenceVND
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :             assertEquals("Result returned by get-referenceBaseQuestWeight-list does not equal to inserted referenceBaseQuestWeight object.", referenceBaseQuestWeight, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :             ReferenceBaseQuestWeightTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :     * been saved. Save the instance in the end.
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       ReferenceFinancialMarketsActType another = dao.load(referenceFinancialMarketsActType.getAbstractReferencePK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       assertEquals("Queried result does not equal to updated instance", referenceFinancialMarketsActType, another);  
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       ReferenceFinancialMarketsActTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       // Create instances and set their property email to value email
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       ReferenceFinancialMarketsActType another = dao.load(referenceFinancialMarketsActType.getAbstractReferencePK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :       assertNull("Inserted instance is not deleted", another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmail another = ReferenceKoSecretaryEmailTestHelper.getReferenceKoSecretaryEmailByPk(resultFound, referenceKoSecretaryEmail.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             assertEquals("Result returned by find-by-email does not equal to inserted referenceKoSecretaryEmail object.", referenceKoSecretaryEmail, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmailTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * and set their attribute gender to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       // Create instances and set their property gender to value gender
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :             ReferenceFinancialMarketsActType another = ReferenceFinancialMarketsActTypeTestHelper.getReferenceFinancialMarketsActTypeByPk(resultFound, referenceFinancialMarketsActType.getAbstractReferencePK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :             assertEquals("Result returned by get-referenceFinancialMarketsActType-list does not equal to inserted referenceFinancialMarketsActType object.", referenceFinancialMarketsActType, another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :             ReferenceFinancialMarketsActTypeTestHelper.delete(another);
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmail another = ReferenceKoSecretaryEmailTestHelper.getReferenceKoSecretaryEmailByPk(resultFound, referenceKoSecretaryEmail.getAbstractReferencePK());
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             assertEquals("Result returned by find-by-gender does not equal to inserted referenceKoSecretaryEmail object.", referenceKoSecretaryEmail, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmailTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * and set their attribute secretaryName to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :       // Create instances and set their property secretaryName to value secretaryName
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTestHelper.java :  * Purpose: Defines the test helper class for class RiskProfiles
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :  * Purpose: Defines test class to test the peristence of class RiskProfiles
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :  * Test case class to test the persistence of RiskProfiles
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :  * Purpose: Defines test class to test the peristence of class SelectedQuestionsKO
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :  * Test case class to test the persistence of SelectedQuestionsKO
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * Test object delete. Create a <Code>SelectedQuestionsKO</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>koQuestionType_code</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByKoQuestionType_code</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>koQuestionType_label</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByKoQuestionType_label</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>koQuestionCategory_code</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByKoQuestionCategory_code</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>koQuestionCategory_label</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByKoQuestionCategory_label</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>collectionModel_code</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByCollectionModel_code</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>problemGroup_code</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByProblemGroup_code</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>isVerificate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByIsVerificate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTestHelper.java :  * Purpose: Defines the test helper class for class SelectedQuestionsKO
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>isStandard</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByIsStandard</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>isMainInDFL</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByIsMainInDFL</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>msAccessCode</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByMsAccessCode</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :  * Purpose: Defines test class to test the peristence of class SpecialConditions
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>msAccessLabel</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByMsAccessLabel</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :  * Test case class to test the persistence of SpecialConditions
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :     * Test object delete. Create a <Code>SpecialConditions</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :     * Test function getSpecialConditionsList. Create multiple <Code>SpecialConditions</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :     * Query all intances by DAO's <tt>doGetSpecialConditionsList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * their attribute <Code>toolType_code</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       // Create multiple SpecialConditions instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * by DAO's <tt>findByToolType_code</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :      // Create SelectedQuestionsKO instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * Test function getSelectedQuestionsKOList. Create multiple <Code>SelectedQuestionsKO</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       SpecialConditions anotherSpecialConditions = dao.load(specialConditions.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterials another = KoQuestionMaterialsTestHelper.getKoQuestionMaterialsByPk(resultFound, koQuestionMaterials.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionType another = KoQuestionTypeTestHelper.getKoQuestionTypeByPk(resultFound, koQuestionType.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             assertEquals("Result returned by find-by-hasTemplate does not equal to inserted koQuestionMaterials object.", koQuestionMaterials, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterialsTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTestHelper.java :  * Purpose: Defines the test helper class for class SpecialConditions
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             assertEquals("Result returned by find-by-msAccessLabel does not equal to inserted koQuestionType object.", koQuestionType, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * and set their attribute templateLink to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * and set their attribute isSpecialQuestion to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :          specialConditions, anotherSpecialConditions);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :       // Create instances and set their property templateLink to value templateLink
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       SpecialConditionsTestHelper.delete(anotherSpecialConditions);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :       // Create instances and set their property isSpecialQuestion to value isSpecialQuestion
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterials another = KoQuestionMaterialsTestHelper.getKoQuestionMaterialsByPk(resultFound, koQuestionMaterials.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       SpecialConditions another = dao.load(specialConditions.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionType another = KoQuestionTypeTestHelper.getKoQuestionTypeByPk(resultFound, koQuestionType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       assertEquals("Queried result does not equal to updated instance", specialConditions, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             assertEquals("Result returned by find-by-templateLink does not equal to inserted koQuestionMaterials object.", koQuestionMaterials, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             assertEquals("Result returned by find-by-isSpecialQuestion does not equal to inserted koQuestionType object.", koQuestionType, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       SpecialConditionsTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionTypeTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterialsTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterials another = KoQuestionMaterialsTestHelper.getKoQuestionMaterialsByPk(resultFound, koQuestionMaterials.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             assertEquals("Result returned by get-koQuestionMaterials-list does not equal to inserted koQuestionMaterials object.", koQuestionMaterials, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :             KoQuestionMaterialsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       SpecialConditions another = dao.load(specialConditions.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionType another = KoQuestionTypeTestHelper.getKoQuestionTypeByPk(resultFound, koQuestionType.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * Query all intances by DAO's <tt>doGetSelectedQuestionsKOList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * Test object delete. Create a <Code>RiskProfiles</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create multiple SelectedQuestionsKO instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmail another = ReferenceKoSecretaryEmailTestHelper.getReferenceKoSecretaryEmailByPk(resultFound, referenceKoSecretaryEmail.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * their attribute <Code>borrowerSegment</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * by DAO's <tt>findByBorrowerSegment</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             assertEquals("Result returned by find-by-secretaryName does not equal to inserted referenceKoSecretaryEmail object.", referenceKoSecretaryEmail, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmailTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :      // Create RiskProfiles instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       SelectedQuestionsKO anotherSelectedQuestionsKO = dao.load(selectedQuestionsKO.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * their attribute <Code>arCategory</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :          selectedQuestionsKO, anotherSelectedQuestionsKO);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       SelectedQuestionsKOTestHelper.delete(anotherSelectedQuestionsKO);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmail another = ReferenceKoSecretaryEmailTestHelper.getReferenceKoSecretaryEmailByPk(resultFound, referenceKoSecretaryEmail.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       SelectedQuestionsKO another = dao.load(selectedQuestionsKO.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             assertEquals("Result returned by get-referenceKoSecretaryEmail-list does not equal to inserted referenceKoSecretaryEmail object.", referenceKoSecretaryEmail, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       assertEquals("Queried result does not equal to updated instance", selectedQuestionsKO, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :             ReferenceKoSecretaryEmailTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       SelectedQuestionsKOTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       SelectedQuestionsKO another = dao.load(selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute koQuestionType_code to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property koQuestionType_code to value koQuestionType_code
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :             SpecialConditions another = SpecialConditionsTestHelper.getSpecialConditionsByPk(resultFound, specialConditions.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :             assertEquals("Result returned by get-specialConditions-list does not equal to inserted specialConditions object.", specialConditions, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :             SpecialConditionsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             assertEquals("Result returned by get-koQuestionType-list does not equal to inserted koQuestionType object.", koQuestionType, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SpecialConditionsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * by DAO's <tt>findByArCategory</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :             KoQuestionTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :      // Create RiskProfiles instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * Test function getRiskProfilesList. Create multiple <Code>RiskProfiles</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * Query all intances by DAO's <tt>doGetRiskProfilesList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       // Create multiple RiskProfiles instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       RiskProfiles anotherRiskProfiles = dao.load(riskProfiles.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :          riskProfiles, anotherRiskProfiles);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       RiskProfilesTestHelper.delete(anotherRiskProfiles);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-koQuestionType_code does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       RiskProfiles another = dao.load(riskProfiles.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       assertEquals("Queried result does not equal to updated instance", riskProfiles, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       RiskProfilesTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute koQuestionType_label to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       RiskProfiles another = dao.load(riskProfiles.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * and set their attribute borrowerSegment to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property koQuestionType_label to value koQuestionType_label
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       // Create instances and set their property borrowerSegment to value borrowerSegment
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             RiskProfiles another = RiskProfilesTestHelper.getRiskProfilesByPk(resultFound, riskProfiles.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             assertEquals("Result returned by find-by-borrowerSegment does not equal to inserted riskProfiles object.", riskProfiles, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             RiskProfilesTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-koQuestionType_label does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * and set their attribute arCategory to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute koQuestionCategory_code to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :       // Create instances and set their property arCategory to value arCategory
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property koQuestionCategory_code to value koQuestionCategory_code
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             RiskProfiles another = RiskProfilesTestHelper.getRiskProfilesByPk(resultFound, riskProfiles.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             assertEquals("Result returned by find-by-arCategory does not equal to inserted riskProfiles object.", riskProfiles, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             RiskProfilesTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-koQuestionCategory_code does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute koQuestionCategory_label to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property koQuestionCategory_label to value koQuestionCategory_label
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             RiskProfiles another = RiskProfilesTestHelper.getRiskProfilesByPk(resultFound, riskProfiles.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             assertEquals("Result returned by get-riskProfiles-list does not equal to inserted riskProfiles object.", riskProfiles, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :             RiskProfilesTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-koQuestionCategory_label does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\RiskProfilesTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute collectionModel_code to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property collectionModel_code to value collectionModel_code
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-collectionModel_code does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute problemGroup_code to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property problemGroup_code to value problemGroup_code
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-problemGroup_code does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute isVerificate to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property isVerificate to value isVerificate
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-isVerificate does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute isStandard to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property isStandard to value isStandard
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-isStandard does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute isMainInDFL to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property isMainInDFL to value isMainInDFL
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-isMainInDFL does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute msAccessCode to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property msAccessCode to value msAccessCode
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-msAccessCode does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute msAccessLabel to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property msAccessLabel to value msAccessLabel
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-msAccessLabel does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * and set their attribute toolType_code to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :       // Create instances and set their property toolType_code to value toolType_code
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by find-by-toolType_code does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKO another = SelectedQuestionsKOTestHelper.getSelectedQuestionsKOByPk(resultFound, selectedQuestionsKO.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             assertEquals("Result returned by get-selectedQuestionsKO-list does not equal to inserted selectedQuestionsKO object.", selectedQuestionsKO, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :             SelectedQuestionsKOTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :  * Purpose: Defines test class to test the peristence of class AdditionalFinancing
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTestHelper.java :  * Purpose: Defines the test helper class for class AdditionalFinancing
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :  * Test case class to test the persistence of AdditionalFinancing
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * Test object delete. Create a <Code>AdditionalFinancing</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * their attribute <Code>toolPurpose</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * by DAO's <tt>findByToolPurpose</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :      // Create AdditionalFinancing instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * their attribute <Code>addFinanceSigned</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * by DAO's <tt>findByAddFinanceSigned</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :      // Create AdditionalFinancing instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :      // Create AdditionalFinancing instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * their attribute <Code>assignContractNum</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * by DAO's <tt>findByAssignContractNum</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :      // Create AdditionalFinancing instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * their attribute <Code>assignContractDate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * by DAO's <tt>findByAssignContractDate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :      // Create AdditionalFinancing instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * Test function getAdditionalFinancingList. Create multiple <Code>AdditionalFinancing</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * Query all intances by DAO's <tt>doGetAdditionalFinancingList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       // Create multiple AdditionalFinancing instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       AdditionalFinancing anotherAdditionalFinancing = dao.load(additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :          additionalFinancing, anotherAdditionalFinancing);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       AdditionalFinancingTestHelper.delete(anotherAdditionalFinancing);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       AdditionalFinancing another = dao.load(additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       assertEquals("Queried result does not equal to updated instance", additionalFinancing, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       AdditionalFinancingTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       AdditionalFinancing another = dao.load(additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * and set their attribute toolPurpose to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       // Create instances and set their property toolPurpose to value toolPurpose
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancing another = AdditionalFinancingTestHelper.getAdditionalFinancingByPk(resultFound, additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             assertEquals("Result returned by find-by-toolPurpose does not equal to inserted additionalFinancing object.", additionalFinancing, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancingTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * and set their attribute addFinanceSigned to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       // Create instances and set their property addFinanceSigned to value addFinanceSigned
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancing another = AdditionalFinancingTestHelper.getAdditionalFinancingByPk(resultFound, additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             assertEquals("Result returned by find-by-addFinanceSigned does not equal to inserted additionalFinancing object.", additionalFinancing, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancingTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancing another = AdditionalFinancingTestHelper.getAdditionalFinancingByPk(resultFound, additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted additionalFinancing object.", additionalFinancing, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancingTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * and set their attribute assignContractNum to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       // Create instances and set their property assignContractNum to value assignContractNum
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancing another = AdditionalFinancingTestHelper.getAdditionalFinancingByPk(resultFound, additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             assertEquals("Result returned by find-by-assignContractNum does not equal to inserted additionalFinancing object.", additionalFinancing, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancingTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * and set their attribute assignContractDate to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :       // Create instances and set their property assignContractDate to value assignContractDate
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancing another = AdditionalFinancingTestHelper.getAdditionalFinancingByPk(resultFound, additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             assertEquals("Result returned by find-by-assignContractDate does not equal to inserted additionalFinancing object.", additionalFinancing, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancingTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancing another = AdditionalFinancingTestHelper.getAdditionalFinancingByPk(resultFound, additionalFinancing.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             assertEquals("Result returned by get-additionalFinancing-list does not equal to inserted additionalFinancing object.", additionalFinancing, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :             AdditionalFinancingTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :  * Purpose: Defines test class to test the peristence of class AmicableAgreementTool
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :  * Test case class to test the persistence of AmicableAgreementTool
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * Test object delete. Create a <Code>AmicableAgreementTool</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * their attribute <Code>dateCourtDecision</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * by DAO's <tt>findByDateCourtDecision</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :      // Create AmicableAgreementTool instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * their attribute <Code>numberCourtDecision</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * by DAO's <tt>findByNumberCourtDecision</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :      // Create AmicableAgreementTool instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * their attribute <Code>amicAgreementSigned</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * by DAO's <tt>findByAmicAgreementSigned</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :      // Create AmicableAgreementTool instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :      // Create AmicableAgreementTool instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTestHelper.java :  * Purpose: Defines the test helper class for class AmicableAgreementTool
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * Test function getAmicableAgreementToolList. Create multiple <Code>AmicableAgreementTool</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * Query all intances by DAO's <tt>doGetAmicableAgreementToolList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       // Create multiple AmicableAgreementTool instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       AmicableAgreementTool anotherAmicableAgreementTool = dao.load(amicableAgreementTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :          amicableAgreementTool, anotherAmicableAgreementTool);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       AmicableAgreementToolTestHelper.delete(anotherAmicableAgreementTool);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       AmicableAgreementTool another = dao.load(amicableAgreementTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       assertEquals("Queried result does not equal to updated instance", amicableAgreementTool, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       AmicableAgreementToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :  * Purpose: Defines test class to test the peristence of class AmicableCreditAgreement
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       AmicableAgreementTool another = dao.load(amicableAgreementTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * and set their attribute dateCourtDecision to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :  * Test case class to test the persistence of AmicableCreditAgreement
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       // Create instances and set their property dateCourtDecision to value dateCourtDecision
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * Test object delete. Create a <Code>AmicableCreditAgreement</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :      // Create AmicableCreditAgreement instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * Test function getAmicableCreditAgreementList. Create multiple <Code>AmicableCreditAgreement</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * Query all intances by DAO's <tt>doGetAmicableCreditAgreementList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       // Create multiple AmicableCreditAgreement instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementTool another = AmicableAgreementToolTestHelper.getAmicableAgreementToolByPk(resultFound, amicableAgreementTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             assertEquals("Result returned by find-by-dateCourtDecision does not equal to inserted amicableAgreementTool object.", amicableAgreementTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * and set their attribute numberCourtDecision to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       AmicableCreditAgreement anotherAmicableCreditAgreement = dao.load(amicableCreditAgreement.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :          amicableCreditAgreement, anotherAmicableCreditAgreement);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       // Create instances and set their property numberCourtDecision to value numberCourtDecision
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       AmicableCreditAgreementTestHelper.delete(anotherAmicableCreditAgreement);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTestHelper.java :  * Purpose: Defines the test helper class for class AmicableCreditAgreement
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementTool another = AmicableAgreementToolTestHelper.getAmicableAgreementToolByPk(resultFound, amicableAgreementTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       AmicableCreditAgreement another = dao.load(amicableCreditAgreement.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             assertEquals("Result returned by find-by-numberCourtDecision does not equal to inserted amicableAgreementTool object.", amicableAgreementTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", amicableCreditAgreement, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * and set their attribute amicAgreementSigned to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       AmicableCreditAgreementTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       // Create instances and set their property amicAgreementSigned to value amicAgreementSigned
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       AmicableCreditAgreement another = dao.load(amicableCreditAgreement.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementTool another = AmicableAgreementToolTestHelper.getAmicableAgreementToolByPk(resultFound, amicableAgreementTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             assertEquals("Result returned by find-by-amicAgreementSigned does not equal to inserted amicableAgreementTool object.", amicableAgreementTool, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :             AmicableCreditAgreement another = AmicableCreditAgreementTestHelper.getAmicableCreditAgreementByPk(resultFound, amicableCreditAgreement.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted amicableCreditAgreement object.", amicableCreditAgreement, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :             AmicableCreditAgreementTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :             AmicableCreditAgreement another = AmicableCreditAgreementTestHelper.getAmicableCreditAgreementByPk(resultFound, amicableCreditAgreement.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :             assertEquals("Result returned by get-amicableCreditAgreement-list does not equal to inserted amicableCreditAgreement object.", amicableCreditAgreement, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :             AmicableCreditAgreementTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementTool another = AmicableAgreementToolTestHelper.getAmicableAgreementToolByPk(resultFound, amicableAgreementTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted amicableAgreementTool object.", amicableAgreementTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementTool another = AmicableAgreementToolTestHelper.getAmicableAgreementToolByPk(resultFound, amicableAgreementTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             assertEquals("Result returned by get-amicableAgreementTool-list does not equal to inserted amicableAgreementTool object.", amicableAgreementTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :             AmicableAgreementToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :  * Purpose: Defines test class to test the peristence of class BailToBalanceCredAgr
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :  * Test case class to test the persistence of BailToBalanceCredAgr
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * Test object delete. Create a <Code>BailToBalanceCredAgr</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :      // Create BailToBalanceCredAgr instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * Test function getBailToBalanceCredAgrList. Create multiple <Code>BailToBalanceCredAgr</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * Query all intances by DAO's <tt>doGetBailToBalanceCredAgrList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       // Create multiple BailToBalanceCredAgr instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTestHelper.java :  * Purpose: Defines the test helper class for class BailToBalanceCredAgr
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       BailToBalanceCredAgr anotherBailToBalanceCredAgr = dao.load(bailToBalanceCredAgr.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :          bailToBalanceCredAgr, anotherBailToBalanceCredAgr);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       BailToBalanceCredAgrTestHelper.delete(anotherBailToBalanceCredAgr);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       BailToBalanceCredAgr another = dao.load(bailToBalanceCredAgr.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       assertEquals("Queried result does not equal to updated instance", bailToBalanceCredAgr, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       BailToBalanceCredAgrTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       BailToBalanceCredAgr another = dao.load(bailToBalanceCredAgr.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :             BailToBalanceCredAgr another = BailToBalanceCredAgrTestHelper.getBailToBalanceCredAgrByPk(resultFound, bailToBalanceCredAgr.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted bailToBalanceCredAgr object.", bailToBalanceCredAgr, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :  * Purpose: Defines test class to test the peristence of class BailToBalance
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :             BailToBalanceCredAgrTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :  * Test case class to test the persistence of BailToBalance
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * Test object delete. Create a <Code>BailToBalance</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :             BailToBalanceCredAgr another = BailToBalanceCredAgrTestHelper.getBailToBalanceCredAgrByPk(resultFound, bailToBalanceCredAgr.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * their attribute <Code>bailToBalanceSigned</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :             assertEquals("Result returned by get-bailToBalanceCredAgr-list does not equal to inserted bailToBalanceCredAgr object.", bailToBalanceCredAgr, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * by DAO's <tt>findByBailToBalanceSigned</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :             BailToBalanceCredAgrTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :      // Create BailToBalance instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTestHelper.java :  * Purpose: Defines the test helper class for class BailToBalance
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :      // Create BailToBalance instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * Test function getBailToBalanceList. Create multiple <Code>BailToBalance</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * Query all intances by DAO's <tt>doGetBailToBalanceList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       // Create multiple BailToBalance instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       BailToBalance anotherBailToBalance = dao.load(bailToBalance.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :          bailToBalance, anotherBailToBalance);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       BailToBalanceTestHelper.delete(anotherBailToBalance);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       BailToBalance another = dao.load(bailToBalance.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       assertEquals("Queried result does not equal to updated instance", bailToBalance, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       BailToBalanceTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       BailToBalance another = dao.load(bailToBalance.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * and set their attribute bailToBalanceSigned to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       // Create instances and set their property bailToBalanceSigned to value bailToBalanceSigned
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             BailToBalance another = BailToBalanceTestHelper.getBailToBalanceByPk(resultFound, bailToBalance.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             assertEquals("Result returned by find-by-bailToBalanceSigned does not equal to inserted bailToBalance object.", bailToBalance, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             BailToBalanceTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             BailToBalance another = BailToBalanceTestHelper.getBailToBalanceByPk(resultFound, bailToBalance.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted bailToBalance object.", bailToBalance, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             BailToBalanceTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             BailToBalance another = BailToBalanceTestHelper.getBailToBalanceByPk(resultFound, bailToBalance.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             assertEquals("Result returned by get-bailToBalance-list does not equal to inserted bailToBalance object.", bailToBalance, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :             BailToBalanceTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :  * Purpose: Defines test class to test the peristence of class CessionCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :  * Test case class to test the persistence of CessionCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * Test object delete. Create a <Code>CessionCreditAgreement</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :      // Create CessionCreditAgreement instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * Test function getCessionCreditAgreementList. Create multiple <Code>CessionCreditAgreement</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * Query all intances by DAO's <tt>doGetCessionCreditAgreementList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       // Create multiple CessionCreditAgreement instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTestHelper.java :  * Purpose: Defines the test helper class for class CessionCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       CessionCreditAgreement anotherCessionCreditAgreement = dao.load(cessionCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :          cessionCreditAgreement, anotherCessionCreditAgreement);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       CessionCreditAgreementTestHelper.delete(anotherCessionCreditAgreement);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :  * Purpose: Defines test class to test the peristence of class CessionTool
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :  * Test case class to test the persistence of CessionTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       CessionCreditAgreement another = dao.load(cessionCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", cessionCreditAgreement, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       CessionCreditAgreementTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * Test object delete. Create a <Code>CessionTool</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       CessionCreditAgreement another = dao.load(cessionCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * their attribute <Code>assignContractNum</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * by DAO's <tt>findByAssignContractNum</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :      // Create CessionTool instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTestHelper.java :  * Purpose: Defines the test helper class for class CessionTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :             CessionCreditAgreement another = CessionCreditAgreementTestHelper.getCessionCreditAgreementByPk(resultFound, cessionCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted cessionCreditAgreement object.", cessionCreditAgreement, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :             CessionCreditAgreementTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * their attribute <Code>assignContractDate</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * by DAO's <tt>findByAssignContractDate</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :      // Create CessionTool instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * their attribute <Code>assigneeAuction</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * by DAO's <tt>findByAssigneeAuction</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :      // Create CessionTool instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :             CessionCreditAgreement another = CessionCreditAgreementTestHelper.getCessionCreditAgreementByPk(resultFound, cessionCreditAgreement.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * their attribute <Code>rightsAfterPay</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :             assertEquals("Result returned by get-cessionCreditAgreement-list does not equal to inserted cessionCreditAgreement object.", cessionCreditAgreement, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * by DAO's <tt>findByRightsAfterPay</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :             CessionCreditAgreementTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :      // Create CessionTool instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * their attribute <Code>assignContractSigned</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * by DAO's <tt>findByAssignContractSigned</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :      // Create CessionTool instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :      // Create CessionTool instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * Test function getCessionToolList. Create multiple <Code>CessionTool</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * Query all intances by DAO's <tt>doGetCessionToolList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       // Create multiple CessionTool instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       CessionTool anotherCessionTool = dao.load(cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :          cessionTool, anotherCessionTool);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       CessionToolTestHelper.delete(anotherCessionTool);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       CessionTool another = dao.load(cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       assertEquals("Queried result does not equal to updated instance", cessionTool, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       CessionTool another = dao.load(cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * and set their attribute assignContractNum to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       // Create instances and set their property assignContractNum to value assignContractNum
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionTool another = CessionToolTestHelper.getCessionToolByPk(resultFound, cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             assertEquals("Result returned by find-by-assignContractNum does not equal to inserted cessionTool object.", cessionTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * and set their attribute assignContractDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       // Create instances and set their property assignContractDate to value assignContractDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionTool another = CessionToolTestHelper.getCessionToolByPk(resultFound, cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             assertEquals("Result returned by find-by-assignContractDate does not equal to inserted cessionTool object.", cessionTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * and set their attribute assigneeAuction to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       // Create instances and set their property assigneeAuction to value assigneeAuction
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionTool another = CessionToolTestHelper.getCessionToolByPk(resultFound, cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             assertEquals("Result returned by find-by-assigneeAuction does not equal to inserted cessionTool object.", cessionTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * and set their attribute rightsAfterPay to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       // Create instances and set their property rightsAfterPay to value rightsAfterPay
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionTool another = CessionToolTestHelper.getCessionToolByPk(resultFound, cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             assertEquals("Result returned by find-by-rightsAfterPay does not equal to inserted cessionTool object.", cessionTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * and set their attribute assignContractSigned to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       // Create instances and set their property assignContractSigned to value assignContractSigned
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionTool another = CessionToolTestHelper.getCessionToolByPk(resultFound, cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             assertEquals("Result returned by find-by-assignContractSigned does not equal to inserted cessionTool object.", cessionTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionTool another = CessionToolTestHelper.getCessionToolByPk(resultFound, cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted cessionTool object.", cessionTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionTool another = CessionToolTestHelper.getCessionToolByPk(resultFound, cessionTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             assertEquals("Result returned by get-cessionTool-list does not equal to inserted cessionTool object.", cessionTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :             CessionToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :  * Purpose: Defines test class to test the peristence of class CompensationCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :  * Test case class to test the persistence of CompensationCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * Test object delete. Create a <Code>CompensationCreditAgreement</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :      // Create CompensationCreditAgreement instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTestHelper.java :  * Purpose: Defines the test helper class for class CompensationCreditAgreement
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * Test function getCompensationCreditAgreementList. Create multiple <Code>CompensationCreditAgreement</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * Query all intances by DAO's <tt>doGetCompensationCreditAgreementList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       // Create multiple CompensationCreditAgreement instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       CompensationCreditAgreement anotherCompensationCreditAgreement = dao.load(compensationCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :          compensationCreditAgreement, anotherCompensationCreditAgreement);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :  * Purpose: Defines test class to test the peristence of class CompensationTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       CompensationCreditAgreementTestHelper.delete(anotherCompensationCreditAgreement);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :  * Test case class to test the persistence of CompensationTool
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * Test object delete. Create a <Code>CompensationTool</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * their attribute <Code>compensationSigned</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * by DAO's <tt>findByCompensationSigned</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :      // Create CompensationTool instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       CompensationCreditAgreement another = dao.load(compensationCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", compensationCreditAgreement, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :      // Create CompensationTool instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       CompensationCreditAgreementTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * Test function getCompensationToolList. Create multiple <Code>CompensationTool</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTestHelper.java :  * Purpose: Defines the test helper class for class CompensationTool
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       CompensationCreditAgreement another = dao.load(compensationCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * Query all intances by DAO's <tt>doGetCompensationToolList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       // Create multiple CompensationTool instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       CompensationTool anotherCompensationTool = dao.load(compensationTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :          compensationTool, anotherCompensationTool);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :             CompensationCreditAgreement another = CompensationCreditAgreementTestHelper.getCompensationCreditAgreementByPk(resultFound, compensationCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted compensationCreditAgreement object.", compensationCreditAgreement, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :             CompensationCreditAgreementTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       CompensationToolTestHelper.delete(anotherCompensationTool);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       CompensationTool another = dao.load(compensationTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       assertEquals("Queried result does not equal to updated instance", compensationTool, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       CompensationToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       CompensationTool another = dao.load(compensationTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * and set their attribute compensationSigned to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       // Create instances and set their property compensationSigned to value compensationSigned
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :             CompensationCreditAgreement another = CompensationCreditAgreementTestHelper.getCompensationCreditAgreementByPk(resultFound, compensationCreditAgreement.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :             assertEquals("Result returned by get-compensationCreditAgreement-list does not equal to inserted compensationCreditAgreement object.", compensationCreditAgreement, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             CompensationTool another = CompensationToolTestHelper.getCompensationToolByPk(resultFound, compensationTool.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :             CompensationCreditAgreementTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             assertEquals("Result returned by find-by-compensationSigned does not equal to inserted compensationTool object.", compensationTool, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             CompensationToolTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             CompensationTool another = CompensationToolTestHelper.getCompensationToolByPk(resultFound, compensationTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted compensationTool object.", compensationTool, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             CompensationToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             CompensationTool another = CompensationToolTestHelper.getCompensationToolByPk(resultFound, compensationTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             assertEquals("Result returned by get-compensationTool-list does not equal to inserted compensationTool object.", compensationTool, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :             CompensationToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :  * Purpose: Defines test class to test the peristence of class ApplicationStatus
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :  * Test case class to test the persistence of ApplicationStatus
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :     * Test object delete. Create a <Code>ApplicationStatus</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :     * Test function getApplicationStatusList. Create multiple <Code>ApplicationStatus</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :     * Query all intances by DAO's <tt>doGetApplicationStatusList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       // Create multiple ApplicationStatus instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTestHelper.java :  * Purpose: Defines the test helper class for class ApplicationStatus
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       ApplicationStatus anotherApplicationStatus = dao.load(applicationStatus.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :          applicationStatus, anotherApplicationStatus);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       ApplicationStatusTestHelper.delete(anotherApplicationStatus);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       ApplicationStatus another = dao.load(applicationStatus.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :  * Purpose: Defines test class to test the peristence of class CivilAction
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       assertEquals("Queried result does not equal to updated instance", applicationStatus, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       ApplicationStatusTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :  * Test case class to test the persistence of CivilAction
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :     * Test object delete. Create a <Code>CivilAction</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :     * Test function getCivilActionList. Create multiple <Code>CivilAction</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :     * Query all intances by DAO's <tt>doGetCivilActionList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       // Create multiple CivilAction instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       ApplicationStatus another = dao.load(applicationStatus.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       CivilAction anotherCivilAction = dao.load(civilAction.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :          civilAction, anotherCivilAction);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       CivilActionTestHelper.delete(anotherCivilAction);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       CivilAction another = dao.load(civilAction.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       assertEquals("Queried result does not equal to updated instance", civilAction, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       CivilActionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTestHelper.java :  * Purpose: Defines the test helper class for class CivilAction
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :             ApplicationStatus another = ApplicationStatusTestHelper.getApplicationStatusByPk(resultFound, applicationStatus.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :             assertEquals("Result returned by get-applicationStatus-list does not equal to inserted applicationStatus object.", applicationStatus, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :             ApplicationStatusTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       CivilAction another = dao.load(civilAction.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :  * Purpose: Defines test class to test the peristence of class CriminalCase
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :  * Test case class to test the persistence of CriminalCase
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :             CivilAction another = CivilActionTestHelper.getCivilActionByPk(resultFound, civilAction.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :             assertEquals("Result returned by get-civilAction-list does not equal to inserted civilAction object.", civilAction, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :             CivilActionTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * Test object delete. Create a <Code>CriminalCase</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * their attribute <Code>initiationDate</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTestHelper.java :  * Purpose: Defines the test helper class for class CriminalCase
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * by DAO's <tt>findByInitiationDate</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :      // Create CriminalCase instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * their attribute <Code>number</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * by DAO's <tt>findByNumber</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :      // Create CriminalCase instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * their attribute <Code>reason</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * by DAO's <tt>findByReason</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :      // Create CriminalCase instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * Test function getCriminalCaseList. Create multiple <Code>CriminalCase</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * Query all intances by DAO's <tt>doGetCriminalCaseList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       // Create multiple CriminalCase instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       CriminalCase anotherCriminalCase = dao.load(criminalCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :          criminalCase, anotherCriminalCase);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       CriminalCaseTestHelper.delete(anotherCriminalCase);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       CriminalCase another = dao.load(criminalCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :  * Purpose: Defines test class to test the peristence of class CriminalCodeArticle
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       assertEquals("Queried result does not equal to updated instance", criminalCase, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       CriminalCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       CriminalCase another = dao.load(criminalCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :  * Test case class to test the persistence of CriminalCodeArticle
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * and set their attribute initiationDate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       // Create instances and set their property initiationDate to value initiationDate
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCase another = CriminalCaseTestHelper.getCriminalCaseByPk(resultFound, criminalCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :     * Test object delete. Create a <Code>CriminalCodeArticle</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             assertEquals("Result returned by find-by-initiationDate does not equal to inserted criminalCase object.", criminalCase, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * and set their attribute number to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :     * Test function getCriminalCodeArticleList. Create multiple <Code>CriminalCodeArticle</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :     * Query all intances by DAO's <tt>doGetCriminalCodeArticleList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       // Create instances and set their property number to value number
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       // Create multiple CriminalCodeArticle instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCase another = CriminalCaseTestHelper.getCriminalCaseByPk(resultFound, criminalCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             assertEquals("Result returned by find-by-number does not equal to inserted criminalCase object.", criminalCase, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       CriminalCodeArticle anotherCriminalCodeArticle = dao.load(criminalCodeArticle.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTestHelper.java :  * Purpose: Defines the test helper class for class CriminalCodeArticle
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :          criminalCodeArticle, anotherCriminalCodeArticle);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       CriminalCodeArticleTestHelper.delete(anotherCriminalCodeArticle);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       CriminalCodeArticle another = dao.load(criminalCodeArticle.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       assertEquals("Queried result does not equal to updated instance", criminalCodeArticle, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       CriminalCodeArticleTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * and set their attribute reason to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :       // Create instances and set their property reason to value reason
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCase another = CriminalCaseTestHelper.getCriminalCaseByPk(resultFound, criminalCase.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             assertEquals("Result returned by find-by-reason does not equal to inserted criminalCase object.", criminalCase, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCaseTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       CriminalCodeArticle another = dao.load(criminalCodeArticle.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCase another = CriminalCaseTestHelper.getCriminalCaseByPk(resultFound, criminalCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             assertEquals("Result returned by get-criminalCase-list does not equal to inserted criminalCase object.", criminalCase, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :             CriminalCaseTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :  * Purpose: Defines test class to test the peristence of class CriminalProsecutionApplication
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :  * Test case class to test the persistence of CriminalProsecutionApplication
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * Test object delete. Create a <Code>CriminalProsecutionApplication</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTestHelper.java :  * Purpose: Defines the test helper class for class CriminalProsecutionApplication
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * their attribute <Code>applicationDate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * by DAO's <tt>findByApplicationDate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :      // Create CriminalProsecutionApplication instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * their attribute <Code>criminalCaseStarted</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * by DAO's <tt>findByCriminalCaseStarted</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :      // Create CriminalProsecutionApplication instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * Test function getCriminalProsecutionApplicationList. Create multiple <Code>CriminalProsecutionApplication</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * Query all intances by DAO's <tt>doGetCriminalProsecutionApplicationList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :             CriminalCodeArticle another = CriminalCodeArticleTestHelper.getCriminalCodeArticleByPk(resultFound, criminalCodeArticle.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :             assertEquals("Result returned by get-criminalCodeArticle-list does not equal to inserted criminalCodeArticle object.", criminalCodeArticle, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :             CriminalCodeArticleTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :  * Purpose: Defines test class to test the peristence of class CriminalProsecution
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :  * Test case class to test the persistence of CriminalProsecution
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * Test object delete. Create a <Code>CriminalProsecution</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * their attribute <Code>responderUnknown</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * by DAO's <tt>findByResponderUnknown</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :      // Create CriminalProsecution instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * their attribute <Code>civilActionDeclared</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * by DAO's <tt>findByCivilActionDeclared</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :      // Create CriminalProsecution instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       // Create multiple CriminalProsecutionApplication instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTestHelper.java :  * Purpose: Defines the test helper class for class CriminalProsecution
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       CriminalProsecutionApplication anotherCriminalProsecutionApplication = dao.load(criminalProsecutionApplication.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :          criminalProsecutionApplication, anotherCriminalProsecutionApplication);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       CriminalProsecutionApplicationTestHelper.delete(anotherCriminalProsecutionApplication);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * their attribute <Code>courtDecisionText</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * by DAO's <tt>findByCourtDecisionText</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :      // Create CriminalProsecution instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       CriminalProsecutionApplication another = dao.load(criminalProsecutionApplication.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * Test function getCriminalProsecutionList. Create multiple <Code>CriminalProsecution</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       assertEquals("Queried result does not equal to updated instance", criminalProsecutionApplication, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * Query all intances by DAO's <tt>doGetCriminalProsecutionList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       CriminalProsecutionApplicationTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       // Create multiple CriminalProsecution instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       CriminalProsecutionApplication another = dao.load(criminalProsecutionApplication.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * and set their attribute applicationDate to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       // Create instances and set their property applicationDate to value applicationDate
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             CriminalProsecutionApplication another = CriminalProsecutionApplicationTestHelper.getCriminalProsecutionApplicationByPk(resultFound, criminalProsecutionApplication.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             assertEquals("Result returned by find-by-applicationDate does not equal to inserted criminalProsecutionApplication object.", criminalProsecutionApplication, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             CriminalProsecutionApplicationTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * and set their attribute criminalCaseStarted to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       CriminalProsecution anotherCriminalProsecution = dao.load(criminalProsecution.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :          criminalProsecution, anotherCriminalProsecution);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       CriminalProsecutionTestHelper.delete(anotherCriminalProsecution);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       CriminalProsecution another = dao.load(criminalProsecution.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       assertEquals("Queried result does not equal to updated instance", criminalProsecution, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       CriminalProsecutionTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       CriminalProsecution another = dao.load(criminalProsecution.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :       // Create instances and set their property criminalCaseStarted to value criminalCaseStarted
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * and set their attribute responderUnknown to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       // Create instances and set their property responderUnknown to value responderUnknown
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             CriminalProsecutionApplication another = CriminalProsecutionApplicationTestHelper.getCriminalProsecutionApplicationByPk(resultFound, criminalProsecutionApplication.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             assertEquals("Result returned by find-by-criminalCaseStarted does not equal to inserted criminalProsecutionApplication object.", criminalProsecutionApplication, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             CriminalProsecutionApplicationTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecution another = CriminalProsecutionTestHelper.getCriminalProsecutionByPk(resultFound, criminalProsecution.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             assertEquals("Result returned by find-by-responderUnknown does not equal to inserted criminalProsecution object.", criminalProsecution, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecutionTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * and set their attribute civilActionDeclared to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             CriminalProsecutionApplication another = CriminalProsecutionApplicationTestHelper.getCriminalProsecutionApplicationByPk(resultFound, criminalProsecutionApplication.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       // Create instances and set their property civilActionDeclared to value civilActionDeclared
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             assertEquals("Result returned by get-criminalProsecutionApplication-list does not equal to inserted criminalProsecutionApplication object.", criminalProsecutionApplication, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :             CriminalProsecutionApplicationTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecution another = CriminalProsecutionTestHelper.getCriminalProsecutionByPk(resultFound, criminalProsecution.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             assertEquals("Result returned by find-by-civilActionDeclared does not equal to inserted criminalProsecution object.", criminalProsecution, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecutionTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * and set their attribute courtDecisionText to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :       // Create instances and set their property courtDecisionText to value courtDecisionText
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecution another = CriminalProsecutionTestHelper.getCriminalProsecutionByPk(resultFound, criminalProsecution.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             assertEquals("Result returned by find-by-courtDecisionText does not equal to inserted criminalProsecution object.", criminalProsecution, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecutionTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecution another = CriminalProsecutionTestHelper.getCriminalProsecutionByPk(resultFound, criminalProsecution.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             assertEquals("Result returned by get-criminalProsecution-list does not equal to inserted criminalProsecution object.", criminalProsecution, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :             CriminalProsecutionTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :  * Purpose: Defines test class to test the peristence of class Investigator
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :  * Test case class to test the persistence of Investigator
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * Test object delete. Create a <Code>Investigator</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * their attribute <Code>contacts</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * by DAO's <tt>findByContacts</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :      // Create Investigator instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * Test function getInvestigatorList. Create multiple <Code>Investigator</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * Query all intances by DAO's <tt>doGetInvestigatorList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       // Create multiple Investigator instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       Investigator anotherInvestigator = dao.load(investigator.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :          investigator, anotherInvestigator);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       InvestigatorTestHelper.delete(anotherInvestigator);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       Investigator another = dao.load(investigator.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       assertEquals("Queried result does not equal to updated instance", investigator, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       InvestigatorTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       Investigator another = dao.load(investigator.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * and set their attribute contacts to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :       // Create instances and set their property contacts to value contacts
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :             Investigator another = InvestigatorTestHelper.getInvestigatorByPk(resultFound, investigator.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :             assertEquals("Result returned by find-by-contacts does not equal to inserted investigator object.", investigator, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :             InvestigatorTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :             Investigator another = InvestigatorTestHelper.getInvestigatorByPk(resultFound, investigator.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :             assertEquals("Result returned by get-investigator-list does not equal to inserted investigator object.", investigator, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :             InvestigatorTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTestHelper.java :  * Purpose: Defines the test helper class for class Investigator
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :  * Purpose: Defines test class to test the peristence of class LawEnforcementAgency
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :  * Test case class to test the persistence of LawEnforcementAgency
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTestHelper.java :  * Purpose: Defines the test helper class for class LawEnforcementAgency
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :  * Purpose: Defines test class to test the peristence of class ReasonEndCriminalCase
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :  * Test case class to test the persistence of ReasonEndCriminalCase
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :     * Test object delete. Create a <Code>ReasonEndCriminalCase</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * Test object delete. Create a <Code>LawEnforcementAgency</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :     * Test function getReasonEndCriminalCaseList. Create multiple <Code>ReasonEndCriminalCase</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * their attribute <Code>name</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :     * Query all intances by DAO's <tt>doGetReasonEndCriminalCaseList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * by DAO's <tt>findByName</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       // Create multiple ReasonEndCriminalCase instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :      // Create LawEnforcementAgency instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * Test function getLawEnforcementAgencyList. Create multiple <Code>LawEnforcementAgency</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * Query all intances by DAO's <tt>doGetLawEnforcementAgencyList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       // Create multiple LawEnforcementAgency instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       ReasonEndCriminalCase anotherReasonEndCriminalCase = dao.load(reasonEndCriminalCase.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :          reasonEndCriminalCase, anotherReasonEndCriminalCase);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       ReasonEndCriminalCaseTestHelper.delete(anotherReasonEndCriminalCase);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTestHelper.java :  * Purpose: Defines the test helper class for class ReasonEndCriminalCase
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       LawEnforcementAgency anotherLawEnforcementAgency = dao.load(lawEnforcementAgency.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :          lawEnforcementAgency, anotherLawEnforcementAgency);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       LawEnforcementAgencyTestHelper.delete(anotherLawEnforcementAgency);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       ReasonEndCriminalCase another = dao.load(reasonEndCriminalCase.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       assertEquals("Queried result does not equal to updated instance", reasonEndCriminalCase, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       ReasonEndCriminalCaseTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       LawEnforcementAgency another = dao.load(lawEnforcementAgency.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       assertEquals("Queried result does not equal to updated instance", lawEnforcementAgency, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       LawEnforcementAgencyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       ReasonEndCriminalCase another = dao.load(reasonEndCriminalCase.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       LawEnforcementAgency another = dao.load(lawEnforcementAgency.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * and set their attribute name to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :             ReasonEndCriminalCase another = ReasonEndCriminalCaseTestHelper.getReasonEndCriminalCaseByPk(resultFound, reasonEndCriminalCase.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :             assertEquals("Result returned by get-reasonEndCriminalCase-list does not equal to inserted reasonEndCriminalCase object.", reasonEndCriminalCase, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :             ReasonEndCriminalCaseTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :       // Create instances and set their property name to value name
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :             LawEnforcementAgency another = LawEnforcementAgencyTestHelper.getLawEnforcementAgencyByPk(resultFound, lawEnforcementAgency.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :             assertEquals("Result returned by find-by-name does not equal to inserted lawEnforcementAgency object.", lawEnforcementAgency, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :             LawEnforcementAgencyTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :             LawEnforcementAgency another = LawEnforcementAgencyTestHelper.getLawEnforcementAgencyByPk(resultFound, lawEnforcementAgency.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :             assertEquals("Result returned by get-lawEnforcementAgency-list does not equal to inserted lawEnforcementAgency object.", lawEnforcementAgency, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :             LawEnforcementAgencyTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\dao\UniversalToolDealDao.java :     * Find <Code>UniversalToolDeal</Code> instances from persistence store by attribute otherCondition
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\dao\UniversalToolDealDao.java :     * @param otherCondition
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\dao\UniversalToolDealDao.java :    public List findByOtherCondition(String otherCondition) throws DaoException;
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\dao\UniversalToolDealDao.java :     * persistence store by attribute otherCondition
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\dao\UniversalToolDealDao.java :     * @param otherCondition
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\dao\UniversalToolDealDao.java :    public List findByOtherCondition(String otherCondition, int firstResult, int maxResult) throws DaoException;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :    private static final String FIND_BY_PROPERTY_OTHERCONDITION = "Select o from UniversalToolDeal o where o.otherCondition = :otherCondition";
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :       if (!(universalToolDealObject.getOtherCondition() == null || (universalToolDealObject.getOtherCondition() != null && universalToolDealObject.getOtherCondition().equals("")))) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :          buffer.append(" and o.otherCondition = :otherCondition");
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :          paramNames.add("otherCondition");
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :          params.add(universalToolDealObject.getOtherCondition());      
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :     * @see ru.sbrf.uvz.model.instruments.dao.UniversalToolDealDao#findByOtherCondition(String)
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :    public List findByOtherCondition(String otherCondition) throws DaoException{
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERCONDITION, "otherCondition", otherCondition);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :     * @see ru.sbrf.uvz.model.instruments.dao.UniversalToolDealDao#findByOtherCondition(String, int, int)
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :    public List findByOtherCondition(String otherCondition, int firstResult, int maxResult) throws DaoException {   
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERCONDITION, "otherCondition", otherCondition, firstResult, maxResult); 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :  * Purpose: Defines test class to test the peristence of class DebtTransferCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :  * Test case class to test the persistence of DebtTransferCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * Test object delete. Create a <Code>DebtTransferCredAgr</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :      // Create DebtTransferCredAgr instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * Test function getDebtTransferCredAgrList. Create multiple <Code>DebtTransferCredAgr</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * Query all intances by DAO's <tt>doGetDebtTransferCredAgrList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       // Create multiple DebtTransferCredAgr instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       DebtTransferCredAgr anotherDebtTransferCredAgr = dao.load(debtTransferCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :          debtTransferCredAgr, anotherDebtTransferCredAgr);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       DebtTransferCredAgrTestHelper.delete(anotherDebtTransferCredAgr);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       DebtTransferCredAgr another = dao.load(debtTransferCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       assertEquals("Queried result does not equal to updated instance", debtTransferCredAgr, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       DebtTransferCredAgrTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       DebtTransferCredAgr another = dao.load(debtTransferCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :             DebtTransferCredAgr another = DebtTransferCredAgrTestHelper.getDebtTransferCredAgrByPk(resultFound, debtTransferCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted debtTransferCredAgr object.", debtTransferCredAgr, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :             DebtTransferCredAgrTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :             DebtTransferCredAgr another = DebtTransferCredAgrTestHelper.getDebtTransferCredAgrByPk(resultFound, debtTransferCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :             assertEquals("Result returned by get-debtTransferCredAgr-list does not equal to inserted debtTransferCredAgr object.", debtTransferCredAgr, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :             DebtTransferCredAgrTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTestHelper.java :  * Purpose: Defines the test helper class for class DebtTransferCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :  * Purpose: Defines test class to test the peristence of class DebtTransfer
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :  * Test case class to test the persistence of DebtTransfer
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * Test object delete. Create a <Code>DebtTransfer</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * their attribute <Code>toolPurpose</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * by DAO's <tt>findByToolPurpose</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :      // Create DebtTransfer instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * their attribute <Code>debtTransferSigned</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * by DAO's <tt>findByDebtTransferSigned</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :      // Create DebtTransfer instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :      // Create DebtTransfer instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * their attribute <Code>assignContractNum</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * by DAO's <tt>findByAssignContractNum</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :      // Create DebtTransfer instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * their attribute <Code>assignContractDate</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * by DAO's <tt>findByAssignContractDate</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :      // Create DebtTransfer instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTestHelper.java :  * Purpose: Defines the test helper class for class DebtTransfer
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * Test function getDebtTransferList. Create multiple <Code>DebtTransfer</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * Query all intances by DAO's <tt>doGetDebtTransferList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       // Create multiple DebtTransfer instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       DebtTransfer anotherDebtTransfer = dao.load(debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :          debtTransfer, anotherDebtTransfer);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       DebtTransferTestHelper.delete(anotherDebtTransfer);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       DebtTransfer another = dao.load(debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       assertEquals("Queried result does not equal to updated instance", debtTransfer, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       DebtTransferTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       DebtTransfer another = dao.load(debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * and set their attribute toolPurpose to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       // Create instances and set their property toolPurpose to value toolPurpose
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransfer another = DebtTransferTestHelper.getDebtTransferByPk(resultFound, debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             assertEquals("Result returned by find-by-toolPurpose does not equal to inserted debtTransfer object.", debtTransfer, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransferTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * and set their attribute debtTransferSigned to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       // Create instances and set their property debtTransferSigned to value debtTransferSigned
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransfer another = DebtTransferTestHelper.getDebtTransferByPk(resultFound, debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             assertEquals("Result returned by find-by-debtTransferSigned does not equal to inserted debtTransfer object.", debtTransfer, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransferTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransfer another = DebtTransferTestHelper.getDebtTransferByPk(resultFound, debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted debtTransfer object.", debtTransfer, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransferTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * and set their attribute assignContractNum to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       // Create instances and set their property assignContractNum to value assignContractNum
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransfer another = DebtTransferTestHelper.getDebtTransferByPk(resultFound, debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             assertEquals("Result returned by find-by-assignContractNum does not equal to inserted debtTransfer object.", debtTransfer, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransferTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * and set their attribute assignContractDate to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :       // Create instances and set their property assignContractDate to value assignContractDate
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransfer another = DebtTransferTestHelper.getDebtTransferByPk(resultFound, debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             assertEquals("Result returned by find-by-assignContractDate does not equal to inserted debtTransfer object.", debtTransfer, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransferTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransfer another = DebtTransferTestHelper.getDebtTransferByPk(resultFound, debtTransfer.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             assertEquals("Result returned by get-debtTransfer-list does not equal to inserted debtTransfer object.", debtTransfer, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :             DebtTransferTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :  * Purpose: Defines test class to test the peristence of class CourtOrderChosen
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :  * Test case class to test the persistence of CourtOrderChosen
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * Test object delete. Create a <Code>CourtOrderChosen</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * their attribute <Code>dateCourtOrder</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * by DAO's <tt>findByDateCourtOrder</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :      // Create CourtOrderChosen instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * their attribute <Code>dateEntry</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * by DAO's <tt>findByDateEntry</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :      // Create CourtOrderChosen instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * their attribute <Code>dateDeleteEntry</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * by DAO's <tt>findByDateDeleteEntry</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :      // Create CourtOrderChosen instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * Test function getCourtOrderChosenList. Create multiple <Code>CourtOrderChosen</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * Query all intances by DAO's <tt>doGetCourtOrderChosenList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       // Create multiple CourtOrderChosen instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       CourtOrderChosen anotherCourtOrderChosen = dao.load(courtOrderChosen.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :          courtOrderChosen, anotherCourtOrderChosen);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       CourtOrderChosenTestHelper.delete(anotherCourtOrderChosen);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       CourtOrderChosen another = dao.load(courtOrderChosen.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       assertEquals("Queried result does not equal to updated instance", courtOrderChosen, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       CourtOrderChosenTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       CourtOrderChosen another = dao.load(courtOrderChosen.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * and set their attribute dateCourtOrder to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       // Create instances and set their property dateCourtOrder to value dateCourtOrder
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosen another = CourtOrderChosenTestHelper.getCourtOrderChosenByPk(resultFound, courtOrderChosen.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             assertEquals("Result returned by find-by-dateCourtOrder does not equal to inserted courtOrderChosen object.", courtOrderChosen, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosenTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * and set their attribute dateEntry to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       // Create instances and set their property dateEntry to value dateEntry
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosen another = CourtOrderChosenTestHelper.getCourtOrderChosenByPk(resultFound, courtOrderChosen.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             assertEquals("Result returned by find-by-dateEntry does not equal to inserted courtOrderChosen object.", courtOrderChosen, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosenTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * and set their attribute dateDeleteEntry to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :       // Create instances and set their property dateDeleteEntry to value dateDeleteEntry
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosen another = CourtOrderChosenTestHelper.getCourtOrderChosenByPk(resultFound, courtOrderChosen.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             assertEquals("Result returned by find-by-dateDeleteEntry does not equal to inserted courtOrderChosen object.", courtOrderChosen, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosenTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosen another = CourtOrderChosenTestHelper.getCourtOrderChosenByPk(resultFound, courtOrderChosen.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             assertEquals("Result returned by get-courtOrderChosen-list does not equal to inserted courtOrderChosen object.", courtOrderChosen, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :             CourtOrderChosenTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :  * Purpose: Defines test class to test the peristence of class CourtOrder
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :  * Test case class to test the persistence of CourtOrder
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :     * Test object delete. Create a <Code>CourtOrder</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :     * Test function getCourtOrderList. Create multiple <Code>CourtOrder</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :     * Query all intances by DAO's <tt>doGetCourtOrderList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       // Create multiple CourtOrder instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTestHelper.java :  * Purpose: Defines the test helper class for class CourtOrder
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       CourtOrder anotherCourtOrder = dao.load(courtOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :          courtOrder, anotherCourtOrder);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       CourtOrderTestHelper.delete(anotherCourtOrder);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       CourtOrder another = dao.load(courtOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       assertEquals("Queried result does not equal to updated instance", courtOrder, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       CourtOrderTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       CourtOrder another = dao.load(courtOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :             CourtOrder another = CourtOrderTestHelper.getCourtOrderByPk(resultFound, courtOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :             assertEquals("Result returned by get-courtOrder-list does not equal to inserted courtOrder object.", courtOrder, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :             CourtOrderTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTestHelper.java :  * Purpose: Defines the test helper class for class CourtOrderChosen
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :  * Purpose: Defines test class to test the peristence of class EnforcementProceedings
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :  * Test case class to test the persistence of EnforcementProceedings
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * Test object delete. Create a <Code>EnforcementProceedings</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * their attribute <Code>dateTransferExecutionList</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * by DAO's <tt>findByDateTransferExecutionList</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :      // Create EnforcementProceedings instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * their attribute <Code>datePresentationExecutionList</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * by DAO's <tt>findByDatePresentationExecutionList</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :      // Create EnforcementProceedings instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * their attribute <Code>numEnforcementProceedings</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * by DAO's <tt>findByNumEnforcementProceedings</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :      // Create EnforcementProceedings instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * their attribute <Code>dateStartEnforcementProceedings</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * by DAO's <tt>findByDateStartEnforcementProceedings</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :      // Create EnforcementProceedings instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * their attribute <Code>dateEndEnforcementProceedings</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * by DAO's <tt>findByDateEndEnforcementProceedings</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :      // Create EnforcementProceedings instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * their attribute <Code>enforcementStop</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * by DAO's <tt>findByEnforcementStop</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :      // Create EnforcementProceedings instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * their attribute <Code>dateToolEnd</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * by DAO's <tt>findByDateToolEnd</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :      // Create EnforcementProceedings instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * Test function getEnforcementProceedingsList. Create multiple <Code>EnforcementProceedings</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * Query all intances by DAO's <tt>doGetEnforcementProceedingsList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create multiple EnforcementProceedings instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTestHelper.java :  * Purpose: Defines the test helper class for class EnforcementProceedings
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       EnforcementProceedings anotherEnforcementProceedings = dao.load(enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :          enforcementProceedings, anotherEnforcementProceedings);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       EnforcementProceedingsTestHelper.delete(anotherEnforcementProceedings);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       EnforcementProceedings another = dao.load(enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       assertEquals("Queried result does not equal to updated instance", enforcementProceedings, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       EnforcementProceedingsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       EnforcementProceedings another = dao.load(enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * and set their attribute dateTransferExecutionList to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create instances and set their property dateTransferExecutionList to value dateTransferExecutionList
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by find-by-dateTransferExecutionList does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * and set their attribute datePresentationExecutionList to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create instances and set their property datePresentationExecutionList to value datePresentationExecutionList
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by find-by-datePresentationExecutionList does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * and set their attribute numEnforcementProceedings to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create instances and set their property numEnforcementProceedings to value numEnforcementProceedings
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTestHelper.java :  * Purpose: Defines the test helper class for class EnforceProcCredAgr
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :  * Purpose: Defines test class to test the peristence of class ReasonStopEnforcement
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :  * Test case class to test the persistence of ReasonStopEnforcement
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :     * Test object delete. Create a <Code>ReasonStopEnforcement</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :     * Test function getReasonStopEnforcementList. Create multiple <Code>ReasonStopEnforcement</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :     * Query all intances by DAO's <tt>doGetReasonStopEnforcementList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       // Create multiple ReasonStopEnforcement instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       ReasonStopEnforcement anotherReasonStopEnforcement = dao.load(reasonStopEnforcement.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :          reasonStopEnforcement, anotherReasonStopEnforcement);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       ReasonStopEnforcementTestHelper.delete(anotherReasonStopEnforcement);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :  * Purpose: Defines test class to test the peristence of class EnforceProcCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :  * Test case class to test the persistence of EnforceProcCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by find-by-numEnforcementProceedings does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * and set their attribute dateStartEnforcementProceedings to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create instances and set their property dateStartEnforcementProceedings to value dateStartEnforcementProceedings
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * Test object delete. Create a <Code>EnforceProcCredAgr</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTestHelper.java :  * Purpose: Defines the test helper class for class ReasonStopEnforcement
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :      // Create EnforceProcCredAgr instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by find-by-dateStartEnforcementProceedings does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * Test function getEnforceProcCredAgrList. Create multiple <Code>EnforceProcCredAgr</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * Query all intances by DAO's <tt>doGetEnforceProcCredAgrList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * and set their attribute dateEndEnforcementProceedings to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       // Create multiple EnforceProcCredAgr instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create instances and set their property dateEndEnforcementProceedings to value dateEndEnforcementProceedings
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       EnforceProcCredAgr anotherEnforceProcCredAgr = dao.load(enforceProcCredAgr.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :          enforceProcCredAgr, anotherEnforceProcCredAgr);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       EnforceProcCredAgrTestHelper.delete(anotherEnforceProcCredAgr);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by find-by-dateEndEnforcementProceedings does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * and set their attribute enforcementStop to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create instances and set their property enforcementStop to value enforcementStop
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       EnforceProcCredAgr another = dao.load(enforceProcCredAgr.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       assertEquals("Queried result does not equal to updated instance", enforceProcCredAgr, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       EnforceProcCredAgrTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       EnforceProcCredAgr another = dao.load(enforceProcCredAgr.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       ReasonStopEnforcement another = dao.load(reasonStopEnforcement.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       assertEquals("Queried result does not equal to updated instance", reasonStopEnforcement, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       ReasonStopEnforcementTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by find-by-enforcementStop does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * and set their attribute dateToolEnd to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :       // Create instances and set their property dateToolEnd to value dateToolEnd
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :             EnforceProcCredAgr another = EnforceProcCredAgrTestHelper.getEnforceProcCredAgrByPk(resultFound, enforceProcCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by find-by-dateToolEnd does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       ReasonStopEnforcement another = dao.load(reasonStopEnforcement.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted enforceProcCredAgr object.", enforceProcCredAgr, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :             EnforceProcCredAgrTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :             EnforceProcCredAgr another = EnforceProcCredAgrTestHelper.getEnforceProcCredAgrByPk(resultFound, enforceProcCredAgr.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :             ReasonStopEnforcement another = ReasonStopEnforcementTestHelper.getReasonStopEnforcementByPk(resultFound, reasonStopEnforcement.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :             assertEquals("Result returned by get-enforceProcCredAgr-list does not equal to inserted enforceProcCredAgr object.", enforceProcCredAgr, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :             EnforceProcCredAgrTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :             assertEquals("Result returned by get-reasonStopEnforcement-list does not equal to inserted reasonStopEnforcement object.", reasonStopEnforcement, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :             ReasonStopEnforcementTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedings another = EnforcementProceedingsTestHelper.getEnforcementProceedingsByPk(resultFound, enforcementProceedings.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             assertEquals("Result returned by get-enforcementProceedings-list does not equal to inserted enforcementProceedings object.", enforcementProceedings, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :             EnforcementProceedingsTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :  * Purpose: Defines test class to test the peristence of class InterestRateType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :  * Test case class to test the persistence of InterestRateType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :     * Test object delete. Create a <Code>InterestRateType</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :     * Test function getInterestRateTypeList. Create multiple <Code>InterestRateType</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :     * Query all intances by DAO's <tt>doGetInterestRateTypeList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       // Create multiple InterestRateType instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       InterestRateType anotherInterestRateType = dao.load(interestRateType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :          interestRateType, anotherInterestRateType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       InterestRateTypeTestHelper.delete(anotherInterestRateType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       InterestRateType another = dao.load(interestRateType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       assertEquals("Queried result does not equal to updated instance", interestRateType, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       InterestRateTypeTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTestHelper.java :  * Purpose: Defines the test helper class for class InterestRateType
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       InterestRateType another = dao.load(interestRateType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :             InterestRateType another = InterestRateTypeTestHelper.getInterestRateTypeByPk(resultFound, interestRateType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :             assertEquals("Result returned by get-interestRateType-list does not equal to inserted interestRateType object.", interestRateType, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :             InterestRateTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :  * Purpose: Defines test class to test the peristence of class CourtCreditAgreement
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :  * Test case class to test the persistence of CourtCreditAgreement
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * Test object delete. Create a <Code>CourtCreditAgreement</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * their attribute <Code>overduedebt</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * by DAO's <tt>findByOverduedebt</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :      // Create CourtCreditAgreement instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :      // Create CourtCreditAgreement instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * their attribute <Code>recoveryType</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * by DAO's <tt>findByRecoveryType</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :      // Create CourtCreditAgreement instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * Test function getCourtCreditAgreementList. Create multiple <Code>CourtCreditAgreement</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * Query all intances by DAO's <tt>doGetCourtCreditAgreementList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       // Create multiple CourtCreditAgreement instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTestHelper.java :  * Purpose: Defines the test helper class for class CourtCreditAgreement
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       CourtCreditAgreement anotherCourtCreditAgreement = dao.load(courtCreditAgreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :          courtCreditAgreement, anotherCourtCreditAgreement);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       CourtCreditAgreementTestHelper.delete(anotherCourtCreditAgreement);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       CourtCreditAgreement another = dao.load(courtCreditAgreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", courtCreditAgreement, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       CourtCreditAgreementTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       CourtCreditAgreement another = dao.load(courtCreditAgreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * and set their attribute overduedebt to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       // Create instances and set their property overduedebt to value overduedebt
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreement another = CourtCreditAgreementTestHelper.getCourtCreditAgreementByPk(resultFound, courtCreditAgreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             assertEquals("Result returned by find-by-overduedebt does not equal to inserted courtCreditAgreement object.", courtCreditAgreement, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreementTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreement another = CourtCreditAgreementTestHelper.getCourtCreditAgreementByPk(resultFound, courtCreditAgreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted courtCreditAgreement object.", courtCreditAgreement, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreementTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * and set their attribute recoveryType to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :       // Create instances and set their property recoveryType to value recoveryType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreement another = CourtCreditAgreementTestHelper.getCourtCreditAgreementByPk(resultFound, courtCreditAgreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             assertEquals("Result returned by find-by-recoveryType does not equal to inserted courtCreditAgreement object.", courtCreditAgreement, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreementTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreement another = CourtCreditAgreementTestHelper.getCourtCreditAgreementByPk(resultFound, courtCreditAgreement.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             assertEquals("Result returned by get-courtCreditAgreement-list does not equal to inserted courtCreditAgreement object.", courtCreditAgreement, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :             CourtCreditAgreementTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :  * Purpose: Defines test class to test the peristence of class LegalDocuments
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :  * Test case class to test the persistence of LegalDocuments
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * Test object delete. Create a <Code>LegalDocuments</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * their attribute <Code>documentname</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * by DAO's <tt>findByDocumentname</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :      // Create LegalDocuments instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * their attribute <Code>availability</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * by DAO's <tt>findByAvailability</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :      // Create LegalDocuments instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * Test function getLegalDocumentsList. Create multiple <Code>LegalDocuments</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * Query all intances by DAO's <tt>doGetLegalDocumentsList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       // Create multiple LegalDocuments instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       LegalDocuments anotherLegalDocuments = dao.load(legalDocuments.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :          legalDocuments, anotherLegalDocuments);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       LegalDocumentsTestHelper.delete(anotherLegalDocuments);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       LegalDocuments another = dao.load(legalDocuments.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       assertEquals("Queried result does not equal to updated instance", legalDocuments, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       LegalDocumentsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       LegalDocuments another = dao.load(legalDocuments.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * and set their attribute documentname to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       // Create instances and set their property documentname to value documentname
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             LegalDocuments another = LegalDocumentsTestHelper.getLegalDocumentsByPk(resultFound, legalDocuments.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             assertEquals("Result returned by find-by-documentname does not equal to inserted legalDocuments object.", legalDocuments, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             LegalDocumentsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * and set their attribute availability to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :       // Create instances and set their property availability to value availability
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             LegalDocuments another = LegalDocumentsTestHelper.getLegalDocumentsByPk(resultFound, legalDocuments.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             assertEquals("Result returned by find-by-availability does not equal to inserted legalDocuments object.", legalDocuments, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             LegalDocumentsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             LegalDocuments another = LegalDocumentsTestHelper.getLegalDocumentsByPk(resultFound, legalDocuments.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             assertEquals("Result returned by get-legalDocuments-list does not equal to inserted legalDocuments object.", legalDocuments, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :             LegalDocumentsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTestHelper.java :  * Purpose: Defines the test helper class for class LegalDocuments
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :  * Purpose: Defines test class to test the peristence of class LegalRecovery
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :  * Test case class to test the persistence of LegalRecovery
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :     * Test object delete. Create a <Code>LegalRecovery</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTestHelper.java :  * Purpose: Defines the test helper class for class LegalRecovery
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :     * Test function getLegalRecoveryList. Create multiple <Code>LegalRecovery</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :     * Query all intances by DAO's <tt>doGetLegalRecoveryList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       // Create multiple LegalRecovery instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       LegalRecovery anotherLegalRecovery = dao.load(legalRecovery.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :          legalRecovery, anotherLegalRecovery);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       LegalRecoveryTestHelper.delete(anotherLegalRecovery);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       LegalRecovery another = dao.load(legalRecovery.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       assertEquals("Queried result does not equal to updated instance", legalRecovery, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       LegalRecoveryTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTestHelper.java :  * Purpose: Defines the test helper class for class ProvisionAgreementChosen
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :  * Purpose: Defines test class to test the peristence of class ProvisionAgreementChosen
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :  * Test case class to test the persistence of ProvisionAgreementChosen
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * Test object delete. Create a <Code>ProvisionAgreementChosen</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * their attribute <Code>isSelected</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * by DAO's <tt>findByIsSelected</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :      // Create ProvisionAgreementChosen instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :  * Purpose: Defines test class to test the peristence of class Responder
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * Test function getProvisionAgreementChosenList. Create multiple <Code>ProvisionAgreementChosen</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * Query all intances by DAO's <tt>doGetProvisionAgreementChosenList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :  * Test case class to test the persistence of Responder
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       // Create multiple ProvisionAgreementChosen instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       ProvisionAgreementChosen anotherProvisionAgreementChosen = dao.load(provisionAgreementChosen.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :          provisionAgreementChosen, anotherProvisionAgreementChosen);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       ProvisionAgreementChosenTestHelper.delete(anotherProvisionAgreementChosen);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * Test object delete. Create a <Code>Responder</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * their attribute <Code>islettersent</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * by DAO's <tt>findByIslettersent</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :      // Create Responder instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * their attribute <Code>isrequiredsecuritymeasures</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * by DAO's <tt>findByIsrequiredsecuritymeasures</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :      // Create Responder instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * their attribute <Code>grounds</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * by DAO's <tt>findByGrounds</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :      // Create Responder instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * their attribute <Code>mainObligator</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * by DAO's <tt>findByMainObligator</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :      // Create Responder instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       ProvisionAgreementChosen another = dao.load(provisionAgreementChosen.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       assertEquals("Queried result does not equal to updated instance", provisionAgreementChosen, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       ProvisionAgreementChosenTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * their attribute <Code>creditDealMark</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       ProvisionAgreementChosen another = dao.load(provisionAgreementChosen.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * by DAO's <tt>findByCreditDealMark</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * and set their attribute isSelected to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :       // Create instances and set their property isSelected to value isSelected
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       LegalRecovery another = dao.load(legalRecovery.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :             LegalRecovery another = LegalRecoveryTestHelper.getLegalRecoveryByPk(resultFound, legalRecovery.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :             assertEquals("Result returned by get-legalRecovery-list does not equal to inserted legalRecovery object.", legalRecovery, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :             LegalRecoveryTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :             ProvisionAgreementChosen another = ProvisionAgreementChosenTestHelper.getProvisionAgreementChosenByPk(resultFound, provisionAgreementChosen.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :             assertEquals("Result returned by find-by-isSelected does not equal to inserted provisionAgreementChosen object.", provisionAgreementChosen, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :             ProvisionAgreementChosenTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTestHelper.java :  * Purpose: Defines the test helper class for class Responder
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :      // Create Responder instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * Test function getResponderList. Create multiple <Code>Responder</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :             ProvisionAgreementChosen another = ProvisionAgreementChosenTestHelper.getProvisionAgreementChosenByPk(resultFound, provisionAgreementChosen.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * Query all intances by DAO's <tt>doGetResponderList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :             assertEquals("Result returned by get-provisionAgreementChosen-list does not equal to inserted provisionAgreementChosen object.", provisionAgreementChosen, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :             ProvisionAgreementChosenTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       // Create multiple Responder instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       Responder anotherResponder = dao.load(responder.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :          responder, anotherResponder);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       ResponderTestHelper.delete(anotherResponder);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       Responder another = dao.load(responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       assertEquals("Queried result does not equal to updated instance", responder, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       ResponderTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       Responder another = dao.load(responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * and set their attribute islettersent to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       // Create instances and set their property islettersent to value islettersent
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             Responder another = ResponderTestHelper.getResponderByPk(resultFound, responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             assertEquals("Result returned by find-by-islettersent does not equal to inserted responder object.", responder, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             ResponderTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * and set their attribute isrequiredsecuritymeasures to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       // Create instances and set their property isrequiredsecuritymeasures to value isrequiredsecuritymeasures
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             Responder another = ResponderTestHelper.getResponderByPk(resultFound, responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             assertEquals("Result returned by find-by-isrequiredsecuritymeasures does not equal to inserted responder object.", responder, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             ResponderTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * and set their attribute grounds to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       // Create instances and set their property grounds to value grounds
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             Responder another = ResponderTestHelper.getResponderByPk(resultFound, responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             assertEquals("Result returned by find-by-grounds does not equal to inserted responder object.", responder, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             ResponderTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * and set their attribute mainObligator to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       // Create instances and set their property mainObligator to value mainObligator
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             Responder another = ResponderTestHelper.getResponderByPk(resultFound, responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             assertEquals("Result returned by find-by-mainObligator does not equal to inserted responder object.", responder, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             ResponderTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * and set their attribute creditDealMark to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :       // Create instances and set their property creditDealMark to value creditDealMark
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             Responder another = ResponderTestHelper.getResponderByPk(resultFound, responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             assertEquals("Result returned by find-by-creditDealMark does not equal to inserted responder object.", responder, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             ResponderTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             Responder another = ResponderTestHelper.getResponderByPk(resultFound, responder.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             assertEquals("Result returned by get-responder-list does not equal to inserted responder object.", responder, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :             ResponderTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\judical\ResponderTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :  * Purpose: Defines test class to test the peristence of class NonJudicialCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :  * Test case class to test the persistence of NonJudicialCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * Test object delete. Create a <Code>NonJudicialCredAgr</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :      // Create NonJudicialCredAgr instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * Test function getNonJudicialCredAgrList. Create multiple <Code>NonJudicialCredAgr</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * Query all intances by DAO's <tt>doGetNonJudicialCredAgrList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       // Create multiple NonJudicialCredAgr instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       NonJudicialCredAgr anotherNonJudicialCredAgr = dao.load(nonJudicialCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :          nonJudicialCredAgr, anotherNonJudicialCredAgr);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       NonJudicialCredAgrTestHelper.delete(anotherNonJudicialCredAgr);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       NonJudicialCredAgr another = dao.load(nonJudicialCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       assertEquals("Queried result does not equal to updated instance", nonJudicialCredAgr, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       NonJudicialCredAgrTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       NonJudicialCredAgr another = dao.load(nonJudicialCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTestHelper.java :  * Purpose: Defines the test helper class for class NonJudicialCredAgr
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :             NonJudicialCredAgr another = NonJudicialCredAgrTestHelper.getNonJudicialCredAgrByPk(resultFound, nonJudicialCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted nonJudicialCredAgr object.", nonJudicialCredAgr, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :             NonJudicialCredAgrTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :             NonJudicialCredAgr another = NonJudicialCredAgrTestHelper.getNonJudicialCredAgrByPk(resultFound, nonJudicialCredAgr.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :             assertEquals("Result returned by get-nonJudicialCredAgr-list does not equal to inserted nonJudicialCredAgr object.", nonJudicialCredAgr, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :             NonJudicialCredAgrTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :  * Purpose: Defines test class to test the peristence of class NonJudicialRecoveryTool
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :  * Test case class to test the persistence of NonJudicialRecoveryTool
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * Test object delete. Create a <Code>NonJudicialRecoveryTool</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * their attribute <Code>nonJudicialSigned</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * by DAO's <tt>findByNonJudicialSigned</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :      // Create NonJudicialRecoveryTool instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTestHelper.java :  * Purpose: Defines the test helper class for class NonJudicialRecoveryTool
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :      // Create NonJudicialRecoveryTool instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * Test function getNonJudicialRecoveryToolList. Create multiple <Code>NonJudicialRecoveryTool</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * Query all intances by DAO's <tt>doGetNonJudicialRecoveryToolList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       // Create multiple NonJudicialRecoveryTool instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       NonJudicialRecoveryTool anotherNonJudicialRecoveryTool = dao.load(nonJudicialRecoveryTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :          nonJudicialRecoveryTool, anotherNonJudicialRecoveryTool);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       NonJudicialRecoveryToolTestHelper.delete(anotherNonJudicialRecoveryTool);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       NonJudicialRecoveryTool another = dao.load(nonJudicialRecoveryTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       assertEquals("Queried result does not equal to updated instance", nonJudicialRecoveryTool, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       NonJudicialRecoveryToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       NonJudicialRecoveryTool another = dao.load(nonJudicialRecoveryTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * and set their attribute nonJudicialSigned to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       // Create instances and set their property nonJudicialSigned to value nonJudicialSigned
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             NonJudicialRecoveryTool another = NonJudicialRecoveryToolTestHelper.getNonJudicialRecoveryToolByPk(resultFound, nonJudicialRecoveryTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             assertEquals("Result returned by find-by-nonJudicialSigned does not equal to inserted nonJudicialRecoveryTool object.", nonJudicialRecoveryTool, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             NonJudicialRecoveryToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             NonJudicialRecoveryTool another = NonJudicialRecoveryToolTestHelper.getNonJudicialRecoveryToolByPk(resultFound, nonJudicialRecoveryTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted nonJudicialRecoveryTool object.", nonJudicialRecoveryTool, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             NonJudicialRecoveryToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             NonJudicialRecoveryTool another = NonJudicialRecoveryToolTestHelper.getNonJudicialRecoveryToolByPk(resultFound, nonJudicialRecoveryTool.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             assertEquals("Result returned by get-nonJudicialRecoveryTool-list does not equal to inserted nonJudicialRecoveryTool object.", nonJudicialRecoveryTool, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :             NonJudicialRecoveryToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :  * Purpose: Defines test class to test the peristence of class PaymentOrder
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :  * Test case class to test the persistence of PaymentOrder
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * Test object delete. Create a <Code>PaymentOrder</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * their attribute <Code>settings1</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * by DAO's <tt>findBySettings1</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :      // Create PaymentOrder instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * their attribute <Code>settings2</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * by DAO's <tt>findBySettings2</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :      // Create PaymentOrder instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * their attribute <Code>settings3</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * by DAO's <tt>findBySettings3</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :      // Create PaymentOrder instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * Test function getPaymentOrderList. Create multiple <Code>PaymentOrder</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * Query all intances by DAO's <tt>doGetPaymentOrderList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       // Create multiple PaymentOrder instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       PaymentOrder anotherPaymentOrder = dao.load(paymentOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :          paymentOrder, anotherPaymentOrder);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       PaymentOrderTestHelper.delete(anotherPaymentOrder);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTestHelper.java :  * Purpose: Defines the test helper class for class PaymentOrder
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       PaymentOrder another = dao.load(paymentOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       assertEquals("Queried result does not equal to updated instance", paymentOrder, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       PaymentOrderTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       PaymentOrder another = dao.load(paymentOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * and set their attribute settings1 to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       // Create instances and set their property settings1 to value settings1
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrder another = PaymentOrderTestHelper.getPaymentOrderByPk(resultFound, paymentOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             assertEquals("Result returned by find-by-settings1 does not equal to inserted paymentOrder object.", paymentOrder, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrderTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * and set their attribute settings2 to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       // Create instances and set their property settings2 to value settings2
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrder another = PaymentOrderTestHelper.getPaymentOrderByPk(resultFound, paymentOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             assertEquals("Result returned by find-by-settings2 does not equal to inserted paymentOrder object.", paymentOrder, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrderTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * and set their attribute settings3 to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :       // Create instances and set their property settings3 to value settings3
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrder another = PaymentOrderTestHelper.getPaymentOrderByPk(resultFound, paymentOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             assertEquals("Result returned by find-by-settings3 does not equal to inserted paymentOrder object.", paymentOrder, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrderTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrder another = PaymentOrderTestHelper.getPaymentOrderByPk(resultFound, paymentOrder.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             assertEquals("Result returned by get-paymentOrder-list does not equal to inserted paymentOrder object.", paymentOrder, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :             PaymentOrderTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\PaymentOrderTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :  * Purpose: Defines test class to test the peristence of class RestructureCreditAgreement
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :  * Test case class to test the persistence of RestructureCreditAgreement
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * Test object delete. Create a <Code>RestructureCreditAgreement</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :      // Create RestructureCreditAgreement instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * Test function getRestructureCreditAgreementList. Create multiple <Code>RestructureCreditAgreement</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * Query all intances by DAO's <tt>doGetRestructureCreditAgreementList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       // Create multiple RestructureCreditAgreement instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTestHelper.java :  * Purpose: Defines the test helper class for class RestructureCreditAgreement
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       RestructureCreditAgreement anotherRestructureCreditAgreement = dao.load(restructureCreditAgreement.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :          restructureCreditAgreement, anotherRestructureCreditAgreement);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       RestructureCreditAgreementTestHelper.delete(anotherRestructureCreditAgreement);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       RestructureCreditAgreement another = dao.load(restructureCreditAgreement.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       assertEquals("Queried result does not equal to updated instance", restructureCreditAgreement, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       RestructureCreditAgreementTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       RestructureCreditAgreement another = dao.load(restructureCreditAgreement.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :  * Purpose: Defines test class to test the peristence of class Restructure
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :  * Test case class to test the persistence of Restructure
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * Test object delete. Create a <Code>Restructure</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :             RestructureCreditAgreement another = RestructureCreditAgreementTestHelper.getRestructureCreditAgreementByPk(resultFound, restructureCreditAgreement.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * their attribute <Code>toolPurpose</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * by DAO's <tt>findByToolPurpose</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted restructureCreditAgreement object.", restructureCreditAgreement, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :      // Create Restructure instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :             RestructureCreditAgreementTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * their attribute <Code>restructureSigned</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * by DAO's <tt>findByRestructureSigned</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :      // Create Restructure instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :      // Create Restructure instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * their attribute <Code>assignContractNum</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * by DAO's <tt>findByAssignContractNum</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :      // Create Restructure instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * their attribute <Code>assignContractDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTestHelper.java :  * Purpose: Defines the test helper class for class Restructure
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * by DAO's <tt>findByAssignContractDate</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :             RestructureCreditAgreement another = RestructureCreditAgreementTestHelper.getRestructureCreditAgreementByPk(resultFound, restructureCreditAgreement.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :      // Create Restructure instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :             assertEquals("Result returned by get-restructureCreditAgreement-list does not equal to inserted restructureCreditAgreement object.", restructureCreditAgreement, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * Test function getRestructureList. Create multiple <Code>Restructure</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :             RestructureCreditAgreementTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * Query all intances by DAO's <tt>doGetRestructureList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       // Create multiple Restructure instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       Restructure anotherRestructure = dao.load(restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :          restructure, anotherRestructure);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       RestructureTestHelper.delete(anotherRestructure);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       Restructure another = dao.load(restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       assertEquals("Queried result does not equal to updated instance", restructure, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       RestructureTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       Restructure another = dao.load(restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * and set their attribute toolPurpose to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       // Create instances and set their property toolPurpose to value toolPurpose
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             Restructure another = RestructureTestHelper.getRestructureByPk(resultFound, restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             assertEquals("Result returned by find-by-toolPurpose does not equal to inserted restructure object.", restructure, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             RestructureTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * and set their attribute restructureSigned to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       // Create instances and set their property restructureSigned to value restructureSigned
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             Restructure another = RestructureTestHelper.getRestructureByPk(resultFound, restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             assertEquals("Result returned by find-by-restructureSigned does not equal to inserted restructure object.", restructure, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             RestructureTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             Restructure another = RestructureTestHelper.getRestructureByPk(resultFound, restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted restructure object.", restructure, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             RestructureTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * and set their attribute assignContractNum to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       // Create instances and set their property assignContractNum to value assignContractNum
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             Restructure another = RestructureTestHelper.getRestructureByPk(resultFound, restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             assertEquals("Result returned by find-by-assignContractNum does not equal to inserted restructure object.", restructure, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             RestructureTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * and set their attribute assignContractDate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :       // Create instances and set their property assignContractDate to value assignContractDate
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             Restructure another = RestructureTestHelper.getRestructureByPk(resultFound, restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             assertEquals("Result returned by find-by-assignContractDate does not equal to inserted restructure object.", restructure, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             RestructureTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             Restructure another = RestructureTestHelper.getRestructureByPk(resultFound, restructure.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             assertEquals("Result returned by get-restructure-list does not equal to inserted restructure object.", restructure, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :             RestructureTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :  * Purpose: Defines test class to test the peristence of class ToolMode
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :  * Test case class to test the persistence of ToolMode
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :     * Test object delete. Create a <Code>ToolMode</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :     * Test function getToolModeList. Create multiple <Code>ToolMode</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :     * Query all intances by DAO's <tt>doGetToolModeList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       // Create multiple ToolMode instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       ToolMode anotherToolMode = dao.load(toolMode.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :          toolMode, anotherToolMode);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       ToolModeTestHelper.delete(anotherToolMode);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       ToolMode another = dao.load(toolMode.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       assertEquals("Queried result does not equal to updated instance", toolMode, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       ToolModeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       ToolMode another = dao.load(toolMode.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :             ToolMode another = ToolModeTestHelper.getToolModeByPk(resultFound, toolMode.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :             assertEquals("Result returned by get-toolMode-list does not equal to inserted toolMode object.", toolMode, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :             ToolModeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\ToolModeTestHelper.java :  * Purpose: Defines the test helper class for class ToolMode
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :  * Purpose: Defines test class to test the peristence of class UniversalToolDeal
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :  * Test case class to test the persistence of UniversalToolDeal
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Test object delete. Create a <Code>UniversalToolDeal</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>termMonth</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByTermMonth</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>individScheduleMainComment</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByIndividScheduleMainComment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>individScheduleInterestComment</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByIndividScheduleInterestComment</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>defermentPrincipalMonth</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByDefermentPrincipalMonth</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTestHelper.java :  * Purpose: Defines the test helper class for class UniversalToolDeal
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>defermentInterestMonth</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByDefermentInterestMonth</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>interestRateString</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByInterestRateString</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>delayCondition</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTestHelper.java :      persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByDelayCondition</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Test query function </tt>findByOtherCondition</tt>. Create multiple <Code>UniversalToolDeal</Code> instances and set 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>otherCondition</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByOtherCondition</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :    public void testFindByOtherCondition() throws Exception {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      logger.debug("Test find-by-otherCondition begins!");
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      String otherCondition = String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8))));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      universalToolDeals = preFindByOtherCondition(otherCondition);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Query UniversalToolDeal instances by property otherCondition
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      List result = doFindByOtherCondition(otherCondition);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      afterFindByOtherCondition(universalToolDeals, result);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      logger.debug("Test find-by-otherCondition ends!");
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>covenants</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByCovenants</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>accordingM2723</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByAccordingM2723</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>notReUsed</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByNotReUsed</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>isInstrumentBasic</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByIsInstrumentBasic</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>additionalParticipant</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByAdditionalParticipant</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>dealDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByDealDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>stopFactEmpty</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByStopFactEmpty</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * their attribute <Code>failReasonTool</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * by DAO's <tt>findByFailReasonTool</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :      // Create UniversalToolDeal instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Test function getUniversalToolDealList. Create multiple <Code>UniversalToolDeal</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Query all intances by DAO's <tt>doGetUniversalToolDealList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create multiple UniversalToolDeal instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and its subclasses. Save them into database and query all <Code>UniversalToolDeal</Code> instances from 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances of UniversalToolDeal and its subclasses. Save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       UniversalToolDeal anotherUniversalToolDeal = dao.load(universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          universalToolDeal, anotherUniversalToolDeal);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       UniversalToolDealTestHelper.delete(anotherUniversalToolDeal);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       UniversalToolDeal another = dao.load(universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       assertEquals("Queried result does not equal to updated instance", universalToolDeal, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       UniversalToolDeal another = dao.load(universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute termMonth to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property termMonth to value termMonth
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-termMonth does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute individScheduleMainComment to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property individScheduleMainComment to value individScheduleMainComment
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-individScheduleMainComment does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute individScheduleInterestComment to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property individScheduleInterestComment to value individScheduleInterestComment
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-individScheduleInterestComment does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute defermentPrincipalMonth to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property defermentPrincipalMonth to value defermentPrincipalMonth
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-defermentPrincipalMonth does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute defermentInterestMonth to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property defermentInterestMonth to value defermentInterestMonth
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-defermentInterestMonth does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute interestRateString to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property interestRateString to value interestRateString
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-interestRateString does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute delayCondition to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property delayCondition to value delayCondition
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-delayCondition does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Do function <tt>FindByOtherCondition</tt> test preparation. Create <Code>UniversalToolDeal</Code> instances 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute otherCondition to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :    private List preFindByOtherCondition(String otherCondition) throws Exception {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       List oldUniversalToolDeals = dao.findByOtherCondition(otherCondition);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property otherCondition to value otherCondition
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          universalToolDeal.setOtherCondition(otherCondition);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Query <Code>UniversalToolDeal</Code> instances from database by attribute <Code>otherCondition</Code>.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :    private List doFindByOtherCondition(String otherCondition) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       return dao.findByOtherCondition(otherCondition);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Verify if method <tt>findByOtherCondition</tt> can find all <Code>UniversalToolDeal</Code> instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :    private void afterFindByOtherCondition(List universalToolDeals, List resultFound) {
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          assertNotNull("Result returned by find-by-otherCondition is null.", resultFound);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          assertEquals("Result count returned by find-by-otherCondition is incorrect.", universalToolDeals.size(), resultFound.size());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-otherCondition does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute covenants to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property covenants to value covenants
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-covenants does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute accordingM2723 to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property accordingM2723 to value accordingM2723
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-accordingM2723 does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute notReUsed to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property notReUsed to value notReUsed
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-notReUsed does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute isInstrumentBasic to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property isInstrumentBasic to value isInstrumentBasic
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-isInstrumentBasic does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute additionalParticipant to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property additionalParticipant to value additionalParticipant
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-additionalParticipant does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute dealDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property dealDate to value dealDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-dealDate does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute stopFactEmpty to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property stopFactEmpty to value stopFactEmpty
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-stopFactEmpty does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * and set their attribute failReasonTool to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :       // Create instances and set their property failReasonTool to value failReasonTool
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by find-by-failReasonTool does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDeal another = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultFound, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             assertEquals("Result returned by get-universalToolDeal-list does not equal to inserted universalToolDeal object.", universalToolDeal, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :             UniversalToolDealTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * subclasses. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          UniversalToolDeal anotherUniversalToolDeal  = UniversalToolDealTestHelper.getUniversalToolDealByPk(resultList, universalToolDeal.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", universalToolDeal, anotherUniversalToolDeal);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherUniversalToolDeal)));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :          UniversalToolDealTestHelper.delete(anotherUniversalToolDeal);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :  * Purpose: Defines test class to test the peristence of class WriteOffCredAgr
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :  * Test case class to test the persistence of WriteOffCredAgr
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * Test object delete. Create a <Code>WriteOffCredAgr</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * their attribute <Code>agreementChosen</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * by DAO's <tt>findByAgreementChosen</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :      // Create WriteOffCredAgr instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * Test function getWriteOffCredAgrList. Create multiple <Code>WriteOffCredAgr</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * Query all intances by DAO's <tt>doGetWriteOffCredAgrList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       // Create multiple WriteOffCredAgr instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       WriteOffCredAgr anotherWriteOffCredAgr = dao.load(writeOffCredAgr.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :          writeOffCredAgr, anotherWriteOffCredAgr);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       WriteOffCredAgrTestHelper.delete(anotherWriteOffCredAgr);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       WriteOffCredAgr another = dao.load(writeOffCredAgr.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       assertEquals("Queried result does not equal to updated instance", writeOffCredAgr, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       WriteOffCredAgrTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       WriteOffCredAgr another = dao.load(writeOffCredAgr.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * and set their attribute agreementChosen to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :       // Create instances and set their property agreementChosen to value agreementChosen
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :             WriteOffCredAgr another = WriteOffCredAgrTestHelper.getWriteOffCredAgrByPk(resultFound, writeOffCredAgr.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :             assertEquals("Result returned by find-by-agreementChosen does not equal to inserted writeOffCredAgr object.", writeOffCredAgr, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :             WriteOffCredAgrTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :             WriteOffCredAgr another = WriteOffCredAgrTestHelper.getWriteOffCredAgrByPk(resultFound, writeOffCredAgr.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :             assertEquals("Result returned by get-writeOffCredAgr-list does not equal to inserted writeOffCredAgr object.", writeOffCredAgr, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :             WriteOffCredAgrTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTestHelper.java :  * Purpose: Defines the test helper class for class WriteOffCredAgr
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :  * Purpose: Defines test class to test the peristence of class WriteOffTool
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :  * Test case class to test the persistence of WriteOffTool
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * Test object delete. Create a <Code>WriteOffTool</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * their attribute <Code>writeOffSigned</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * by DAO's <tt>findByWriteOffSigned</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :      // Create WriteOffTool instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * their attribute <Code>assignFailComment</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * by DAO's <tt>findByAssignFailComment</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :      // Create WriteOffTool instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * Test function getWriteOffToolList. Create multiple <Code>WriteOffTool</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * Query all intances by DAO's <tt>doGetWriteOffToolList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       // Create multiple WriteOffTool instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       WriteOffTool anotherWriteOffTool = dao.load(writeOffTool.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :          writeOffTool, anotherWriteOffTool);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       WriteOffToolTestHelper.delete(anotherWriteOffTool);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTestHelper.java :  * Purpose: Defines the test helper class for class WriteOffTool
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       WriteOffTool another = dao.load(writeOffTool.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       assertEquals("Queried result does not equal to updated instance", writeOffTool, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       WriteOffToolTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       WriteOffTool another = dao.load(writeOffTool.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTestHelper.java :       persistentObject.setOtherCondition(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * and set their attribute writeOffSigned to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       // Create instances and set their property writeOffSigned to value writeOffSigned
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             WriteOffTool another = WriteOffToolTestHelper.getWriteOffToolByPk(resultFound, writeOffTool.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             assertEquals("Result returned by find-by-writeOffSigned does not equal to inserted writeOffTool object.", writeOffTool, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             WriteOffToolTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * and set their attribute assignFailComment to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :       // Create instances and set their property assignFailComment to value assignFailComment
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             WriteOffTool another = WriteOffToolTestHelper.getWriteOffToolByPk(resultFound, writeOffTool.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             assertEquals("Result returned by find-by-assignFailComment does not equal to inserted writeOffTool object.", writeOffTool, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             WriteOffToolTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             WriteOffTool another = WriteOffToolTestHelper.getWriteOffToolByPk(resultFound, writeOffTool.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             assertEquals("Result returned by get-writeOffTool-list does not equal to inserted writeOffTool object.", writeOffTool, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :             WriteOffToolTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :  * Purpose: Defines test class to test the peristence of class CollectionModelChangeReason
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :  * Test case class to test the persistence of CollectionModelChangeReason
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :     * Test object delete. Create a <Code>CollectionModelChangeReason</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :     * Test function getCollectionModelChangeReasonList. Create multiple <Code>CollectionModelChangeReason</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :     * Query all intances by DAO's <tt>doGetCollectionModelChangeReasonList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       // Create multiple CollectionModelChangeReason instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       CollectionModelChangeReason anotherCollectionModelChangeReason = dao.load(collectionModelChangeReason.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :          collectionModelChangeReason, anotherCollectionModelChangeReason);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       CollectionModelChangeReasonTestHelper.delete(anotherCollectionModelChangeReason);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       CollectionModelChangeReason another = dao.load(collectionModelChangeReason.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       assertEquals("Queried result does not equal to updated instance", collectionModelChangeReason, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       CollectionModelChangeReasonTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       CollectionModelChangeReason another = dao.load(collectionModelChangeReason.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTestHelper.java :  * Purpose: Defines the test helper class for class CollectionModelChangeReason
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :             CollectionModelChangeReason another = CollectionModelChangeReasonTestHelper.getCollectionModelChangeReasonByPk(resultFound, collectionModelChangeReason.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :             assertEquals("Result returned by get-collectionModelChangeReason-list does not equal to inserted collectionModelChangeReason object.", collectionModelChangeReason, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :             CollectionModelChangeReasonTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :  * Purpose: Defines test class to test the peristence of class CollectionModel
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :  * Test case class to test the persistence of CollectionModel
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTestHelper.java :  * Purpose: Defines the test helper class for class CollectionModel
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :     * Test object delete. Create a <Code>CollectionModel</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :     * Test function getCollectionModelList. Create multiple <Code>CollectionModel</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :     * Query all intances by DAO's <tt>doGetCollectionModelList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       // Create multiple CollectionModel instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       CollectionModel anotherCollectionModel = dao.load(collectionModel.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :          collectionModel, anotherCollectionModel);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       CollectionModelTestHelper.delete(anotherCollectionModel);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       CollectionModel another = dao.load(collectionModel.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       assertEquals("Queried result does not equal to updated instance", collectionModel, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       CollectionModelTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       CollectionModel another = dao.load(collectionModel.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :             CollectionModel another = CollectionModelTestHelper.getCollectionModelByPk(resultFound, collectionModel.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :             assertEquals("Result returned by get-collectionModel-list does not equal to inserted collectionModel object.", collectionModel, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :             CollectionModelTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\CollectionModelTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :  * Purpose: Defines test class to test the peristence of class BpmUser
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :  * Test case class to test the persistence of BpmUser
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * Test object delete. Create a <Code>BpmUser</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTestHelper.java :  * Purpose: Defines the test helper class for class BpmUser
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * their attribute <Code>executorName</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * by DAO's <tt>findByExecutorName</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :      // Create BpmUser instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * their attribute <Code>phoneNumber</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * by DAO's <tt>findByPhoneNumber</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :      // Create BpmUser instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * their attribute <Code>executionOrgUnit</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * by DAO's <tt>findByExecutionOrgUnit</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :      // Create BpmUser instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * Test function getBpmUserList. Create multiple <Code>BpmUser</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * Query all intances by DAO's <tt>doGetBpmUserList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       // Create multiple BpmUser instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :  * Purpose: Defines test class to test the peristence of class ClaimsGranted
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :  * Test case class to test the persistence of ClaimsGranted
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * Test object delete. Create a <Code>ClaimsGranted</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * their attribute <Code>requirementCurrency</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * by DAO's <tt>findByRequirementCurrency</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :      // Create ClaimsGranted instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * Test function getClaimsGrantedList. Create multiple <Code>ClaimsGranted</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * Query all intances by DAO's <tt>doGetClaimsGrantedList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       BpmUser anotherBpmUser = dao.load(bpmUser.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       // Create multiple ClaimsGranted instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :          bpmUser, anotherBpmUser);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       BpmUserTestHelper.delete(anotherBpmUser);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       ClaimsGranted anotherClaimsGranted = dao.load(claimsGranted.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       BpmUser another = dao.load(bpmUser.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :          claimsGranted, anotherClaimsGranted);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       assertEquals("Queried result does not equal to updated instance", bpmUser, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       ClaimsGrantedTestHelper.delete(anotherClaimsGranted);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       BpmUserTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       ClaimsGranted another = dao.load(claimsGranted.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       assertEquals("Queried result does not equal to updated instance", claimsGranted, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       ClaimsGrantedTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       ClaimsGranted another = dao.load(claimsGranted.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * and set their attribute requirementCurrency to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :       // Create instances and set their property requirementCurrency to value requirementCurrency
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :             ClaimsGranted another = ClaimsGrantedTestHelper.getClaimsGrantedByPk(resultFound, claimsGranted.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :             assertEquals("Result returned by find-by-requirementCurrency does not equal to inserted claimsGranted object.", claimsGranted, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :             ClaimsGrantedTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :             ClaimsGranted another = ClaimsGrantedTestHelper.getClaimsGrantedByPk(resultFound, claimsGranted.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :             assertEquals("Result returned by get-claimsGranted-list does not equal to inserted claimsGranted object.", claimsGranted, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :             ClaimsGrantedTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       BpmUser another = dao.load(bpmUser.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTestHelper.java :  * Purpose: Defines the test helper class for class ClaimsGranted
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * and set their attribute executorName to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       // Create instances and set their property executorName to value executorName
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUser another = BpmUserTestHelper.getBpmUserByPk(resultFound, bpmUser.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             assertEquals("Result returned by find-by-executorName does not equal to inserted bpmUser object.", bpmUser, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUserTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * and set their attribute phoneNumber to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       // Create instances and set their property phoneNumber to value phoneNumber
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUser another = BpmUserTestHelper.getBpmUserByPk(resultFound, bpmUser.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             assertEquals("Result returned by find-by-phoneNumber does not equal to inserted bpmUser object.", bpmUser, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUserTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * and set their attribute executionOrgUnit to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :       // Create instances and set their property executionOrgUnit to value executionOrgUnit
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUser another = BpmUserTestHelper.getBpmUserByPk(resultFound, bpmUser.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             assertEquals("Result returned by find-by-executionOrgUnit does not equal to inserted bpmUser object.", bpmUser, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUserTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUser another = BpmUserTestHelper.getBpmUserByPk(resultFound, bpmUser.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             assertEquals("Result returned by get-bpmUser-list does not equal to inserted bpmUser object.", bpmUser, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :             BpmUserTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTestHelper.java :  * Purpose: Defines the test helper class for class CourtCaseBPM
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :  * Purpose: Defines test class to test the peristence of class CourtCaseBPM
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :  * Test case class to test the persistence of CourtCaseBPM
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * Test object delete. Create a <Code>CourtCaseBPM</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * their attribute <Code>bpmpoasenumber</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * by DAO's <tt>findByBpmpoasenumber</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :      // Create CourtCaseBPM instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :  * Purpose: Defines test class to test the peristence of class CourtCase
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * their attribute <Code>courtCase_ID</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * by DAO's <tt>findByCourtCase_ID</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :      // Create CourtCaseBPM instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :  * Test case class to test the persistence of CourtCase
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * their attribute <Code>courtprovisionstatus</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * by DAO's <tt>findByCourtprovisionstatus</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :      // Create CourtCaseBPM instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * Test object delete. Create a <Code>CourtCase</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * Test function getCourtCaseBPMList. Create multiple <Code>CourtCaseBPM</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * Query all intances by DAO's <tt>doGetCourtCaseBPMList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * their attribute <Code>caseNumber</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * by DAO's <tt>findByCaseNumber</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       // Create multiple CourtCaseBPM instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :      // Create CourtCase instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * their attribute <Code>courtcasestatus</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * by DAO's <tt>findByCourtcasestatus</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :      // Create CourtCase instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * their attribute <Code>outcome</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * by DAO's <tt>findByOutcome</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :      // Create CourtCase instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * their attribute <Code>commentStatement</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * by DAO's <tt>findByCommentStatement</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :      // Create CourtCase instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * their attribute <Code>source</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * by DAO's <tt>findBySource</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :      // Create CourtCase instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * their attribute <Code>creationDate</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * by DAO's <tt>findByCreationDate</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :      // Create CourtCase instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * Test function getCourtCaseList. Create multiple <Code>CourtCase</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * Query all intances by DAO's <tt>doGetCourtCaseList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create multiple CourtCase instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * and its subclasses. Save them into database and query all <Code>CourtCase</Code> instances from 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create instances of CourtCase and its subclasses. Save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       CourtCase anotherCourtCase = dao.load(courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :          courtCase, anotherCourtCase);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       CourtCaseTestHelper.delete(anotherCourtCase);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       CourtCase another = dao.load(courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       assertEquals("Queried result does not equal to updated instance", courtCase, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       CourtCaseTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       CourtCase another = dao.load(courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * and set their attribute caseNumber to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create instances and set their property caseNumber to value caseNumber
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCase another = CourtCaseTestHelper.getCourtCaseByPk(resultFound, courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             assertEquals("Result returned by find-by-caseNumber does not equal to inserted courtCase object.", courtCase, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCaseTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * and set their attribute courtcasestatus to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create instances and set their property courtcasestatus to value courtcasestatus
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCase another = CourtCaseTestHelper.getCourtCaseByPk(resultFound, courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             assertEquals("Result returned by find-by-courtcasestatus does not equal to inserted courtCase object.", courtCase, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCaseTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * and set their attribute outcome to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create instances and set their property outcome to value outcome
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCase another = CourtCaseTestHelper.getCourtCaseByPk(resultFound, courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             assertEquals("Result returned by find-by-outcome does not equal to inserted courtCase object.", courtCase, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCaseTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * and set their attribute commentStatement to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create instances and set their property commentStatement to value commentStatement
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCase another = CourtCaseTestHelper.getCourtCaseByPk(resultFound, courtCase.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       CourtCaseBPM anotherCourtCaseBPM = dao.load(courtCaseBPM.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             assertEquals("Result returned by find-by-commentStatement does not equal to inserted courtCase object.", courtCase, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :          courtCaseBPM, anotherCourtCaseBPM);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCaseTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       CourtCaseBPMTestHelper.delete(anotherCourtCaseBPM);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * and set their attribute source to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create instances and set their property source to value source
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTestHelper.java :  * Purpose: Defines the test helper class for class CourtCase
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       CourtCaseBPM another = dao.load(courtCaseBPM.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       assertEquals("Queried result does not equal to updated instance", courtCaseBPM, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       CourtCaseBPMTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCase another = CourtCaseTestHelper.getCourtCaseByPk(resultFound, courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             assertEquals("Result returned by find-by-source does not equal to inserted courtCase object.", courtCase, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCaseTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * and set their attribute creationDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       CourtCaseBPM another = dao.load(courtCaseBPM.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :       // Create instances and set their property creationDate to value creationDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * and set their attribute bpmpoasenumber to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       // Create instances and set their property bpmpoasenumber to value bpmpoasenumber
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCase another = CourtCaseTestHelper.getCourtCaseByPk(resultFound, courtCase.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPM another = CourtCaseBPMTestHelper.getCourtCaseBPMByPk(resultFound, courtCaseBPM.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             assertEquals("Result returned by find-by-bpmpoasenumber does not equal to inserted courtCaseBPM object.", courtCaseBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             assertEquals("Result returned by find-by-creationDate does not equal to inserted courtCase object.", courtCase, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPMTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCaseTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * and set their attribute courtCase_ID to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       // Create instances and set their property courtCase_ID to value courtCase_ID
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCase another = CourtCaseTestHelper.getCourtCaseByPk(resultFound, courtCase.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             assertEquals("Result returned by get-courtCase-list does not equal to inserted courtCase object.", courtCase, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :             CourtCaseTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * subclasses. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPM another = CourtCaseBPMTestHelper.getCourtCaseBPMByPk(resultFound, courtCaseBPM.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :          CourtCase anotherCourtCase  = CourtCaseTestHelper.getCourtCaseByPk(resultList, courtCase.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             assertEquals("Result returned by find-by-courtCase_ID does not equal to inserted courtCaseBPM object.", courtCaseBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", courtCase, anotherCourtCase);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPMTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherCourtCase)));
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :          CourtCaseTestHelper.delete(anotherCourtCase);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * and set their attribute courtprovisionstatus to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :       // Create instances and set their property courtprovisionstatus to value courtprovisionstatus
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPM another = CourtCaseBPMTestHelper.getCourtCaseBPMByPk(resultFound, courtCaseBPM.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             assertEquals("Result returned by find-by-courtprovisionstatus does not equal to inserted courtCaseBPM object.", courtCaseBPM, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPMTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPM another = CourtCaseBPMTestHelper.getCourtCaseBPMByPk(resultFound, courtCaseBPM.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             assertEquals("Result returned by get-courtCaseBPM-list does not equal to inserted courtCaseBPM object.", courtCaseBPM, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :             CourtCaseBPMTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :  * Purpose: Defines test class to test the peristence of class CourtDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :  * Test case class to test the persistence of CourtDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * Test object delete. Create a <Code>CourtDecision</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * their attribute <Code>documentClass</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * by DAO's <tt>findByDocumentClass</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :      // Create CourtDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * their attribute <Code>juridAct</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * by DAO's <tt>findByJuridAct</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :      // Create CourtDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * their attribute <Code>nextStep</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * by DAO's <tt>findByNextStep</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :      // Create CourtDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * their attribute <Code>mainSessionDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * by DAO's <tt>findByMainSessionDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :      // Create CourtDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * their attribute <Code>courtDecisionDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * by DAO's <tt>findByCourtDecisionDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :      // Create CourtDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * their attribute <Code>requirementList</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * by DAO's <tt>findByRequirementList</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :      // Create CourtDecision instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * their attribute <Code>reasonDecision</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * by DAO's <tt>findByReasonDecision</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :      // Create CourtDecision instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTestHelper.java :  * Purpose: Defines the test helper class for class CourtDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * Test function getCourtDecisionList. Create multiple <Code>CourtDecision</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * Query all intances by DAO's <tt>doGetCourtDecisionList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create multiple CourtDecision instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       CourtDecision anotherCourtDecision = dao.load(courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :          courtDecision, anotherCourtDecision);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       CourtDecisionTestHelper.delete(anotherCourtDecision);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       CourtDecision another = dao.load(courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       assertEquals("Queried result does not equal to updated instance", courtDecision, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       CourtDecisionTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :  * Purpose: Defines test class to test the peristence of class CourtInstance
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       CourtDecision another = dao.load(courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :  * Test case class to test the persistence of CourtInstance
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * and set their attribute documentClass to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :     * Test object delete. Create a <Code>CourtInstance</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :     * Test function getCourtInstanceList. Create multiple <Code>CourtInstance</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :     * Query all intances by DAO's <tt>doGetCourtInstanceList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       // Create multiple CourtInstance instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       CourtInstance anotherCourtInstance = dao.load(courtInstance.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :          courtInstance, anotherCourtInstance);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       CourtInstanceTestHelper.delete(anotherCourtInstance);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create instances and set their property documentClass to value documentClass
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       CourtInstance another = dao.load(courtInstance.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       assertEquals("Queried result does not equal to updated instance", courtInstance, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       CourtInstanceTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by find-by-documentClass does not equal to inserted courtDecision object.", courtDecision, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       CourtInstance another = dao.load(courtInstance.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * and set their attribute juridAct to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create instances and set their property juridAct to value juridAct
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by find-by-juridAct does not equal to inserted courtDecision object.", courtDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * and set their attribute nextStep to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create instances and set their property nextStep to value nextStep
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by find-by-nextStep does not equal to inserted courtDecision object.", courtDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * and set their attribute mainSessionDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create instances and set their property mainSessionDate to value mainSessionDate
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :             CourtInstance another = CourtInstanceTestHelper.getCourtInstanceByPk(resultFound, courtInstance.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :             assertEquals("Result returned by get-courtInstance-list does not equal to inserted courtInstance object.", courtInstance, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :             CourtInstanceTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by find-by-mainSessionDate does not equal to inserted courtDecision object.", courtDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * and set their attribute courtDecisionDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create instances and set their property courtDecisionDate to value courtDecisionDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by find-by-courtDecisionDate does not equal to inserted courtDecision object.", courtDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * and set their attribute requirementList to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create instances and set their property requirementList to value requirementList
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by find-by-requirementList does not equal to inserted courtDecision object.", courtDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * and set their attribute reasonDecision to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTestHelper.java :  * Purpose: Defines the test helper class for class CourtInstance
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :       // Create instances and set their property reasonDecision to value reasonDecision
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by find-by-reasonDecision does not equal to inserted courtDecision object.", courtDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecision another = CourtDecisionTestHelper.getCourtDecisionByPk(resultFound, courtDecision.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             assertEquals("Result returned by get-courtDecision-list does not equal to inserted courtDecision object.", courtDecision, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :             CourtDecisionTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :  * Purpose: Defines test class to test the peristence of class CourtRequest
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :  * Test case class to test the persistence of CourtRequest
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * Test object delete. Create a <Code>CourtRequest</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * their attribute <Code>requesttopic</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * by DAO's <tt>findByRequesttopic</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :      // Create CourtRequest instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTestHelper.java :  * Purpose: Defines the test helper class for class CourtRequest
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * their attribute <Code>requestgeneraldescription</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * by DAO's <tt>findByRequestgeneraldescription</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :      // Create CourtRequest instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * their attribute <Code>bpmPOCourtRequest_ID</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * by DAO's <tt>findByBpmPOCourtRequest_ID</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :      // Create CourtRequest instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * their attribute <Code>requestStatus</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * by DAO's <tt>findByRequestStatus</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :      // Create CourtRequest instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * their attribute <Code>requestSentDate</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * by DAO's <tt>findByRequestSentDate</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :      // Create CourtRequest instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * their attribute <Code>crossLinkECM</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * by DAO's <tt>findByCrossLinkECM</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :      // Create CourtRequest instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * their attribute <Code>crossLinkECMbpm</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * by DAO's <tt>findByCrossLinkECMbpm</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :      // Create CourtRequest instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * Test function getCourtRequestList. Create multiple <Code>CourtRequest</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * Query all intances by DAO's <tt>doGetCourtRequestList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create multiple CourtRequest instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       CourtRequest anotherCourtRequest = dao.load(courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :          courtRequest, anotherCourtRequest);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       CourtRequestTestHelper.delete(anotherCourtRequest);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       CourtRequest another = dao.load(courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       assertEquals("Queried result does not equal to updated instance", courtRequest, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       CourtRequest another = dao.load(courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * and set their attribute requesttopic to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create instances and set their property requesttopic to value requesttopic
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by find-by-requesttopic does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * and set their attribute requestgeneraldescription to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create instances and set their property requestgeneraldescription to value requestgeneraldescription
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by find-by-requestgeneraldescription does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * and set their attribute bpmPOCourtRequest_ID to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create instances and set their property bpmPOCourtRequest_ID to value bpmPOCourtRequest_ID
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by find-by-bpmPOCourtRequest_ID does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * and set their attribute requestStatus to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create instances and set their property requestStatus to value requestStatus
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by find-by-requestStatus does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * and set their attribute requestSentDate to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create instances and set their property requestSentDate to value requestSentDate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by find-by-requestSentDate does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * and set their attribute crossLinkECM to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create instances and set their property crossLinkECM to value crossLinkECM
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by find-by-crossLinkECM does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * and set their attribute crossLinkECMbpm to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :       // Create instances and set their property crossLinkECMbpm to value crossLinkECMbpm
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by find-by-crossLinkECMbpm does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequest another = CourtRequestTestHelper.getCourtRequestByPk(resultFound, courtRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             assertEquals("Result returned by get-courtRequest-list does not equal to inserted courtRequest object.", courtRequest, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :             CourtRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :  * Purpose: Defines test class to test the peristence of class Court
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :  * Test case class to test the persistence of Court
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * Test object delete. Create a <Code>Court</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * their attribute <Code>courttype</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * by DAO's <tt>findByCourttype</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :      // Create Court instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * their attribute <Code>courtname</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * by DAO's <tt>findByCourtname</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :      // Create Court instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * their attribute <Code>courtadress</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * by DAO's <tt>findByCourtadress</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :      // Create Court instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * Test function getCourtList. Create multiple <Code>Court</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * Query all intances by DAO's <tt>doGetCourtList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       // Create multiple Court instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       Court anotherCourt = dao.load(court.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :          court, anotherCourt);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       CourtTestHelper.delete(anotherCourt);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       Court another = dao.load(court.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       assertEquals("Queried result does not equal to updated instance", court, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       CourtTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       Court another = dao.load(court.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * and set their attribute courttype to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       // Create instances and set their property courttype to value courttype
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTestHelper.java :  * Purpose: Defines the test helper class for class Court
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             Court another = CourtTestHelper.getCourtByPk(resultFound, court.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             assertEquals("Result returned by find-by-courttype does not equal to inserted court object.", court, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             CourtTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * and set their attribute courtname to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       // Create instances and set their property courtname to value courtname
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             Court another = CourtTestHelper.getCourtByPk(resultFound, court.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             assertEquals("Result returned by find-by-courtname does not equal to inserted court object.", court, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             CourtTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * and set their attribute courtadress to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :       // Create instances and set their property courtadress to value courtadress
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             Court another = CourtTestHelper.getCourtByPk(resultFound, court.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             assertEquals("Result returned by find-by-courtadress does not equal to inserted court object.", court, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             CourtTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             Court another = CourtTestHelper.getCourtByPk(resultFound, court.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             assertEquals("Result returned by get-court-list does not equal to inserted court object.", court, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :             CourtTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\CourtTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\ProcessDocumentDao.java :     * Find <Code>ProcessDocument</Code> instances from persistence store by attribute otherDocumentType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\ProcessDocumentDao.java :     * @param otherDocumentType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\ProcessDocumentDao.java :    public List findByOtherDocumentType(String otherDocumentType) throws DaoException;
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\ProcessDocumentDao.java :     * persistence store by attribute otherDocumentType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\ProcessDocumentDao.java :     * @param otherDocumentType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\ProcessDocumentDao.java :    public List findByOtherDocumentType(String otherDocumentType, int firstResult, int maxResult) throws DaoException;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\RecoveryParamsDao.java :     * Find <Code>RecoveryParams</Code> instances from persistence store by attribute otheramounts
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\RecoveryParamsDao.java :     * @param otheramounts
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\RecoveryParamsDao.java :    public List findByOtheramounts(int otheramounts) throws DaoException;
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\RecoveryParamsDao.java :     * persistence store by attribute otheramounts
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\RecoveryParamsDao.java :     * @param otheramounts
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\dao\RecoveryParamsDao.java :    public List findByOtheramounts(int otheramounts, int firstResult, int maxResult) throws DaoException;
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :    private static final String FIND_BY_PROPERTY_OTHERDOCUMENTTYPE = "Select o from ProcessDocument o where o.otherDocumentType = :otherDocumentType";
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :       if (!(processDocumentObject.getOtherDocumentType() == null || (processDocumentObject.getOtherDocumentType() != null && processDocumentObject.getOtherDocumentType().equals("")))) {
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :          buffer.append(" and o.otherDocumentType = :otherDocumentType");
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :          paramNames.add("otherDocumentType");
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :          params.add(processDocumentObject.getOtherDocumentType());      
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :     * @see ru.sbrf.uvz.model.process.courtrequest.dao.ProcessDocumentDao#findByOtherDocumentType(String)
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :    public List findByOtherDocumentType(String otherDocumentType) throws DaoException{
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERDOCUMENTTYPE, "otherDocumentType", otherDocumentType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :     * @see ru.sbrf.uvz.model.process.courtrequest.dao.ProcessDocumentDao#findByOtherDocumentType(String, int, int)
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :    public List findByOtherDocumentType(String otherDocumentType, int firstResult, int maxResult) throws DaoException {   
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERDOCUMENTTYPE, "otherDocumentType", otherDocumentType, firstResult, maxResult); 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :    private static final String FIND_BY_PROPERTY_OTHERAMOUNTS = "Select o from RecoveryParams o where o.otheramounts = :otheramounts";
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :       if (!(recoveryParamsObject.getOtheramounts() == 0)) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :          buffer.append(" and o.otheramounts = :otheramounts");
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :          paramNames.add("otheramounts");
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :          params.add(recoveryParamsObject.getOtheramounts());      
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :     * @see ru.sbrf.uvz.model.process.courtrequest.dao.RecoveryParamsDao#findByOtheramounts(int)
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :    public List findByOtheramounts(int otheramounts) throws DaoException{
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERAMOUNTS, "otheramounts", otheramounts);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :     * @see ru.sbrf.uvz.model.process.courtrequest.dao.RecoveryParamsDao#findByOtheramounts(int, int, int)
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :    public List findByOtheramounts(int otheramounts, int firstResult, int maxResult) throws DaoException {   
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.java :       return super.findByNamedParam(FIND_BY_PROPERTY_OTHERAMOUNTS, "otheramounts", otheramounts, firstResult, maxResult); 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :  * Purpose: Defines test class to test the peristence of class Event
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTestHelper.java :  * Purpose: Defines the test helper class for class Event
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :  * Test case class to test the persistence of Event
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * Test object delete. Create a <Code>Event</Code> instance and save it into database. Delete the 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * their attribute <Code>eventDate</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * by DAO's <tt>findByEventDate</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :      // Create Event instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * their attribute <Code>eventType</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * by DAO's <tt>findByEventType</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :      // Create Event instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * their attribute <Code>eventName</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * by DAO's <tt>findByEventName</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :      // Create Event instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * Test function getEventList. Create multiple <Code>Event</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * Query all intances by DAO's <tt>doGetEventList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :  * Purpose: Defines test class to test the peristence of class EventType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :  * Test case class to test the persistence of EventType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :     * Test object delete. Create a <Code>EventType</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :     * Test function getEventTypeList. Create multiple <Code>EventType</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :     * Query all intances by DAO's <tt>doGetEventTypeList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       // Create multiple EventType instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       // Create multiple Event instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       EventType anotherEventType = dao.load(eventType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :          eventType, anotherEventType);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       EventTypeTestHelper.delete(anotherEventType);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       EventType another = dao.load(eventType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       assertEquals("Queried result does not equal to updated instance", eventType, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       EventTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       Event anotherEvent = dao.load(event.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       EventType another = dao.load(eventType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :          event, anotherEvent);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       EventTestHelper.delete(anotherEvent);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :             EventType another = EventTypeTestHelper.getEventTypeByPk(resultFound, eventType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       Event another = dao.load(event.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       assertEquals("Queried result does not equal to updated instance", event, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :             assertEquals("Result returned by get-eventType-list does not equal to inserted eventType object.", eventType, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :             EventTypeTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       EventTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       Event another = dao.load(event.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * and set their attribute eventDate to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       // Create instances and set their property eventDate to value eventDate
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             Event another = EventTestHelper.getEventByPk(resultFound, event.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             assertEquals("Result returned by find-by-eventDate does not equal to inserted event object.", event, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             EventTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * and set their attribute eventType to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       // Create instances and set their property eventType to value eventType
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             Event another = EventTestHelper.getEventByPk(resultFound, event.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             assertEquals("Result returned by find-by-eventType does not equal to inserted event object.", event, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :  * Purpose: Defines test class to test the peristence of class ProcessDocument
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :  * Test case class to test the persistence of ProcessDocument
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Test object delete. Create a <Code>ProcessDocument</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * their attribute <Code>documentNumber</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * by DAO's <tt>findByDocumentNumber</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Create ProcessDocument instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * their attribute <Code>documentName</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * by DAO's <tt>findByDocumentName</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Create ProcessDocument instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Test query function </tt>findByOtherDocumentType</tt>. Create multiple <Code>ProcessDocument</Code> instances and set 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * their attribute <Code>otherDocumentType</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * by DAO's <tt>findByOtherDocumentType</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :    public void testFindByOtherDocumentType() throws Exception {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      logger.debug("Test find-by-otherDocumentType begins!");
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      String otherDocumentType = String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8))));
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Create ProcessDocument instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      processDocuments = preFindByOtherDocumentType(otherDocumentType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Query ProcessDocument instances by property otherDocumentType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      List result = doFindByOtherDocumentType(otherDocumentType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      afterFindByOtherDocumentType(processDocuments, result);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      logger.debug("Test find-by-otherDocumentType ends!");
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * their attribute <Code>documentDate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * by DAO's <tt>findByDocumentDate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Create ProcessDocument instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * their attribute <Code>commentDocument</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * by DAO's <tt>findByCommentDocument</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Create ProcessDocument instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * their attribute <Code>subbmittingDate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * by DAO's <tt>findBySubbmittingDate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Create ProcessDocument instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * their attribute <Code>gettingsDocumentDate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * by DAO's <tt>findByGettingsDocumentDate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :      // Create ProcessDocument instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Test function getProcessDocumentList. Create multiple <Code>ProcessDocument</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Query all intances by DAO's <tt>doGetProcessDocumentList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create multiple ProcessDocument instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTestHelper.java :  * Purpose: Defines the test helper class for class ProcessDocument
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       ProcessDocument anotherProcessDocument = dao.load(processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :          processDocument, anotherProcessDocument);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       ProcessDocumentTestHelper.delete(anotherProcessDocument);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTestHelper.java :       persistentObject.setOtherDocumentType(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :  * Purpose: Defines test class to test the peristence of class RecoveryParams
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       ProcessDocument another = dao.load(processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       assertEquals("Queried result does not equal to updated instance", processDocument, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       ProcessDocumentTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTestHelper.java :      persistentObject.setOtherDocumentType(String.valueOf(random.nextInt((int)Math.round(Math.pow(10,8)))));
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :  * Test case class to test the persistence of RecoveryParams
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       ProcessDocument another = dao.load(processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTypeTestHelper.java :  * Purpose: Defines the test helper class for class EventType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Test object delete. Create a <Code>RecoveryParams</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * their attribute <Code>debtsum</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * by DAO's <tt>findByDebtsum</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      // Create RecoveryParams instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * their attribute <Code>rate</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * by DAO's <tt>findByRate</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * and set their attribute documentNumber to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      // Create RecoveryParams instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * their attribute <Code>prophrate</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create instances and set their property documentNumber to value documentNumber
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * by DAO's <tt>findByProphrate</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      // Create RecoveryParams instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             EventTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * and set their attribute eventName to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :       // Create instances and set their property eventName to value eventName
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             Event another = EventTestHelper.getEventByPk(resultFound, event.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             assertEquals("Result returned by find-by-eventName does not equal to inserted event object.", event, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             EventTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :  * Purpose: Defines test class to test the peristence of class RequestCategory
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             Event another = EventTestHelper.getEventByPk(resultFound, event.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             assertEquals("Result returned by get-event-list does not equal to inserted event object.", event, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :             EventTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :  * Test case class to test the persistence of RequestCategory
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTestHelper.java :  * Purpose: Defines the test helper class for class RequestCategory
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\EventTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :     * Test object delete. Create a <Code>RequestCategory</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :     * Test function getRequestCategoryList. Create multiple <Code>RequestCategory</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :     * Query all intances by DAO's <tt>doGetRequestCategoryList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       // Create multiple RequestCategory instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTestHelper.java :  * Purpose: Defines the test helper class for class RecoveryParams
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by find-by-documentNumber does not equal to inserted processDocument object.", processDocument, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * and set their attribute documentName to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTestHelper.java :       persistentObject.setOtheramounts(random.nextInt());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create instances and set their property documentName to value documentName
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTestHelper.java :      persistentObject.setOtheramounts(random.nextInt());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by find-by-documentName does not equal to inserted processDocument object.", processDocument, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Do function <tt>FindByOtherDocumentType</tt> test preparation. Create <Code>ProcessDocument</Code> instances 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * and set their attribute otherDocumentType to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :    private List preFindByOtherDocumentType(String otherDocumentType) throws Exception {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       List oldProcessDocuments = dao.findByOtherDocumentType(otherDocumentType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create instances and set their property otherDocumentType to value otherDocumentType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :          processDocument.setOtherDocumentType(otherDocumentType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Query <Code>ProcessDocument</Code> instances from database by attribute <Code>otherDocumentType</Code>.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :    private List doFindByOtherDocumentType(String otherDocumentType) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       return dao.findByOtherDocumentType(otherDocumentType);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Verify if method <tt>findByOtherDocumentType</tt> can find all <Code>ProcessDocument</Code> instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :    private void afterFindByOtherDocumentType(List processDocuments, List resultFound) {
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :          assertNotNull("Result returned by find-by-otherDocumentType is null.", resultFound);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :          assertEquals("Result count returned by find-by-otherDocumentType is incorrect.", processDocuments.size(), resultFound.size());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by find-by-otherDocumentType does not equal to inserted processDocument object.", processDocument, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * and set their attribute documentDate to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create instances and set their property documentDate to value documentDate
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * their attribute <Code>forfeit</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * by DAO's <tt>findByForfeit</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      // Create RecoveryParams instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * their attribute <Code>statefee</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * by DAO's <tt>findByStatefee</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      // Create RecoveryParams instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTestHelper.java :  * Purpose: Defines the test helper class for class RequestStatus
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :  * Purpose: Defines test class to test the peristence of class RequestStatus
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Test query function </tt>findByOtheramounts</tt>. Create multiple <Code>RecoveryParams</Code> instances and set 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * their attribute <Code>otheramounts</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * by DAO's <tt>findByOtheramounts</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :    public void testFindByOtheramounts() throws Exception {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      logger.debug("Test find-by-otheramounts begins!");
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      int otheramounts = random.nextInt();
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      // Create RecoveryParams instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :  * Purpose: Defines test class to test the peristence of class RequestSubject
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      recoveryParamss = preFindByOtheramounts(otheramounts);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      // Query RecoveryParams instances by property otheramounts
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      List result = doFindByOtheramounts(otheramounts);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      afterFindByOtheramounts(recoveryParamss, result);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :  * Test case class to test the persistence of RequestStatus
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :      logger.debug("Test find-by-otheramounts ends!");
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Test function getRecoveryParamsList. Create multiple <Code>RecoveryParams</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Query all intances by DAO's <tt>doGetRecoveryParamsList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :  * Test case class to test the persistence of RequestSubject
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       // Create multiple RecoveryParams instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * Test object delete. Create a <Code>RequestStatus</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :     * Test object delete. Create a <Code>RequestSubject</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       RecoveryParams anotherRecoveryParams = dao.load(recoveryParams.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :          recoveryParams, anotherRecoveryParams);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       RecoveryParamsTestHelper.delete(anotherRecoveryParams);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :     * Test function getRequestSubjectList. Create multiple <Code>RequestSubject</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :     * Query all intances by DAO's <tt>doGetRequestSubjectList</tt> method. Verify if the method can find all 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * their attribute <Code>statusCode</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       // Create multiple RequestSubject instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       RecoveryParams another = dao.load(recoveryParams.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       assertEquals("Queried result does not equal to updated instance", recoveryParams, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       RecoveryParamsTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * by DAO's <tt>findByStatusCode</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by find-by-documentDate does not equal to inserted processDocument object.", processDocument, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * and set their attribute commentDocument to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       RequestCategory anotherRequestCategory = dao.load(requestCategory.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create instances and set their property commentDocument to value commentDocument
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :          requestCategory, anotherRequestCategory);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       RequestCategoryTestHelper.delete(anotherRequestCategory);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by find-by-commentDocument does not equal to inserted processDocument object.", processDocument, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * and set their attribute subbmittingDate to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create instances and set their property subbmittingDate to value subbmittingDate
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       RequestCategory another = dao.load(requestCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       assertEquals("Queried result does not equal to updated instance", requestCategory, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       RequestCategoryTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by find-by-subbmittingDate does not equal to inserted processDocument object.", processDocument, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       RequestCategory another = dao.load(requestCategory.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * and set their attribute gettingsDocumentDate to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTestHelper.java :  * Purpose: Defines the test helper class for class RequestSubject
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :       // Create instances and set their property gettingsDocumentDate to value gettingsDocumentDate
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by find-by-gettingsDocumentDate does not equal to inserted processDocument object.", processDocument, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :             RequestCategory another = RequestCategoryTestHelper.getRequestCategoryByPk(resultFound, requestCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :             assertEquals("Result returned by get-requestCategory-list does not equal to inserted requestCategory object.", requestCategory, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :  * Purpose: Defines test class to test the peristence of class RequestType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :             RequestCategoryTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocument another = ProcessDocumentTestHelper.getProcessDocumentByPk(resultFound, processDocument.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             assertEquals("Result returned by get-processDocument-list does not equal to inserted processDocument object.", processDocument, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :             ProcessDocumentTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :  * Test case class to test the persistence of RequestType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :     * Test object delete. Create a <Code>RequestType</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTestHelper.java :  * Purpose: Defines the test helper class for class RequestType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :  * Purpose: Defines test class to test the peristence of class RequirementList
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :  * Test case class to test the persistence of RequirementList
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       RequestSubject anotherRequestSubject = dao.load(requestSubject.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * Test object delete. Create a <Code>RequirementList</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :          requestSubject, anotherRequestSubject);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       RequestSubjectTestHelper.delete(anotherRequestSubject);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       RecoveryParams another = dao.load(recoveryParams.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       assertNull("Inserted instance is not deleted", another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :      // Create RequestStatus instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * and set their attribute debtsum to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       // Create instances and set their property debtsum to value debtsum
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * their attribute <Code>statusDesc</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * by DAO's <tt>findByStatusDesc</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :      // Create RequestStatus instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * their attribute <Code>requirementType</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * Test function getRequestStatusList. Create multiple <Code>RequestStatus</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * Query all intances by DAO's <tt>doGetRequestStatusList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * by DAO's <tt>findByRequirementType</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       // Create multiple RequestStatus instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :      // Create RequirementList instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * their attribute <Code>typeMaterialClaim</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * by DAO's <tt>findByTypeMaterialClaim</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       RequestStatus anotherRequestStatus = dao.load(requestStatus.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParams another = RecoveryParamsTestHelper.getRecoveryParamsByPk(resultFound, recoveryParams.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             assertEquals("Result returned by find-by-debtsum does not equal to inserted recoveryParams object.", recoveryParams, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :      // Create RequirementList instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :          requestStatus, anotherRequestStatus);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParamsTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       RequestStatusTestHelper.delete(anotherRequestStatus);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * and set their attribute rate to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * their attribute <Code>currencyMaterialClaim</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * by DAO's <tt>findByCurrencyMaterialClaim</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       // Create instances and set their property rate to value rate
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :      // Create RequirementList instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParams another = RecoveryParamsTestHelper.getRecoveryParamsByPk(resultFound, recoveryParams.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * their attribute <Code>inclusionExclusionDate</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             assertEquals("Result returned by find-by-rate does not equal to inserted recoveryParams object.", recoveryParams, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * by DAO's <tt>findByInclusionExclusionDate</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParamsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * and set their attribute prophrate to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :      // Create RequirementList instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       // Create instances and set their property prophrate to value prophrate
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       RequestStatus another = dao.load(requestStatus.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       assertEquals("Queried result does not equal to updated instance", requestStatus, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :  * Purpose: Defines test class to test the peristence of class TaskBPM
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       RequestStatusTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :  * Test case class to test the persistence of TaskBPM
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTestHelper.java :  * Purpose: Defines the test helper class for class RequirementList
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParams another = RecoveryParamsTestHelper.getRecoveryParamsByPk(resultFound, recoveryParams.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             assertEquals("Result returned by find-by-prophrate does not equal to inserted recoveryParams object.", recoveryParams, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParamsTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       RequestStatus another = dao.load(requestStatus.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * and set their attribute forfeit to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * their attribute <Code>securedByPledge</Code> to specified value. Save these instances into database and query them 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * and set their attribute statusCode to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * by DAO's <tt>findBySecuredByPledge</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       // Create instances and set their property forfeit to value forfeit
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :      // Create RequirementList instances and save them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       // Create instances and set their property statusCode to value statusCode
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * their attribute <Code>provisionCurMatClaim</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * by DAO's <tt>findByProvisionCurMatClaim</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * Test object delete. Create a <Code>TaskBPM</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParams another = RecoveryParamsTestHelper.getRecoveryParamsByPk(resultFound, recoveryParams.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :      // Create RequirementList instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             assertEquals("Result returned by find-by-forfeit does not equal to inserted recoveryParams object.", recoveryParams, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParamsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * their attribute <Code>taskBPMName</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * by DAO's <tt>findByTaskBPMName</tt> method. Verify if the method can find all instances saved before.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             RequestStatus another = RequestStatusTestHelper.getRequestStatusByPk(resultFound, requestStatus.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       RequestSubject another = dao.load(requestSubject.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             assertEquals("Result returned by find-by-statusCode does not equal to inserted requestStatus object.", requestStatus, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             RequestStatusTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       assertEquals("Queried result does not equal to updated instance", requestSubject, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       RequestSubjectTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * and set their attribute statusDesc to specified value. Save these instances into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :     * Test function getRequestTypeList. Create multiple <Code>RequestType</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :     * Query all intances by DAO's <tt>doGetRequestTypeList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       RequestSubject another = dao.load(requestSubject.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       // Create multiple RequestType instance and insert them into database
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :       // Create instances and set their property statusDesc to value statusDesc
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       RequestType anotherRequestType = dao.load(requestType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :          requestType, anotherRequestType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       RequestTypeTestHelper.delete(anotherRequestType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       RequestType another = dao.load(requestType.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             RequestStatus another = RequestStatusTestHelper.getRequestStatusByPk(resultFound, requestStatus.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       assertEquals("Queried result does not equal to updated instance", requestType, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       RequestTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             assertEquals("Result returned by find-by-statusDesc does not equal to inserted requestStatus object.", requestStatus, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             RequestStatusTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       RequestType another = dao.load(requestType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :             RequestType another = RequestTypeTestHelper.getRequestTypeByPk(resultFound, requestType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :             assertEquals("Result returned by get-requestType-list does not equal to inserted requestType object.", requestType, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :             RequestTypeTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             RequestStatus another = RequestStatusTestHelper.getRequestStatusByPk(resultFound, requestStatus.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             assertEquals("Result returned by get-requestStatus-list does not equal to inserted requestStatus object.", requestStatus, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :             RequestStatusTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * been saved. Save the instance in the end.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :             RequestSubject another = RequestSubjectTestHelper.getRequestSubjectByPk(resultFound, requestSubject.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :             assertEquals("Result returned by get-requestSubject-list does not equal to inserted requestSubject object.", requestSubject, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTestHelper.java :  * Purpose: Defines the test helper class for class TaskBPM
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * and set their attribute statefee to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :      // Create TaskBPM instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       // Create instances and set their property statefee to value statefee
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * Test function getRequirementListList. Create multiple <Code>RequirementList</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * their attribute <Code>taskBPMReceiveDate</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * by DAO's <tt>findByTaskBPMReceiveDate</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :             RequestSubjectTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * Query all intances by DAO's <tt>doGetRequirementListList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :      // Create TaskBPM instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       // Create multiple RequirementList instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * their attribute <Code>taskBPMStatus</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * by DAO's <tt>findByTaskBPMStatus</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParams another = RecoveryParamsTestHelper.getRecoveryParamsByPk(resultFound, recoveryParams.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             assertEquals("Result returned by find-by-statefee does not equal to inserted recoveryParams object.", recoveryParams, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :      // Create TaskBPM instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParamsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Do function <tt>FindByOtheramounts</tt> test preparation. Create <Code>RecoveryParams</Code> instances 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * and set their attribute otheramounts to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * their attribute <Code>infoRequestId</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * by DAO's <tt>findByInfoRequestId</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :    private List preFindByOtheramounts(int otheramounts) throws Exception {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       RequirementList anotherRequirementList = dao.load(requirementList.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       List oldRecoveryParamss = dao.findByOtheramounts(otheramounts);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :      // Create TaskBPM instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :          requirementList, anotherRequirementList);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       // Create instances and set their property otheramounts to value otheramounts
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       RequirementListTestHelper.delete(anotherRequirementList);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * their attribute <Code>infoRequestPoint</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :          recoveryParams.setOtheramounts(otheramounts);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * by DAO's <tt>findByInfoRequestPoint</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       RequirementList another = dao.load(requirementList.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Query <Code>RecoveryParams</Code> instances from database by attribute <Code>otheramounts</Code>.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :      // Create TaskBPM instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :    private List doFindByOtheramounts(int otheramounts) {
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       assertEquals("Queried result does not equal to updated instance", requirementList, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       RequirementListTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * their attribute <Code>asUDDocumentLink</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * by DAO's <tt>findByAsUDDocumentLink</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :       return dao.findByOtheramounts(otheramounts);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Verify if method <tt>findByOtheramounts</tt> can find all <Code>RecoveryParams</Code> instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :      // Create TaskBPM instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :    private void afterFindByOtheramounts(List recoveryParamss, List resultFound) {
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :          assertNotNull("Result returned by find-by-otheramounts is null.", resultFound);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       RequirementList another = dao.load(requirementList.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * Test function getTaskBPMList. Create multiple <Code>TaskBPM</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :          assertEquals("Result count returned by find-by-otheramounts is incorrect.", recoveryParamss.size(), resultFound.size());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * Query all intances by DAO's <tt>doGetTaskBPMList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParams another = RecoveryParamsTestHelper.getRecoveryParamsByPk(resultFound, recoveryParams.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * and set their attribute requirementType to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       // Create multiple TaskBPM instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             assertEquals("Result returned by find-by-otheramounts does not equal to inserted recoveryParams object.", recoveryParams, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParamsTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       // Create instances and set their property requirementType to value requirementType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       TaskBPM anotherTaskBPM = dao.load(taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :          taskBPM, anotherTaskBPM);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       TaskBPMTestHelper.delete(anotherTaskBPM);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParams another = RecoveryParamsTestHelper.getRecoveryParamsByPk(resultFound, recoveryParams.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       TaskBPM another = dao.load(taskBPM.getTaskPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             assertEquals("Result returned by get-recoveryParams-list does not equal to inserted recoveryParams object.", recoveryParams, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       assertEquals("Queried result does not equal to updated instance", taskBPM, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :             RecoveryParamsTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       TaskBPMTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       TaskBPM another = dao.load(taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * and set their attribute taskBPMName to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       // Create instances and set their property taskBPMName to value taskBPMName
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementList another = RequirementListTestHelper.getRequirementListByPk(resultFound, requirementList.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             assertEquals("Result returned by find-by-requirementType does not equal to inserted requirementList object.", requirementList, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementListTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * and set their attribute typeMaterialClaim to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPM another = TaskBPMTestHelper.getTaskBPMByPk(resultFound, taskBPM.getTaskPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             assertEquals("Result returned by find-by-taskBPMName does not equal to inserted taskBPM object.", taskBPM, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       // Create instances and set their property typeMaterialClaim to value typeMaterialClaim
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPMTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementList another = RequirementListTestHelper.getRequirementListByPk(resultFound, requirementList.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             assertEquals("Result returned by find-by-typeMaterialClaim does not equal to inserted requirementList object.", requirementList, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementListTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * and set their attribute currencyMaterialClaim to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       // Create instances and set their property currencyMaterialClaim to value currencyMaterialClaim
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * and set their attribute taskBPMReceiveDate to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       // Create instances and set their property taskBPMReceiveDate to value taskBPMReceiveDate
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementList another = RequirementListTestHelper.getRequirementListByPk(resultFound, requirementList.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             assertEquals("Result returned by find-by-currencyMaterialClaim does not equal to inserted requirementList object.", requirementList, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementListTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * and set their attribute inclusionExclusionDate to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       // Create instances and set their property inclusionExclusionDate to value inclusionExclusionDate
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPM another = TaskBPMTestHelper.getTaskBPMByPk(resultFound, taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             assertEquals("Result returned by find-by-taskBPMReceiveDate does not equal to inserted taskBPM object.", taskBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPMTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * and set their attribute taskBPMStatus to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementList another = RequirementListTestHelper.getRequirementListByPk(resultFound, requirementList.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       // Create instances and set their property taskBPMStatus to value taskBPMStatus
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             assertEquals("Result returned by find-by-inclusionExclusionDate does not equal to inserted requirementList object.", requirementList, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementListTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * and set their attribute securedByPledge to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       // Create instances and set their property securedByPledge to value securedByPledge
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPM another = TaskBPMTestHelper.getTaskBPMByPk(resultFound, taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             assertEquals("Result returned by find-by-taskBPMStatus does not equal to inserted taskBPM object.", taskBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPMTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * and set their attribute infoRequestId to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementList another = RequirementListTestHelper.getRequirementListByPk(resultFound, requirementList.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             assertEquals("Result returned by find-by-securedByPledge does not equal to inserted requirementList object.", requirementList, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       // Create instances and set their property infoRequestId to value infoRequestId
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementListTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * and set their attribute provisionCurMatClaim to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :       // Create instances and set their property provisionCurMatClaim to value provisionCurMatClaim
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPM another = TaskBPMTestHelper.getTaskBPMByPk(resultFound, taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             assertEquals("Result returned by find-by-infoRequestId does not equal to inserted taskBPM object.", taskBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPMTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementList another = RequirementListTestHelper.getRequirementListByPk(resultFound, requirementList.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             assertEquals("Result returned by find-by-provisionCurMatClaim does not equal to inserted requirementList object.", requirementList, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * and set their attribute infoRequestPoint to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementListTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       // Create instances and set their property infoRequestPoint to value infoRequestPoint
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPM another = TaskBPMTestHelper.getTaskBPMByPk(resultFound, taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             assertEquals("Result returned by find-by-infoRequestPoint does not equal to inserted taskBPM object.", taskBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPMTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementList another = RequirementListTestHelper.getRequirementListByPk(resultFound, requirementList.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * and set their attribute asUDDocumentLink to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             assertEquals("Result returned by get-requirementList-list does not equal to inserted requirementList object.", requirementList, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :             RequirementListTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :       // Create instances and set their property asUDDocumentLink to value asUDDocumentLink
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPM another = TaskBPMTestHelper.getTaskBPMByPk(resultFound, taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             assertEquals("Result returned by find-by-asUDDocumentLink does not equal to inserted taskBPM object.", taskBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPMTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPM another = TaskBPMTestHelper.getTaskBPMByPk(resultFound, taskBPM.getTaskPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             assertEquals("Result returned by get-taskBPM-list does not equal to inserted taskBPM object.", taskBPM, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :             TaskBPMTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :  * Purpose: Defines test class to test the peristence of class DebtorsGroupParty
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :  * Test case class to test the persistence of DebtorsGroupParty
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :     * Test object delete. Create a <Code>DebtorsGroupParty</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :     * Test function getDebtorsGroupPartyList. Create multiple <Code>DebtorsGroupParty</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :     * Query all intances by DAO's <tt>doGetDebtorsGroupPartyList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       // Create multiple DebtorsGroupParty instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       DebtorsGroupParty anotherDebtorsGroupParty = dao.load(debtorsGroupParty.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :          debtorsGroupParty, anotherDebtorsGroupParty);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       DebtorsGroupPartyTestHelper.delete(anotherDebtorsGroupParty);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       DebtorsGroupParty another = dao.load(debtorsGroupParty.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       assertEquals("Queried result does not equal to updated instance", debtorsGroupParty, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       DebtorsGroupPartyTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTestHelper.java :  * Purpose: Defines the test helper class for class DebtorsGroupParty
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       DebtorsGroupParty another = dao.load(debtorsGroupParty.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :             DebtorsGroupParty another = DebtorsGroupPartyTestHelper.getDebtorsGroupPartyByPk(resultFound, debtorsGroupParty.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :             assertEquals("Result returned by get-debtorsGroupParty-list does not equal to inserted debtorsGroupParty object.", debtorsGroupParty, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :             DebtorsGroupPartyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :  * Purpose: Defines test class to test the peristence of class DebtorsGroup
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :  * Test case class to test the persistence of DebtorsGroup
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :     * Test object delete. Create a <Code>DebtorsGroup</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :     * Test function getDebtorsGroupList. Create multiple <Code>DebtorsGroup</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :     * Query all intances by DAO's <tt>doGetDebtorsGroupList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       // Create multiple DebtorsGroup instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       DebtorsGroup anotherDebtorsGroup = dao.load(debtorsGroup.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :          debtorsGroup, anotherDebtorsGroup);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       DebtorsGroupTestHelper.delete(anotherDebtorsGroup);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTestHelper.java :  * Purpose: Defines the test helper class for class DebtorsGroup
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       DebtorsGroup another = dao.load(debtorsGroup.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       assertEquals("Queried result does not equal to updated instance", debtorsGroup, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       DebtorsGroupTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       DebtorsGroup another = dao.load(debtorsGroup.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :  * Purpose: Defines test class to test the peristence of class DebtorsRegToolGroupParty
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :             DebtorsGroup another = DebtorsGroupTestHelper.getDebtorsGroupByPk(resultFound, debtorsGroup.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :             assertEquals("Result returned by get-debtorsGroup-list does not equal to inserted debtorsGroup object.", debtorsGroup, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :             DebtorsGroupTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :  * Test case class to test the persistence of DebtorsRegToolGroupParty
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :     * Test object delete. Create a <Code>DebtorsRegToolGroupParty</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsGroupTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :     * Test function getDebtorsRegToolGroupPartyList. Create multiple <Code>DebtorsRegToolGroupParty</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :     * Query all intances by DAO's <tt>doGetDebtorsRegToolGroupPartyList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       // Create multiple DebtorsRegToolGroupParty instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       DebtorsRegToolGroupParty anotherDebtorsRegToolGroupParty = dao.load(debtorsRegToolGroupParty.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :          debtorsRegToolGroupParty, anotherDebtorsRegToolGroupParty);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       DebtorsRegToolGroupPartyTestHelper.delete(anotherDebtorsRegToolGroupParty);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       DebtorsRegToolGroupParty another = dao.load(debtorsRegToolGroupParty.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       assertEquals("Queried result does not equal to updated instance", debtorsRegToolGroupParty, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       DebtorsRegToolGroupPartyTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTestHelper.java :  * Purpose: Defines the test helper class for class DebtorsRegToolGroupParty
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       DebtorsRegToolGroupParty another = dao.load(debtorsRegToolGroupParty.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :             DebtorsRegToolGroupParty another = DebtorsRegToolGroupPartyTestHelper.getDebtorsRegToolGroupPartyByPk(resultFound, debtorsRegToolGroupParty.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :             assertEquals("Result returned by get-debtorsRegToolGroupParty-list does not equal to inserted debtorsRegToolGroupParty object.", debtorsRegToolGroupParty, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :             DebtorsRegToolGroupPartyTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :  * Purpose: Defines test class to test the peristence of class DebtorsRegulationToolGroup
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :  * Test case class to test the persistence of DebtorsRegulationToolGroup
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :     * Test object delete. Create a <Code>DebtorsRegulationToolGroup</Code> instance and save it into database. Delete the 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :     * Test function getDebtorsRegulationToolGroupList. Create multiple <Code>DebtorsRegulationToolGroup</Code> instances and save them into database.  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :     * Query all intances by DAO's <tt>doGetDebtorsRegulationToolGroupList</tt> method. Verify if the method can find all 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       // Create multiple DebtorsRegulationToolGroup instance and insert them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       DebtorsRegulationToolGroup anotherDebtorsRegulationToolGroup = dao.load(debtorsRegulationToolGroup.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :          debtorsRegulationToolGroup, anotherDebtorsRegulationToolGroup);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       DebtorsRegulationToolGroupTestHelper.delete(anotherDebtorsRegulationToolGroup);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       DebtorsRegulationToolGroup another = dao.load(debtorsRegulationToolGroup.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       assertEquals("Queried result does not equal to updated instance", debtorsRegulationToolGroup, another);  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       DebtorsRegulationToolGroupTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTestHelper.java :  * Purpose: Defines the test helper class for class DebtorsRegulationToolGroup
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       DebtorsRegulationToolGroup another = dao.load(debtorsRegulationToolGroup.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :       assertNull("Inserted instance is not deleted", another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :     * save them into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :             DebtorsRegulationToolGroup another = DebtorsRegulationToolGroupTestHelper.getDebtorsRegulationToolGroupByPk(resultFound, debtorsRegulationToolGroup.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :             assertEquals("Result returned by get-debtorsRegulationToolGroup-list does not equal to inserted debtorsRegulationToolGroup object.", debtorsRegulationToolGroup, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :             DebtorsRegulationToolGroupTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :     * been saved. Save the instance in the end.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :  * Purpose: Defines test class to test the peristence of class EmployeeUser
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :  * Test case class to test the persistence of EmployeeUser
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * Test object delete. Create a <Code>EmployeeUser</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * their attribute <Code>fullName</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * by DAO's <tt>findByFullName</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :      // Create EmployeeUser instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * their attribute <Code>interOfficeEmail</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * by DAO's <tt>findByInterOfficeEmail</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :      // Create EmployeeUser instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * their attribute <Code>employeeNumber</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * by DAO's <tt>findByEmployeeNumber</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :      // Create EmployeeUser instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * their attribute <Code>phoneNumber</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * by DAO's <tt>findByPhoneNumber</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :      // Create EmployeeUser instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * Test function getEmployeeUserList. Create multiple <Code>EmployeeUser</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * Query all intances by DAO's <tt>doGetEmployeeUserList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTestHelper.java :  * Purpose: Defines the test helper class for class EmployeeUser
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       // Create multiple EmployeeUser instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       EmployeeUser anotherEmployeeUser = dao.load(employeeUser.getEmployeeUserPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :          employeeUser, anotherEmployeeUser);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       EmployeeUserTestHelper.delete(anotherEmployeeUser);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       EmployeeUser another = dao.load(employeeUser.getEmployeeUserPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       assertEquals("Queried result does not equal to updated instance", employeeUser, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       EmployeeUserTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       EmployeeUser another = dao.load(employeeUser.getEmployeeUserPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * and set their attribute fullName to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       // Create instances and set their property fullName to value fullName
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :  * Purpose: Defines test class to test the peristence of class LegalRequest
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :  * Test case class to test the persistence of LegalRequest
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUser another = EmployeeUserTestHelper.getEmployeeUserByPk(resultFound, employeeUser.getEmployeeUserPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             assertEquals("Result returned by find-by-fullName does not equal to inserted employeeUser object.", employeeUser, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * Test object delete. Create a <Code>LegalRequest</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUserTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>topic</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByTopic</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * and set their attribute interOfficeEmail to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       // Create instances and set their property interOfficeEmail to value interOfficeEmail
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>justification</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByJustification</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>description</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByDescription</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>opinionBpmPo</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByOpinionBpmPo</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>crossLinkBpmPo</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByCrossLinkBpmPo</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUser another = EmployeeUserTestHelper.getEmployeeUserByPk(resultFound, employeeUser.getEmployeeUserPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             assertEquals("Result returned by find-by-interOfficeEmail does not equal to inserted employeeUser object.", employeeUser, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUserTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * and set their attribute employeeNumber to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       // Create instances and set their property employeeNumber to value employeeNumber
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTestHelper.java :  * Purpose: Defines the test helper class for class LegalRequest
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUser another = EmployeeUserTestHelper.getEmployeeUserByPk(resultFound, employeeUser.getEmployeeUserPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             assertEquals("Result returned by find-by-employeeNumber does not equal to inserted employeeUser object.", employeeUser, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUserTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * and set their attribute phoneNumber to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>caseKeyBpmPo</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByCaseKeyBpmPo</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :       // Create instances and set their property phoneNumber to value phoneNumber
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>casePerformerBpmPo</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByCasePerformerBpmPo</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUser another = EmployeeUserTestHelper.getEmployeeUserByPk(resultFound, employeeUser.getEmployeeUserPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             assertEquals("Result returned by find-by-phoneNumber does not equal to inserted employeeUser object.", employeeUser, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUserTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * save them into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * their attribute <Code>crossLinkECM</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * by DAO's <tt>findByCrossLinkECM</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :      // Create LegalRequest instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * Test function getLegalRequestList. Create multiple <Code>LegalRequest</Code> instances and save them into database.  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * Query all intances by DAO's <tt>doGetLegalRequestList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :  * Purpose: Defines test class to test the peristence of class ProblemAssetRegulation
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create multiple LegalRequest instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :  * Test case class to test the persistence of ProblemAssetRegulation
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       LegalRequest anotherLegalRequest = dao.load(legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :          legalRequest, anotherLegalRequest);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       LegalRequestTestHelper.delete(anotherLegalRequest);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUser another = EmployeeUserTestHelper.getEmployeeUserByPk(resultFound, employeeUser.getEmployeeUserPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             assertEquals("Result returned by get-employeeUser-list does not equal to inserted employeeUser object.", employeeUser, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :             EmployeeUserTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * been saved. Save the instance in the end.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       LegalRequest another = dao.load(legalRequest.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\EmployeeUserTest.java :     * Delete the instance from database if instance with the same primary key as specified 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       assertEquals("Queried result does not equal to updated instance", legalRequest, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :     * Test object delete. Create a <Code>ProblemAssetRegulation</Code> instance and save it into database. Delete the 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       LegalRequestTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :     * Test function getProblemAssetRegulationList. Create multiple <Code>ProblemAssetRegulation</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :     * Query all intances by DAO's <tt>doGetProblemAssetRegulationList</tt> method. Verify if the method can find all 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       LegalRequest another = dao.load(legalRequest.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       // Create multiple ProblemAssetRegulation instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       ProblemAssetRegulation anotherProblemAssetRegulation = dao.load(problemAssetRegulation.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :          problemAssetRegulation, anotherProblemAssetRegulation);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       ProblemAssetRegulationTestHelper.delete(anotherProblemAssetRegulation);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTestHelper.java :  * Purpose: Defines the test helper class for class ProblemAssetRegulation
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute topic to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property topic to value topic
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-topic does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute justification to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property justification to value justification
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-justification does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute description to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property description to value description
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-description does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute opinionBpmPo to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property opinionBpmPo to value opinionBpmPo
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-opinionBpmPo does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute crossLinkBpmPo to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property crossLinkBpmPo to value crossLinkBpmPo
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTestHelper.java :  * Purpose: Defines the test helper class for class ProjectTeamMember
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :  * Purpose: Defines test class to test the peristence of class ProjectTeamMember
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTestHelper.java :  * Purpose: Defines the test helper class for class ProjectRoles
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :  * Test case class to test the persistence of ProjectTeamMember
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :  * Purpose: Defines test class to test the peristence of class ProjectRoles
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :  * Test case class to test the persistence of ProjectRoles
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :     * Test object delete. Create a <Code>ProjectTeamMember</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :     * Test function getProjectTeamMemberList. Create multiple <Code>ProjectTeamMember</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :     * Query all intances by DAO's <tt>doGetProjectTeamMemberList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       // Create multiple ProjectTeamMember instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :     * Test object delete. Create a <Code>ProjectRoles</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :     * Test function getProjectRolesList. Create multiple <Code>ProjectRoles</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :     * Query all intances by DAO's <tt>doGetProjectRolesList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       ProblemAssetRegulation another = dao.load(problemAssetRegulation.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       // Create multiple ProjectRoles instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       ProjectTeamMember anotherProjectTeamMember = dao.load(projectTeamMember.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       assertEquals("Queried result does not equal to updated instance", problemAssetRegulation, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :          projectTeamMember, anotherProjectTeamMember);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       ProblemAssetRegulationTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       ProjectTeamMemberTestHelper.delete(anotherProjectTeamMember);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       ProjectTeamMember another = dao.load(projectTeamMember.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       assertEquals("Queried result does not equal to updated instance", projectTeamMember, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       ProjectRoles anotherProjectRoles = dao.load(projectRoles.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       ProjectTeamMemberTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :          projectRoles, anotherProjectRoles);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       ProjectRolesTestHelper.delete(anotherProjectRoles);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       ProjectTeamMember another = dao.load(projectTeamMember.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :             ProjectTeamMember another = ProjectTeamMemberTestHelper.getProjectTeamMemberByPk(resultFound, projectTeamMember.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :             assertEquals("Result returned by get-projectTeamMember-list does not equal to inserted projectTeamMember object.", projectTeamMember, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :             ProjectTeamMemberTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :  * Purpose: Defines test class to test the peristence of class RefLegReqService
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :  * Test case class to test the persistence of RefLegReqService
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * Test object delete. Create a <Code>RefLegReqService</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * their attribute <Code>serviceID</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * by DAO's <tt>findByServiceID</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :      // Create RefLegReqService instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * their attribute <Code>complexityMode</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * by DAO's <tt>findByComplexityMode</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :      // Create RefLegReqService instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * Test function getRefLegReqServiceList. Create multiple <Code>RefLegReqService</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * Query all intances by DAO's <tt>doGetRefLegReqServiceList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       // Create multiple RefLegReqService instance and insert them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-crossLinkBpmPo does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute caseKeyBpmPo to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property caseKeyBpmPo to value caseKeyBpmPo
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-caseKeyBpmPo does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute casePerformerBpmPo to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTestHelper.java :  * Purpose: Defines the test helper class for class RefLegReqService
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property casePerformerBpmPo to value casePerformerBpmPo
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-casePerformerBpmPo does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * and set their attribute crossLinkECM to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :       // Create instances and set their property crossLinkECM to value crossLinkECM
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by find-by-crossLinkECM does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       RefLegReqService anotherRefLegReqService = dao.load(refLegReqService.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :          refLegReqService, anotherRefLegReqService);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       RefLegReqServiceTestHelper.delete(anotherRefLegReqService);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       ProblemAssetRegulation another = dao.load(problemAssetRegulation.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :             ProblemAssetRegulation another = ProblemAssetRegulationTestHelper.getProblemAssetRegulationByPk(resultFound, problemAssetRegulation.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :             assertEquals("Result returned by get-problemAssetRegulation-list does not equal to inserted problemAssetRegulation object.", problemAssetRegulation, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :             ProblemAssetRegulationTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       RefLegReqService another = dao.load(refLegReqService.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       assertEquals("Queried result does not equal to updated instance", refLegReqService, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       RefLegReqServiceTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       RefLegReqService another = dao.load(refLegReqService.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * and set their attribute serviceID to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       // Create instances and set their property serviceID to value serviceID
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             RefLegReqService another = RefLegReqServiceTestHelper.getRefLegReqServiceByPk(resultFound, refLegReqService.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             assertEquals("Result returned by find-by-serviceID does not equal to inserted refLegReqService object.", refLegReqService, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             RefLegReqServiceTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * and set their attribute complexityMode to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :       // Create instances and set their property complexityMode to value complexityMode
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             RefLegReqService another = RefLegReqServiceTestHelper.getRefLegReqServiceByPk(resultFound, refLegReqService.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             assertEquals("Result returned by find-by-complexityMode does not equal to inserted refLegReqService object.", refLegReqService, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             RefLegReqServiceTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       ProjectRoles another = dao.load(projectRoles.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       assertEquals("Queried result does not equal to updated instance", projectRoles, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       ProjectRolesTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             RefLegReqService another = RefLegReqServiceTestHelper.getRefLegReqServiceByPk(resultFound, refLegReqService.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       ProjectRoles another = dao.load(projectRoles.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             assertEquals("Result returned by get-refLegReqService-list does not equal to inserted refLegReqService object.", refLegReqService, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :             RefLegReqServiceTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegReqServiceTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :             ProjectRoles another = ProjectRolesTestHelper.getProjectRolesByPk(resultFound, projectRoles.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :             assertEquals("Result returned by get-projectRoles-list does not equal to inserted projectRoles object.", projectRoles, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :             ProjectRolesTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ProjectRolesTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :  * Purpose: Defines test class to test the peristence of class RefLegRequestComplexity
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :  * Test case class to test the persistence of RefLegRequestComplexity
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTestHelper.java :  * Purpose: Defines the test helper class for class RefLegRequestComplexity
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :     * Test object delete. Create a <Code>RefLegRequestComplexity</Code> instance and save it into database. Delete the 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :     * Test function getRefLegRequestComplexityList. Create multiple <Code>RefLegRequestComplexity</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :     * Query all intances by DAO's <tt>doGetRefLegRequestComplexityList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       // Create multiple RefLegRequestComplexity instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       RefLegRequestComplexity anotherRefLegRequestComplexity = dao.load(refLegRequestComplexity.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :          refLegRequestComplexity, anotherRefLegRequestComplexity);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       RefLegRequestComplexityTestHelper.delete(anotherRefLegRequestComplexity);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       RefLegRequestComplexity another = dao.load(refLegRequestComplexity.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       assertEquals("Queried result does not equal to updated instance", refLegRequestComplexity, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       RefLegRequestComplexityTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       RefLegRequestComplexity another = dao.load(refLegRequestComplexity.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTestHelper.java :  * Purpose: Defines the test helper class for class RefLegRequestPriority
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :  * Purpose: Defines test class to test the peristence of class RefLegRequestPriority
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :  * Test case class to test the persistence of RefLegRequestPriority
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :     * Test object delete. Create a <Code>RefLegRequestPriority</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :     * Test function getRefLegRequestPriorityList. Create multiple <Code>RefLegRequestPriority</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :     * Query all intances by DAO's <tt>doGetRefLegRequestPriorityList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       // Create multiple RefLegRequestPriority instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       RefLegRequestPriority anotherRefLegRequestPriority = dao.load(refLegRequestPriority.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :          refLegRequestPriority, anotherRefLegRequestPriority);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       RefLegRequestPriorityTestHelper.delete(anotherRefLegRequestPriority);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTestHelper.java :  * Purpose: Defines the test helper class for class RefLegRequestCategory
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequest another = LegalRequestTestHelper.getLegalRequestByPk(resultFound, legalRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             assertEquals("Result returned by get-legalRequest-list does not equal to inserted legalRequest object.", legalRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :             LegalRequestTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :  * Purpose: Defines test class to test the peristence of class RefLegRequestCategory
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :  * Test case class to test the persistence of RefLegRequestCategory
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :     * Test object delete. Create a <Code>RefLegRequestCategory</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :     * Test function getRefLegRequestCategoryList. Create multiple <Code>RefLegRequestCategory</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :     * Query all intances by DAO's <tt>doGetRefLegRequestCategoryList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       // Create multiple RefLegRequestCategory instance and insert them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\LegalRequestTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       RefLegRequestCategory anotherRefLegRequestCategory = dao.load(refLegRequestCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :          refLegRequestCategory, anotherRefLegRequestCategory);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       RefLegRequestCategoryTestHelper.delete(anotherRefLegRequestCategory);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       RefLegRequestCategory another = dao.load(refLegRequestCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       assertEquals("Queried result does not equal to updated instance", refLegRequestCategory, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       RefLegRequestCategoryTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :  * Purpose: Defines test class to test the peristence of class RefLegRequestSubType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :  * Test case class to test the persistence of RefLegRequestSubType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :     * Test object delete. Create a <Code>RefLegRequestSubType</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :     * Test function getRefLegRequestSubTypeList. Create multiple <Code>RefLegRequestSubType</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :     * Query all intances by DAO's <tt>doGetRefLegRequestSubTypeList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       // Create multiple RefLegRequestSubType instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       RefLegRequestSubType anotherRefLegRequestSubType = dao.load(refLegRequestSubType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :          refLegRequestSubType, anotherRefLegRequestSubType);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       RefLegRequestSubTypeTestHelper.delete(anotherRefLegRequestSubType);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       RefLegRequestCategory another = dao.load(refLegRequestCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       RefLegRequestSubType another = dao.load(refLegRequestSubType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       assertEquals("Queried result does not equal to updated instance", refLegRequestSubType, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       RefLegRequestSubTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :             RefLegRequestCategory another = RefLegRequestCategoryTestHelper.getRefLegRequestCategoryByPk(resultFound, refLegRequestCategory.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :             assertEquals("Result returned by get-refLegRequestCategory-list does not equal to inserted refLegRequestCategory object.", refLegRequestCategory, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :             RefLegRequestCategoryTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       RefLegRequestSubType another = dao.load(refLegRequestSubType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :             RefLegRequestSubType another = RefLegRequestSubTypeTestHelper.getRefLegRequestSubTypeByPk(resultFound, refLegRequestSubType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :             assertEquals("Result returned by get-refLegRequestSubType-list does not equal to inserted refLegRequestSubType object.", refLegRequestSubType, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :             RefLegRequestSubTypeTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTestHelper.java :  * Purpose: Defines the test helper class for class RefLegRequestSubject
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :  * Purpose: Defines test class to test the peristence of class RefLegRequestSubject
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :  * Test case class to test the persistence of RefLegRequestSubject
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :     * Test object delete. Create a <Code>RefLegRequestSubject</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :     * Test function getRefLegRequestSubjectList. Create multiple <Code>RefLegRequestSubject</Code> instances and save them into database.  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :     * Query all intances by DAO's <tt>doGetRefLegRequestSubjectList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       // Create multiple RefLegRequestSubject instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       RefLegRequestSubject anotherRefLegRequestSubject = dao.load(refLegRequestSubject.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       RefLegRequestPriority another = dao.load(refLegRequestPriority.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       assertEquals("Queried result does not equal to updated instance", refLegRequestPriority, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       RefLegRequestPriorityTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :             RefLegRequestComplexity another = RefLegRequestComplexityTestHelper.getRefLegRequestComplexityByPk(resultFound, refLegRequestComplexity.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :             assertEquals("Result returned by get-refLegRequestComplexity-list does not equal to inserted refLegRequestComplexity object.", refLegRequestComplexity, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :             RefLegRequestComplexityTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :  * Purpose: Defines test class to test the peristence of class RefLegRequestType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :  * Test case class to test the persistence of RefLegRequestType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       RefLegRequestPriority another = dao.load(refLegRequestPriority.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTestHelper.java :  * Purpose: Defines the test helper class for class RefLegRequestType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :     * Test object delete. Create a <Code>RefLegRequestType</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :     * Test function getRefLegRequestTypeList. Create multiple <Code>RefLegRequestType</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :     * Query all intances by DAO's <tt>doGetRefLegRequestTypeList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :             RefLegRequestPriority another = RefLegRequestPriorityTestHelper.getRefLegRequestPriorityByPk(resultFound, refLegRequestPriority.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       // Create multiple RefLegRequestType instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :             assertEquals("Result returned by get-refLegRequestPriority-list does not equal to inserted refLegRequestPriority object.", refLegRequestPriority, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :             RefLegRequestPriorityTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       RefLegRequestType anotherRefLegRequestType = dao.load(refLegRequestType.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :          refLegRequestType, anotherRefLegRequestType);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       RefLegRequestTypeTestHelper.delete(anotherRefLegRequestType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :  * Purpose: Defines test class to test the peristence of class RefRegTaskState
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       RefLegRequestType another = dao.load(refLegRequestType.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       assertEquals("Queried result does not equal to updated instance", refLegRequestType, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       RefLegRequestTypeTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :  * Test case class to test the persistence of RefRegTaskState
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :          refLegRequestSubject, anotherRefLegRequestSubject);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       RefLegRequestSubjectTestHelper.delete(anotherRefLegRequestSubject);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTestHelper.java :  * Purpose: Defines the test helper class for class RefLegRequestSubType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       RefLegRequestSubject another = dao.load(refLegRequestSubject.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       assertEquals("Queried result does not equal to updated instance", refLegRequestSubject, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       RefLegRequestSubjectTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       RefLegRequestSubject another = dao.load(refLegRequestSubject.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :             RefLegRequestSubject another = RefLegRequestSubjectTestHelper.getRefLegRequestSubjectByPk(resultFound, refLegRequestSubject.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :             assertEquals("Result returned by get-refLegRequestSubject-list does not equal to inserted refLegRequestSubject object.", refLegRequestSubject, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :             RefLegRequestSubjectTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       RefLegRequestType another = dao.load(refLegRequestType.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :             RefLegRequestType another = RefLegRequestTypeTestHelper.getRefLegRequestTypeByPk(resultFound, refLegRequestType.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :             assertEquals("Result returned by get-refLegRequestType-list does not equal to inserted refLegRequestType object.", refLegRequestType, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :             RefLegRequestTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTestHelper.java :  * Purpose: Defines the test helper class for class RefRegTaskState
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :  * Purpose: Defines test class to test the peristence of class RefReqSpecDep
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :  * Test case class to test the persistence of RefReqSpecDep
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :     * Test object delete. Create a <Code>RefReqSpecDep</Code> instance and save it into database. Delete the 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :     * Test function getRefReqSpecDepList. Create multiple <Code>RefReqSpecDep</Code> instances and save them into database.  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :     * Query all intances by DAO's <tt>doGetRefReqSpecDepList</tt> method. Verify if the method can find all 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       // Create multiple RefReqSpecDep instance and insert them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       RefReqSpecDep anotherRefReqSpecDep = dao.load(refReqSpecDep.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :          refReqSpecDep, anotherRefReqSpecDep);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       RefReqSpecDepTestHelper.delete(anotherRefReqSpecDep);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       RefReqSpecDep another = dao.load(refReqSpecDep.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       assertEquals("Queried result does not equal to updated instance", refReqSpecDep, another);  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       RefReqSpecDepTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       RefReqSpecDep another = dao.load(refReqSpecDep.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :       assertNull("Inserted instance is not deleted", another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :     * save them into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :             RefReqSpecDep another = RefReqSpecDepTestHelper.getRefReqSpecDepByPk(resultFound, refReqSpecDep.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :             assertEquals("Result returned by get-refReqSpecDep-list does not equal to inserted refReqSpecDep object.", refReqSpecDep, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :             RefReqSpecDepTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :     * been saved. Save the instance in the end.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTestHelper.java :  * Purpose: Defines the test helper class for class RefReqSpecDep
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :  * Purpose: Defines test class to test the peristence of class RefReqSpecDepType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :     * Test object delete. Create a <Code>RefRegTaskState</Code> instance and save it into database. Delete the 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTestHelper.java :  * Purpose: Defines the test helper class for class RefReqSpecDepType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :  * Purpose: Defines test class to test the peristence of class RefReqStatusBpmPoUPV
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTestHelper.java :  * Purpose: Defines the test helper class for class RefReqStatusBpmPoUPV
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :  * Purpose: Defines test class to test the peristence of class RefReqStatusesBpmPo
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :  * Test case class to test the persistence of RefReqStatusesBpmPo
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :     * Test object delete. Create a <Code>RefReqStatusesBpmPo</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :     * Test function getRefReqStatusesBpmPoList. Create multiple <Code>RefReqStatusesBpmPo</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :     * Query all intances by DAO's <tt>doGetRefReqStatusesBpmPoList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       // Create multiple RefReqStatusesBpmPo instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       RefReqStatusesBpmPo anotherRefReqStatusesBpmPo = dao.load(refReqStatusesBpmPo.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :          refReqStatusesBpmPo, anotherRefReqStatusesBpmPo);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       RefReqStatusesBpmPoTestHelper.delete(anotherRefReqStatusesBpmPo);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       RefReqStatusesBpmPo another = dao.load(refReqStatusesBpmPo.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       assertEquals("Queried result does not equal to updated instance", refReqStatusesBpmPo, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       RefReqStatusesBpmPoTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       RefReqStatusesBpmPo another = dao.load(refReqStatusesBpmPo.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :             RefReqStatusesBpmPo another = RefReqStatusesBpmPoTestHelper.getRefReqStatusesBpmPoByPk(resultFound, refReqStatusesBpmPo.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :             assertEquals("Result returned by get-refReqStatusesBpmPo-list does not equal to inserted refReqStatusesBpmPo object.", refReqStatusesBpmPo, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :             RefReqStatusesBpmPoTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :     * been saved. Save the instance in the end.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTestHelper.java :  * Purpose: Defines the test helper class for class RefReqStatusesBpmPo
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :     * Test function getRefRegTaskStateList. Create multiple <Code>RefRegTaskState</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :     * Query all intances by DAO's <tt>doGetRefRegTaskStateList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       // Create multiple RefRegTaskState instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       RefRegTaskState anotherRefRegTaskState = dao.load(refRegTaskState.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :          refRegTaskState, anotherRefRegTaskState);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       RefRegTaskStateTestHelper.delete(anotherRefRegTaskState);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       RefRegTaskState another = dao.load(refRegTaskState.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       assertEquals("Queried result does not equal to updated instance", refRegTaskState, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       RefRegTaskStateTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :  * Purpose: Defines test class to test the peristence of class RegPlanBlock
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :  * Test case class to test the persistence of RegPlanBlock
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * Test object delete. Create a <Code>RegPlanBlock</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       RefRegTaskState another = dao.load(refRegTaskState.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :       assertNull("Inserted instance is not deleted", another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * their attribute <Code>name</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * by DAO's <tt>findByName</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :      // Create RegPlanBlock instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * their attribute <Code>case_key</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * by DAO's <tt>findByCase_key</tt> method. Verify if the method can find all instances saved before.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :      // Create RegPlanBlock instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * their attribute <Code>description</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * by DAO's <tt>findByDescription</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :             RefRegTaskState another = RefRegTaskStateTestHelper.getRefRegTaskStateByPk(resultFound, refRegTaskState.getAbstractReferencePK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :      // Create RegPlanBlock instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :             assertEquals("Result returned by get-refRegTaskState-list does not equal to inserted refRegTaskState object.", refRegTaskState, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :             RefRegTaskStateTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * their attribute <Code>partyID</Code> to specified value. Save these instances into database and query them 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * by DAO's <tt>findByPartyID</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :      // Create RegPlanBlock instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefRegTaskStateTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * Test function getRegPlanBlockList. Create multiple <Code>RegPlanBlock</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * Query all intances by DAO's <tt>doGetRegPlanBlockList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       // Create multiple RegPlanBlock instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTestHelper.java :  * Purpose: Defines the test helper class for class RegPlanBlock
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :  * Test case class to test the persistence of RefReqSpecDepType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.java :     * Delete the instance from database if instance with the same primary key as specified 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       RegPlanBlock anotherRegPlanBlock = dao.load(regPlanBlock.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :          regPlanBlock, anotherRegPlanBlock);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       RegPlanBlockTestHelper.delete(anotherRegPlanBlock);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       RegPlanBlock another = dao.load(regPlanBlock.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       assertEquals("Queried result does not equal to updated instance", regPlanBlock, another);  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       RegPlanBlockTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       RegPlanBlock another = dao.load(regPlanBlock.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :  * Test case class to test the persistence of RefReqStatusBpmPoUPV
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :  * Purpose: Defines test class to test the peristence of class RegPlanBlockType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * Test object delete. Create a <Code>RefReqStatusBpmPoUPV</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :  * Test case class to test the persistence of RegPlanBlockType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * their attribute <Code>statusUPV</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * by DAO's <tt>findByStatusUPV</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :      // Create RefReqStatusBpmPoUPV instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * Test function getRefReqStatusBpmPoUPVList. Create multiple <Code>RefReqStatusBpmPoUPV</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * Query all intances by DAO's <tt>doGetRefReqStatusBpmPoUPVList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :     * Test object delete. Create a <Code>RegPlanBlockType</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       // Create multiple RefReqStatusBpmPoUPV instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :     * Test function getRegPlanBlockTypeList. Create multiple <Code>RegPlanBlockType</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :     * Query all intances by DAO's <tt>doGetRegPlanBlockTypeList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       RefReqStatusBpmPoUPV anotherRefReqStatusBpmPoUPV = dao.load(refReqStatusBpmPoUPV.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :          refReqStatusBpmPoUPV, anotherRefReqStatusBpmPoUPV);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       // Create multiple RegPlanBlockType instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       RefReqStatusBpmPoUPVTestHelper.delete(anotherRefReqStatusBpmPoUPV);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTestHelper.java :  * Purpose: Defines the test helper class for class RegPlanBlockType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       RegPlanBlockType anotherRegPlanBlockType = dao.load(regPlanBlockType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :          regPlanBlockType, anotherRegPlanBlockType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       RegPlanBlockTypeTestHelper.delete(anotherRegPlanBlockType);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       RegPlanBlockType another = dao.load(regPlanBlockType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       assertEquals("Queried result does not equal to updated instance", regPlanBlockType, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       RegPlanBlockTypeTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       RefReqStatusBpmPoUPV another = dao.load(refReqStatusBpmPoUPV.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       assertEquals("Queried result does not equal to updated instance", refReqStatusBpmPoUPV, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       RefReqStatusBpmPoUPVTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       RefReqStatusBpmPoUPV another = dao.load(refReqStatusBpmPoUPV.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * and set their attribute statusUPV to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :  * Purpose: Defines test class to test the peristence of class RegPlanTask
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :       // Create instances and set their property statusUPV to value statusUPV
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :  * Test case class to test the persistence of RegPlanTask
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       RegPlanBlockType another = dao.load(regPlanBlockType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :             RefReqStatusBpmPoUPV another = RefReqStatusBpmPoUPVTestHelper.getRefReqStatusBpmPoUPVByPk(resultFound, refReqStatusBpmPoUPV.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :             assertEquals("Result returned by find-by-statusUPV does not equal to inserted refReqStatusBpmPoUPV object.", refReqStatusBpmPoUPV, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :             RefReqStatusBpmPoUPVTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * save them into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * and set their attribute name to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       // Create instances and set their property name to value name
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :     * Test object delete. Create a <Code>RefReqSpecDepType</Code> instance and save it into database. Delete the 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlock another = RegPlanBlockTestHelper.getRegPlanBlockByPk(resultFound, regPlanBlock.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             assertEquals("Result returned by find-by-name does not equal to inserted regPlanBlock object.", regPlanBlock, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :     * Test function getRefReqSpecDepTypeList. Create multiple <Code>RefReqSpecDepType</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlockTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :     * Query all intances by DAO's <tt>doGetRefReqSpecDepTypeList</tt> method. Verify if the method can find all 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * and set their attribute case_key to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       // Create multiple RefReqSpecDepType instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       // Create instances and set their property case_key to value case_key
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       RefReqSpecDepType anotherRefReqSpecDepType = dao.load(refReqSpecDepType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :          refReqSpecDepType, anotherRefReqSpecDepType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       RefReqSpecDepTypeTestHelper.delete(anotherRefReqSpecDepType);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       RefReqSpecDepType another = dao.load(refReqSpecDepType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       assertEquals("Queried result does not equal to updated instance", refReqSpecDepType, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       RefReqSpecDepTypeTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlock another = RegPlanBlockTestHelper.getRegPlanBlockByPk(resultFound, regPlanBlock.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             assertEquals("Result returned by find-by-case_key does not equal to inserted regPlanBlock object.", regPlanBlock, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlockTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * and set their attribute description to specified value. Save these instances into database.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       // Create instances and set their property description to value description
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlock another = RegPlanBlockTestHelper.getRegPlanBlockByPk(resultFound, regPlanBlock.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             assertEquals("Result returned by find-by-description does not equal to inserted regPlanBlock object.", regPlanBlock, another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlockTestHelper.delete(another);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * and set their attribute partyID to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       RefReqSpecDepType another = dao.load(refReqSpecDepType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :       assertNull("Inserted instance is not deleted", another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :     * save them into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :             RefReqSpecDepType another = RefReqSpecDepTypeTestHelper.getRefReqSpecDepTypeByPk(resultFound, refReqSpecDepType.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :             assertEquals("Result returned by get-refReqSpecDepType-list does not equal to inserted refReqSpecDepType object.", refReqSpecDepType, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :             RefReqSpecDepTypeTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :     * been saved. Save the instance in the end.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :  * Purpose: Defines test class to test the peristence of class RegTaskTemplate
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :  * Test case class to test the persistence of RegTaskTemplate
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * Test object delete. Create a <Code>RegTaskTemplate</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * their attribute <Code>subject</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * by DAO's <tt>findBySubject</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :      // Create RegTaskTemplate instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * their attribute <Code>duration</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * by DAO's <tt>findByDuration</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :      // Create RegTaskTemplate instances and save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :             RegPlanBlockType another = RegPlanBlockTypeTestHelper.getRegPlanBlockTypeByPk(resultFound, regPlanBlockType.getAbstractReferencePK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :             assertEquals("Result returned by get-regPlanBlockType-list does not equal to inserted regPlanBlockType object.", regPlanBlockType, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :             RegPlanBlockTypeTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTestHelper.java :  * Purpose: Defines the test helper class for class RegTaskTemplate
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :  * Purpose: Defines test class to test the peristence of class RegulationPlan
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :  * Test case class to test the persistence of RegulationPlan
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :     * Test object delete. Create a <Code>RegulationPlan</Code> instance and save it into database. Delete the 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :     * Test function getRegulationPlanList. Create multiple <Code>RegulationPlan</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :     * Query all intances by DAO's <tt>doGetRegulationPlanList</tt> method. Verify if the method can find all 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       // Create multiple RegulationPlan instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       RegulationPlan anotherRegulationPlan = dao.load(regulationPlan.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :          regulationPlan, anotherRegulationPlan);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       RegulationPlanTestHelper.delete(anotherRegulationPlan);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       RegulationPlan another = dao.load(regulationPlan.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       assertEquals("Queried result does not equal to updated instance", regulationPlan, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       RegulationPlanTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       RegulationPlan another = dao.load(regulationPlan.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :             RegulationPlan another = RegulationPlanTestHelper.getRegulationPlanByPk(resultFound, regulationPlan.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :             assertEquals("Result returned by get-regulationPlan-list does not equal to inserted regulationPlan object.", regulationPlan, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :             RegulationPlanTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :     * been saved. Save the instance in the end.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTest.java :     * Delete the instance from database if instance with the same primary key as specified 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationPlanTestHelper.java :  * Purpose: Defines the test helper class for class RegulationPlan
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :             RefReqStatusBpmPoUPV another = RefReqStatusBpmPoUPVTestHelper.getRefReqStatusBpmPoUPVByPk(resultFound, refReqStatusBpmPoUPV.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :             assertEquals("Result returned by get-refReqStatusBpmPoUPV-list does not equal to inserted refReqStatusBpmPoUPV object.", refReqStatusBpmPoUPV, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :             RefReqStatusBpmPoUPVTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTestHelper.java :  * Purpose: Defines the test helper class for class RegPlanTask
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * Test object delete. Create a <Code>RegPlanTask</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>description</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findByDescription</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>dateStart</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findByDateStart</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>dateEnd</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findByDateEnd</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :  * Purpose: Defines test class to test the peristence of class RegulationTool
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>subject</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findBySubject</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :  * Test case class to test the persistence of RegulationTool
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTestHelper.java :  * Purpose: Defines the test helper class for class RegulationTool
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>duration</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findByDuration</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :       // Create instances and set their property partyID to value partyID
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * Test function getRegTaskTemplateList. Create multiple <Code>RegTaskTemplate</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlock another = RegPlanBlockTestHelper.getRegPlanBlockByPk(resultFound, regPlanBlock.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * Query all intances by DAO's <tt>doGetRegTaskTemplateList</tt> method. Verify if the method can find all 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>datePerform</Code> to specified value. Save these instances into database and query them 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             assertEquals("Result returned by find-by-partyID does not equal to inserted regPlanBlock object.", regPlanBlock, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findByDatePerform</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       // Create multiple RegTaskTemplate instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlockTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>dateCreate</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findByDateCreate</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :  * Purpose: Defines test class to test the peristence of class Scenario
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :  * Test case class to test the persistence of Scenario
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * Test object delete. Create a <Code>Scenario</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>case_ID</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByCase_ID</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>caseName</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByCaseName</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>statusWork</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByStatusWork</tt> method. Verify if the method can find all instances saved before.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTestHelper.java :  * Purpose: Defines the test helper class for class Scenario
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>caseOwner</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByCaseOwner</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>createDateTime</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByCreateDateTime</tt> method. Verify if the method can find all instances saved before.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :  * Purpose: Defines test class to test the peristence of class SpecDepRequest
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>case_key</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByCase_key</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :  * Test case class to test the persistence of SpecDepRequest
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>casePerformer</Code> to specified value. Save these instances into database and query them 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByCasePerformer</tt> method. Verify if the method can find all instances saved before.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * Test object delete. Create a <Code>SpecDepRequest</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * Test function getSpecDepRequestList. Create multiple <Code>SpecDepRequest</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * their attribute <Code>caseInitiator</Code> to specified value. Save these instances into database and query them 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * Query all intances by DAO's <tt>doGetSpecDepRequestList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * by DAO's <tt>findByCaseInitiator</tt> method. Verify if the method can find all instances saved before.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * Test object delete. Create a <Code>RegulationTool</Code> instance and save it into database. Delete the 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       // Create multiple SpecDepRequest instance and insert them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * Test function getRegulationToolList. Create multiple <Code>RegulationTool</Code> instances and save them into database.  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * Query all intances by DAO's <tt>doGetRegulationToolList</tt> method. Verify if the method can find all 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTestHelper.java :  * Purpose: Defines the test helper class for class SpecDepRequest
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * and its subclasses. Save them into database and query all <Code>SpecDepRequest</Code> instances from 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       // Create multiple RegulationTool instance and insert them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       // Create instances of SpecDepRequest and its subclasses. Save them into database
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * and its subclasses. Save them into database and query all <Code>RegulationTool</Code> instances from 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       // Create instances of RegulationTool and its subclasses. Save them into database
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       SpecDepRequest anotherSpecDepRequest = dao.load(specDepRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :          specDepRequest, anotherSpecDepRequest);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       SpecDepRequestTestHelper.delete(anotherSpecDepRequest);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       RegulationTool anotherRegulationTool = dao.load(regulationTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :          regulationTool, anotherRegulationTool);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       RegulationToolTestHelper.delete(anotherRegulationTool);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       SpecDepRequest another = dao.load(specDepRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       assertEquals("Queried result does not equal to updated instance", specDepRequest, another);  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       SpecDepRequestTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       RegulationTool another = dao.load(regulationTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       assertEquals("Queried result does not equal to updated instance", regulationTool, another);  
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       RegulationToolTestHelper.delete(another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       RegulationTool another = dao.load(regulationTool.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       SpecDepRequest another = dao.load(specDepRequest.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :       assertNull("Inserted instance is not deleted", another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :      // Create Scenario instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * Test function getScenarioList. Create multiple <Code>Scenario</Code> instances and save them into database.  
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlock another = RegPlanBlockTestHelper.getRegPlanBlockByPk(resultFound, regPlanBlock.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * Query all intances by DAO's <tt>doGetScenarioList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create multiple Scenario instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and its subclasses. Save them into database and query all <Code>Scenario</Code> instances from 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances of Scenario and its subclasses. Save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * their attribute <Code>shortDescription</Code> to specified value. Save these instances into database and query them 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * by DAO's <tt>findByShortDescription</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :      // Create RegPlanTask instances and save them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       Scenario anotherScenario = dao.load(scenario.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * Test function getRegPlanTaskList. Create multiple <Code>RegPlanTask</Code> instances and save them into database.  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :          scenario, anotherScenario);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * Query all intances by DAO's <tt>doGetRegPlanTaskList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       ScenarioTestHelper.delete(anotherScenario);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create multiple RegPlanTask instance and insert them into database
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             assertEquals("Result returned by get-regPlanBlock-list does not equal to inserted regPlanBlock object.", regPlanBlock, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       Scenario another = dao.load(scenario.getAbstractEntityPK());
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :             RegPlanBlockTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       assertEquals("Queried result does not equal to updated instance", scenario, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       ScenarioTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       RegPlanTask anotherRegPlanTask = dao.load(regPlanTask.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :          regPlanTask, anotherRegPlanTask);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       RegPlanTaskTestHelper.delete(anotherRegPlanTask);
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanBlockTest.java :     * Delete the instance from database if instance with the same primary key as specified 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       RegPlanTask another = dao.load(regPlanTask.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       assertEquals("Queried result does not equal to updated instance", regPlanTask, another);  
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       RegPlanTaskTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       RegPlanTask another = dao.load(regPlanTask.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute description to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       Scenario another = dao.load(scenario.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute case_ID to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       RegTaskTemplate anotherRegTaskTemplate = dao.load(regTaskTemplate.getAbstractReferencePK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :  * Purpose: Defines test class to test the peristence of class Stage
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property description to value description
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :          regTaskTemplate, anotherRegTaskTemplate);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       RegTaskTemplateTestHelper.delete(anotherRegTaskTemplate);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :  * Test case class to test the persistence of Stage
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-description does not equal to inserted regPlanTask object.", regPlanTask, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute dateStart to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * Test object delete. Create a <Code>Stage</Code> instance and save it into database. Delete the 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property dateStart to value dateStart
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       RegTaskTemplate another = dao.load(regTaskTemplate.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       assertEquals("Queried result does not equal to updated instance", regTaskTemplate, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * their attribute <Code>stageWorkStatus</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       RegTaskTemplateTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * by DAO's <tt>findByStageWorkStatus</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :      // Create Stage instances and save them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-dateStart does not equal to inserted regPlanTask object.", regPlanTask, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       RegTaskTemplate another = dao.load(regTaskTemplate.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute dateEnd to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * and set their attribute subject to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * their attribute <Code>stageType</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * by DAO's <tt>findByStageType</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property dateEnd to value dateEnd
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       // Create instances and set their property subject to value subject
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :      // Create Stage instances and save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * their attribute <Code>stageName</Code> to specified value. Save these instances into database and query them 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * by DAO's <tt>findByStageName</tt> method. Verify if the method can find all instances saved before.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :      // Create Stage instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             RegTaskTemplate another = RegTaskTemplateTestHelper.getRegTaskTemplateByPk(resultFound, regTaskTemplate.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-dateEnd does not equal to inserted regPlanTask object.", regPlanTask, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * Test function getStageList. Create multiple <Code>Stage</Code> instances and save them into database.  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             assertEquals("Result returned by find-by-subject does not equal to inserted regTaskTemplate object.", regTaskTemplate, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * Query all intances by DAO's <tt>doGetStageList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             RegTaskTemplateTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute subject to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * and set their attribute duration to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       // Create multiple Stage instance and insert them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * and its subclasses. Save them into database and query all <Code>Stage</Code> instances from 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :       // Create instances and set their property duration to value duration
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property case_ID to value case_ID
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       // Create instances of Stage and its subclasses. Save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             RegTaskTemplate another = RegTaskTemplateTestHelper.getRegTaskTemplateByPk(resultFound, regTaskTemplate.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             assertEquals("Result returned by find-by-duration does not equal to inserted regTaskTemplate object.", regTaskTemplate, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             RegTaskTemplateTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property subject to value subject
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-case_ID does not equal to inserted scenario object.", scenario, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute caseName to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property caseName to value caseName
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-subject does not equal to inserted regPlanTask object.", regPlanTask, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       Stage anotherStage = dao.load(stage.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :          stage, anotherStage);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       StageTestHelper.delete(anotherStage);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute duration to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property duration to value duration
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTestHelper.java :  * Purpose: Defines the test helper class for class Stage
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       Stage another = dao.load(stage.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       assertEquals("Queried result does not equal to updated instance", stage, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       StageTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             RegTaskTemplate another = RegTaskTemplateTestHelper.getRegTaskTemplateByPk(resultFound, regTaskTemplate.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-caseName does not equal to inserted scenario object.", scenario, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             assertEquals("Result returned by get-regTaskTemplate-list does not equal to inserted regTaskTemplate object.", regTaskTemplate, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :             RegTaskTemplateTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute statusWork to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegTaskTemplateTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property statusWork to value statusWork
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :             SpecDepRequest another = SpecDepRequestTestHelper.getSpecDepRequestByPk(resultFound, specDepRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :             assertEquals("Result returned by get-specDepRequest-list does not equal to inserted specDepRequest object.", specDepRequest, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :             SpecDepRequestTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * subclasses. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * save them into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :          SpecDepRequest anotherSpecDepRequest  = SpecDepRequestTestHelper.getSpecDepRequestByPk(resultList, specDepRequest.getAbstractEntityPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", specDepRequest, anotherSpecDepRequest);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherSpecDepRequest)));
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :          SpecDepRequestTestHelper.delete(anotherSpecDepRequest);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-statusWork does not equal to inserted scenario object.", scenario, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\SpecDepRequestTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute caseOwner to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :  * Purpose: Defines test class to test the peristence of class Strategy
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :  * Test case class to test the persistence of Strategy
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :     * Test object delete. Create a <Code>Strategy</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property caseOwner to value caseOwner
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :     * Test function getStrategyList. Create multiple <Code>Strategy</Code> instances and save them into database.  
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :     * Query all intances by DAO's <tt>doGetStrategyList</tt> method. Verify if the method can find all 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-caseOwner does not equal to inserted scenario object.", scenario, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       // Create multiple Strategy instance and insert them into database
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute createDateTime to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       Stage another = dao.load(stage.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       assertNull("Inserted instance is not deleted", another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * and set their attribute stageWorkStatus to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-duration does not equal to inserted regPlanTask object.", regPlanTask, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       // Create instances and set their property stageWorkStatus to value stageWorkStatus
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute datePerform to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property datePerform to value datePerform
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             Stage another = StageTestHelper.getStageByPk(resultFound, stage.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             assertEquals("Result returned by find-by-stageWorkStatus does not equal to inserted stage object.", stage, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             StageTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * and set their attribute stageType to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       // Create instances and set their property stageType to value stageType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-datePerform does not equal to inserted regPlanTask object.", regPlanTask, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :  * Purpose: Defines test class to test the peristence of class Task
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute dateCreate to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             Stage another = StageTestHelper.getStageByPk(resultFound, stage.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :  * Test case class to test the persistence of Task
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             assertEquals("Result returned by find-by-stageType does not equal to inserted stage object.", stage, another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             StageTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property dateCreate to value dateCreate
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * and set their attribute stageName to specified value. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * Test object delete. Create a <Code>Task</Code> instance and save it into database. Delete the 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * their attribute <Code>createDateTime</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * by DAO's <tt>findByCreateDateTime</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :      // Create Task instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * their attribute <Code>deadlineDateTime</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * by DAO's <tt>findByDeadlineDateTime</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :      // Create Task instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * their attribute <Code>task_name</Code> to specified value. Save these instances into database and query them 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * by DAO's <tt>findByTask_name</tt> method. Verify if the method can find all instances saved before.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :      // Create Task instances and save them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * Test function getTaskList. Create multiple <Code>Task</Code> instances and save them into database.  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :       // Create instances and set their property stageName to value stageName
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * Query all intances by DAO's <tt>doGetTaskList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       // Create multiple Task instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * and its subclasses. Save them into database and query all <Code>Task</Code> instances from 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-dateCreate does not equal to inserted regPlanTask object.", regPlanTask, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       // Create instances of Task and its subclasses. Save them into database
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             Stage another = StageTestHelper.getStageByPk(resultFound, stage.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             assertEquals("Result returned by find-by-stageName does not equal to inserted stage object.", stage, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * and set their attribute shortDescription to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             StageTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * save them into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :       // Create instances and set their property shortDescription to value shortDescription
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             Stage another = StageTestHelper.getStageByPk(resultFound, stage.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             assertEquals("Result returned by get-stage-list does not equal to inserted stage object.", stage, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :             StageTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by find-by-shortDescription does not equal to inserted regPlanTask object.", regPlanTask, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * subclasses. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * save them into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTestHelper.java :  * Purpose: Defines the test helper class for class Task
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       Task anotherTask = dao.load(task.getTaskPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :          task, anotherTask);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       TaskTestHelper.delete(anotherTask);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :          Stage anotherStage  = StageTestHelper.getStageByPk(resultList, stage.getAbstractEntityPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", stage, anotherStage);
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherStage)));
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :          StageTestHelper.delete(anotherStage);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       Task another = dao.load(task.getTaskPK());
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       assertEquals("Queried result does not equal to updated instance", task, another);  
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       TaskTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTask another = RegPlanTaskTestHelper.getRegPlanTaskByPk(resultFound, regPlanTask.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             assertEquals("Result returned by get-regPlanTask-list does not equal to inserted regPlanTask object.", regPlanTask, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :             RegPlanTaskTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * been saved. Save the instance in the end.
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTestHelper.java :  * Purpose: Defines the test helper class for class Strategy
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegPlanTaskTest.java :     * Delete the instance from database if instance with the same primary key as specified 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       Strategy anotherStrategy = dao.load(strategy.getAbstractReferencePK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property createDateTime to value createDateTime
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :             RegulationTool another = RegulationToolTestHelper.getRegulationToolByPk(resultFound, regulationTool.getAbstractEntityPK());
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :             assertEquals("Result returned by get-regulationTool-list does not equal to inserted regulationTool object.", regulationTool, another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :             RegulationToolTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :          strategy, anotherStrategy);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-createDateTime does not equal to inserted scenario object.", scenario, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       StrategyTestHelper.delete(anotherStrategy);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute case_key to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property case_key to value case_key
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       Strategy another = dao.load(strategy.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       assertEquals("Queried result does not equal to updated instance", strategy, another);  
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       StrategyTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-case_key does not equal to inserted scenario object.", scenario, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute casePerformer to specified value. Save these instances into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       Strategy another = dao.load(strategy.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property casePerformer to value casePerformer
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :     * save them into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-casePerformer does not equal to inserted scenario object.", scenario, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * and set their attribute caseInitiator to specified value. Save these instances into database.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :       // Create instances and set their property caseInitiator to value caseInitiator
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :             Strategy another = StrategyTestHelper.getStrategyByPk(resultFound, strategy.getAbstractReferencePK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :             assertEquals("Result returned by get-strategy-list does not equal to inserted strategy object.", strategy, another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :             StrategyTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by find-by-caseInitiator does not equal to inserted scenario object.", scenario, another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :     * been saved. Save the instance in the end.
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * save them into database.
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StrategyTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             Scenario another = ScenarioTestHelper.getScenarioByPk(resultFound, scenario.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             assertEquals("Result returned by get-scenario-list does not equal to inserted scenario object.", scenario, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :  * Purpose: Defines test class to test the peristence of class TaskType
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :             ScenarioTestHelper.delete(another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * subclasses. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :  * Test case class to test the persistence of TaskType
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTestHelper.java :  * Purpose: Defines the test helper class for class TaskType
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       Task another = dao.load(task.getTaskPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :          Scenario anotherScenario  = ScenarioTestHelper.getScenarioByPk(resultList, scenario.getAbstractEntityPK());
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", scenario, anotherScenario);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       assertNull("Inserted instance is not deleted", another);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherScenario)));
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * and set their attribute createDateTime to specified value. Save these instances into database.
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\StageTest.java :     * Delete the instance from database if instance with the same primary key as specified 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :          ScenarioTestHelper.delete(anotherScenario);
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       // Create instances and set their property createDateTime to value createDateTime
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :     * Test object delete. Create a <Code>TaskType</Code> instance and save it into database. Delete the 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ScenarioTest.java :     * Delete the instance from database if instance with the same primary key as specified 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :     * Test function getTaskTypeList. Create multiple <Code>TaskType</Code> instances and save them into database.  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :     * Query all intances by DAO's <tt>doGetTaskTypeList</tt> method. Verify if the method can find all 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       // Create multiple TaskType instance and insert them into database
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :  * Purpose: Defines test class to test the peristence of class ToolType
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :  * Test case class to test the persistence of ToolType
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * subclasses. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :     * Test object delete. Create a <Code>ToolType</Code> instance and save it into database. Delete the 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTestHelper.java :  * Purpose: Defines the test helper class for class ToolType
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       TaskType anotherTaskType = dao.load(taskType.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :     * Test function getToolTypeList. Create multiple <Code>ToolType</Code> instances and save them into database.  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :          taskType, anotherTaskType);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :     * Query all intances by DAO's <tt>doGetToolTypeList</tt> method. Verify if the method can find all 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             Task another = TaskTestHelper.getTaskByPk(resultFound, task.getTaskPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       TaskTypeTestHelper.delete(anotherTaskType);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             assertEquals("Result returned by find-by-createDateTime does not equal to inserted task object.", task, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       // Create multiple ToolType instance and insert them into database
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             TaskTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * and set their attribute deadlineDateTime to specified value. Save these instances into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       TaskType another = dao.load(taskType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       // Create instances and set their property deadlineDateTime to value deadlineDateTime
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       assertEquals("Queried result does not equal to updated instance", taskType, another);  
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       TaskTypeTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       ToolType anotherToolType = dao.load(toolType.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :          toolType, anotherToolType);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       ToolTypeTestHelper.delete(anotherToolType);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       TaskType another = dao.load(taskType.getAbstractReferencePK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :       assertNull("Inserted instance is not deleted", another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             Task another = TaskTestHelper.getTaskByPk(resultFound, task.getTaskPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :     * save them into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             assertEquals("Result returned by find-by-deadlineDateTime does not equal to inserted task object.", task, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             TaskTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       ToolType another = dao.load(toolType.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       assertEquals("Queried result does not equal to updated instance", toolType, another);  
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * and set their attribute task_name to specified value. Save these instances into database.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       ToolTypeTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       ToolType another = dao.load(toolType.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :       assertNull("Inserted instance is not deleted", another);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :          RegulationTool anotherRegulationTool  = RegulationToolTestHelper.getRegulationToolByPk(resultList, regulationTool.getAbstractEntityPK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :     * save them into database.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", regulationTool, anotherRegulationTool);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherRegulationTool)));
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :          RegulationToolTestHelper.delete(anotherRegulationTool);
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * been saved. Save the instance in the end.
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :             ToolType another = ToolTypeTestHelper.getToolTypeByPk(resultFound, toolType.getAbstractReferencePK());
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :             assertEquals("Result returned by get-toolType-list does not equal to inserted toolType object.", toolType, another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :             ToolTypeTestHelper.delete(another);
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :       // Create instances and set their property task_name to value task_name
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\ToolTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\RegulationToolTest.java :     * Delete the instance from database if instance with the same primary key as specified 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :             TaskType another = TaskTypeTestHelper.getTaskTypeByPk(resultFound, taskType.getAbstractReferencePK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             Task another = TaskTestHelper.getTaskByPk(resultFound, task.getTaskPK());
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :             assertEquals("Result returned by get-taskType-list does not equal to inserted taskType object.", taskType, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             assertEquals("Result returned by find-by-task_name does not equal to inserted task object.", task, another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :             TaskTypeTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             TaskTestHelper.delete(another);
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * save them into database.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :     * been saved. Save the instance in the end.
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTypeTest.java :     * Delete the instance from database if instance with the same primary key as specified 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             Task another = TaskTestHelper.getTaskByPk(resultFound, task.getTaskPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             assertEquals("Result returned by get-task-list does not equal to inserted task object.", task, another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :             TaskTestHelper.delete(another);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * subclasses. Save these instances into database.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :          Task anotherTask  = TaskTestHelper.getTaskByPk(resultList, task.getTaskPK());
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :          assertEquals("Query result by " + key + " does not equal to inserted object", task, anotherTask);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :          assertTrue("Queried object is not instance of " + key, (key.isInstance(anotherTask)));
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :          TaskTestHelper.delete(anotherTask);
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * instance. Delete the instance from database if instance with the same primary key had already 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * been saved. Save the instance in the end.
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\src\test\java\ru\sbrf\uvz\model\process\TaskTest.java :     * Delete the instance from database if instance with the same primary key as specified 
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\com\sybase\orm\util\Util.class : StackMapTable s X t 	getRandom ()Ljava/util/Random; isCollectionsEquals /(Ljava/util/Collection;Ljava/util/Collection;)Z another Ljava/lang/Object; object 	iteratorB Ljava/util/Iterator; found Z collectionA Ljava/util/Collection; collectionB 	iteratorA u r isArraysEquals )([Ljava/lang/Object;[Ljava/lang/Object;)Z arrayA [Ljava/lang/Object; arrayB <clinit> 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\BankruptcyStage.class :   6 8 9 <init> ()V Code LineNumberTable LocalVariableTable this -Lru/sbrf/uvz/model/agregator/BankruptcyStage; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CaseCategory.class :   6 8 9 <init> ()V Code LineNumberTable LocalVariableTable this *Lru/sbrf/uvz/model/agregator/CaseCategory; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CaseParticipant.class : StackMapTable getX_courtCase +()Lru/sbrf/uvz/model/agregator/CBCourtCase; CBCOURTCASE_ID setX_courtCase ,(Lru/sbrf/uvz/model/agregator/CBCourtCase;)V oldCBCourtCase newCBCourtCase <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Account_91315.class : newIndex29 equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast } hashCode ()I I toString ()Ljava/lang/String; 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CaseStage.class :   6 8 9 <init> ()V Code LineNumberTable LocalVariableTable this 'Lru/sbrf/uvz/model/agregator/CaseStage; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CaseType.class :   6 8 9 <init> ()V Code LineNumberTable LocalVariableTable this &Lru/sbrf/uvz/model/agregator/CaseType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Agreement.class : insertable 	updatable length   � setAgreementNumber (Ljava/lang/String;)V newAgreementNumber equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CaseBookRef.class : EFFECTIVEFROM setEffectiveFrom newEffectiveFrom getLoadDate LOADDATE setLoadDate newLoadDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Address.class : ISMAINADDRESS setIsMainAddress newIsMainAddress getFullAddressWithoutZIP FULLADDRESSWITHOUTZIP setFullAddressWithoutZIP newFullAddressWithoutZIP equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ClientCriteriaProblem.class : newEndDate getNumberCriteriaProblem ()Ljava/lang/String; NUMBERCRITERIAPROBLEM length   @ setNumberCriteriaProblem (Ljava/lang/String;)V newNumberCriteriaProblem getNameCriteriaProblem NAMECRITERIAPROBLEM  � setNameCriteriaProblem newNameCriteriaProblem equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ClientRating.class : insertable 	updatable 	setRating (Ljava/lang/Integer;)V 	newRating getApprovalDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE APPROVALDATE setApprovalDate (Ljava/util/Date;)V newApprovalDate getPd ()Ljava/lang/String; PD length   @ setPd (Ljava/lang/String;)V newPd equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast  hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ContactOrganization.class : insertable 	updatable 	setIsMain (Ljava/lang/Boolean;)V 	newIsMain getRelation ()Ljava/lang/String; RELATION length   � setRelation (Ljava/lang/String;)V newRelation equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CBCourtCase.class : EFFECTIVEFROM setEffectiveFrom (Ljava/util/Date;)V newEffectiveFrom getEffectiveTo EFFECTIVETO setEffectiveTo newEffectiveTo getCourtName 	COURTNAME setCourtName newCourtName equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Debt.class : insertable 	updatable setCalculationDate (Ljava/util/Date;)V newCalculationDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast ] hashCode ()I I toString ()Ljava/lang/String; 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Email.class : newAddress equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\IdType.class : insertable 	updatable length   � setSystemID (Ljava/lang/String;)V newSystemID getValue VALUE setValue newValue equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Issued_For_case.class : newIndex47 equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast } hashCode ()I I toString ()Ljava/lang/String; 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\LegalEntity.class : insertable 	updatable length    setName (Ljava/lang/String;)V newName getShortname 	SHORTNAME   � setShortname newShortname getKpp KPP setKpp newKpp 	getBranch ()Ljava/lang/Boolean; BRANCH 	setBranch (Ljava/lang/Boolean;)V 	newBranch equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\KommersantEvent.class : EFFECTIVEFROM setEffectiveFrom newEffectiveFrom getEffectiveTo EFFECTIVETO setEffectiveTo newEffectiveTo equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\LegalOwner.class : insertable 	updatable length   @ setSharePerc (Ljava/lang/String;)V newSharePerc getSharePossPeriod ()Ljava/lang/Integer; SHAREPOSSPERIOD setSharePossPeriod (Ljava/lang/Integer;)V newSharePossPeriod getShareComment SHARECOMMENT  � setShareComment newShareComment equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast } hashCode ()I I toString 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Limit.class : newIndex83 equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString ()Ljava/lang/String; 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\LoanBalanceInfo.class : insertable 	updatable setSettlementDate (Ljava/util/Date;)V newSettlementDate getLoanBalance ()Ljava/math/BigDecimal; LOANBALANCE 	precision   & scale    setLoanBalance (Ljava/math/BigDecimal;)V newLoanBalance equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast x hashCode ()I I toString ()Ljava/lang/String; 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\BusinessPersonEntity.class : newIssuePlace getSerNumOfDoc SERNUMOFDOC setSerNumOfDoc newSerNumOfDoc equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Party.class : insertable 	updatable length   � setParty_ID (Ljava/lang/String;)V newParty_ID getInn INN setInn newInn equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Person.class : newBirthPlace equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Phone.class : insertable 	updatable length   � setPhoneNumber (Ljava/lang/String;)V newPhoneNumber equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ProvisionAgreement.class : insertable 	updatable setStartDate (Ljava/util/Date;)V newStartDate getSumPledgeCurrency ()Ljava/math/BigDecimal; SUMPLEDGECURRENCY 	precision   & scale    setSumPledgeCurrency (Ljava/math/BigDecimal;)V newSumPledgeCurrency 	getSumRub SUMRUB 	setSumRub 	newSumRub getCollareteralRights ()Ljava/lang/String; COLLARETERALRIGHTS length   � setCollareteralRights (Ljava/lang/String;)V newCollareteralRights getLocation LOCATION setLocation newLocation getMarketValueMarketCurrency MARKETVALUEMARKETCURRENCY setMarketValueMarketCurrency newMarketValueMarketCurrency getMarketValueRub MARKETVALUERUB setMarketValueRub newMarketValueRub getAnalyticalAccount ANALYTICALACCOUNT setAnalyticalAccount newAnalyticalAccount getPlanLoanRepaymentDate PLANLOANREPAYMENTDATE setPlanLoanRepaymentDate newPlanLoanRepaymentDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast/ hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreement.class : StackMapTable getX_creditAgreement /()Lru/sbrf/uvz/model/agregator/CreditAgreement; CREDITAGREEMENT_AGREEMENT_ID setX_creditAgreement 0(Lru/sbrf/uvz/model/agregator/CreditAgreement;)V oldCreditAgreement newCreditAgreement <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CreditAgreement.class : LASTRESTRDATE setLastRestrDate newLastRestrDate getOverdueDebtDayCount OVERDUEDEBTDAYCOUNT setOverdueDebtDayCount newOverdueDebtDayCount getOverdueInterestDayCount OVERDUEINTERESTDAYCOUNT setOverdueInterestDayCount newOverdueInterestDayCount getOverdueDaysCount OVERDUEDAYSCOUNT setOverdueDaysCount newOverdueDaysCount getIsHomoPortfolio ISHOMOPORTFOLIO setIsHomoPortfolio newIsHomoPortfolio getInterestRate INTERESTRATE setInterestRate newInterestRate getDefferedInterestRate DEFFEREDINTERESTRATE setDefferedInterestRate newDefferedInterestRate getIsTransferToBCI ISTRANSFERTOBCI setIsTransferToBCI newIsTransferToBCI getIsRefinancForDefRestruct ISREFINANCFORDEFRESTRUCT setIsRefinancForDefRestruct newIsRefinancForDefRestruct getRefinOfRestructDate REFINOFRESTRUCTDATE setRefinOfRestructDate newRefinOfRestructDate getIsRenewableCLForAccounting ISRENEWABLECLFORACCOUNTING setIsRenewableCLForAccounting newIsRenewableCLForAccounting getIsOverdraftForAccounting ISOVERDRAFTFORACCOUNTING setIsOverdraftForAccounting newIsOverdraftForAccounting getIsSuspTermsForAgr ISSUSPTERMSFORAGR setIsSuspTermsForAgr newIsSuspTermsForAgr getNextRepricingDate NEXTREPRICINGDATE setNextRepricingDate newNextRepricingDate getPrevRepricingDate PREVREPRICINGDATE setPrevRepricingDate newPrevRepricingDate 	getMargin MARGIN 	setMargin 	newMargin getRateRevisionPeriod ()Ljava/lang/String; RATEREVISIONPERIOD length   @ setRateRevisionPeriod (Ljava/lang/String;)V newRateRevisionPeriod getDateClaimNotice DATECLAIMNOTICE setDateClaimNotice newDateClaimNotice getAgrNumbRefundAdvance AGRNUMBREFUNDADVANCE   � setAgrNumbRefundAdvance newAgrNumbRefundAdvance equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast� hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\PublicationsEFRSB.class : insertable 	updatable length   @ 	setIdFile (Ljava/lang/String;)V 	newIdFile getNameFile NAMEFILE   � setNameFile newNameFile getDateNameFile ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE DATENAMEFILE setDateNameFile (Ljava/util/Date;)V newDateNameFile getNameOfOrganizFromFile NAMEOFORGANIZFROMFILE  � setNameOfOrganizFromFile newNameOfOrganizFromFile getInnFromFile INNFROMFILE setInnFromFile newInnFromFile getOgrnFromFile OGRNFROMFILE setOgrnFromFile newOgrnFromFile getTypeOfSourceFromFile ()Ljava/lang/Integer; TYPEOFSOURCEFROMFILE setTypeOfSourceFromFile (Ljava/lang/Integer;)V newTypeOfSourceFromFile getTypeOfMessageFromFile TYPEOFMESSAGEFROMFILE setTypeOfMessageFromFile newTypeOfMessageFromFile getNumberFromFile NUMBERFROMFILE setNumberFromFile newNumberFromFile getPublishDateFromFile PUBLISHDATEFROMFILE setPublishDateFromFile newPublishDateFromFile getMessageInfoFromFile MESSAGEINFOFROMFILE  � setMessageInfoFromFile newMessageInfoFromFile getCodeFromFile CODEFROMFILE setCodeFromFile newCodeFromFile getMessageDataIDFromFile MESSAGEDATAIDFROMFILE setMessageDataIDFromFile newMessageDataIDFromFile getDateIncludeFromFile DATEINCLUDEFROMFILE setDateIncludeFromFile newDateIncludeFromFile getSignOfClientOfBank ()Ljava/lang/Boolean; SIGNOFCLIENTOFBANK setSignOfClientOfBank (Ljava/lang/Boolean;)V newSignOfClientOfBank getSignOfExistOfProcess SIGNOFEXISTOFPROCESS setSignOfExistOfProcess newSignOfExistOfProcess getSignOfExistOfBankruptcy SIGNOFEXISTOFBANKRUPTCY setSignOfExistOfBankruptcy newSignOfExistOfBankruptcy equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulation.class : insertable 	updatable length    setFullDescription (Ljava/lang/String;)V newFullDescription equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceActivities.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 1Lru/sbrf/uvz/model/agregator/ReferenceActivities; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceAddressType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 2Lru/sbrf/uvz/model/agregator/ReferenceAddressType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceBankStructure.class : StackMapTable equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Contact.class : insertable 	updatable setIsPrimary (Ljava/lang/Boolean;)V newIsPrimary getIsActive ISACTIVE setIsActive newIsActive getCommentStatement ()Ljava/lang/String; COMMENTSTATEMENT length  � setCommentStatement (Ljava/lang/String;)V newCommentStatement getPosition POSITION   � setPosition newPosition equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CBArbitrationCase.class : newClaimToPay getRegistrationDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; 	TIMESTAMP REGISTRATIONDATE setRegistrationDate (Ljava/util/Date;)V newRegistrationDate getSimpleJusticeFlag ()Ljava/lang/String; SIMPLEJUSTICEFLAG length   � setSimpleJusticeFlag (Ljava/lang/String;)V newSimpleJusticeFlag equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceBankStructurePK.class :   B C D code Ljava/lang/String; <init> ()V Code LineNumberTable LocalVariableTable this 6Lru/sbrf/uvz/model/agregator/ReferenceBankStructurePK; (Ljava/lang/String;)V getCode ()Ljava/lang/String; setCode newCode equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceCountry.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this .Lru/sbrf/uvz/model/agregator/ReferenceCountry; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this >Lru/sbrf/uvz/model/agregator/ReferenceCollateralAgreementType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatus.class : insertable 	updatable length   @ 	setIdDRPA (Ljava/lang/String;)V 	newIdDRPA equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceCurrency.class : setExtuids 0(Lru/sbrf/uvz/model/core/ExtIdentityContainer;)V newExtIdentityContainer <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQuality.class : setExtuids 0(Lru/sbrf/uvz/model/core/ExtIdentityContainer;)V newExtIdentityContainer <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceEmailType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 0Lru/sbrf/uvz/model/agregator/ReferenceEmailType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceIndustry.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this /Lru/sbrf/uvz/model/agregator/ReferenceIndustry; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceLegalForm.class : insertable 	updatable length   @ setBpmPOCode (Ljava/lang/String;)V newBpmPOCode equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceLendingModeType.class : setExtuids 0(Lru/sbrf/uvz/model/core/ExtIdentityContainer;)V newExtIdentityContainer <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Client.class : removeProcess oldProblemAssetRegulation removeAllProcess getPartyInfo %()Lru/sbrf/uvz/model/agregator/Party; Ljavax/persistence/OneToOne; optional     fetch Ljavax/persistence/FetchType; EAGER PARTY_ID ID setPartyInfo &(Lru/sbrf/uvz/model/agregator/Party;)V oldParty newParty � <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatus.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 4Lru/sbrf/uvz/model/agregator/ReferenceLoanAgrStatus; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceloanType.class : setExtuids 0(Lru/sbrf/uvz/model/core/ExtIdentityContainer;)V newExtIdentityContainer <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceMISProduct.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 1Lru/sbrf/uvz/model/agregator/ReferenceMISProduct; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferencePledgeType.class : setMemberType 4(Lru/sbrf/uvz/model/agregator/ReferenceMemberType;)V newReferenceMemberType <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceProblemGroup.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 3Lru/sbrf/uvz/model/agregator/ReferenceProblemGroup; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceRateStatus.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 1Lru/sbrf/uvz/model/agregator/ReferenceRateStatus; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceResident.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this /Lru/sbrf/uvz/model/agregator/ReferenceResident; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceRegionRussia.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 3Lru/sbrf/uvz/model/agregator/ReferenceRegionRussia; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceMemberType.class : insertable 	updatable length   @ setBpmPOCode (Ljava/lang/String;)V newBpmPOCode equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceSegment.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this .Lru/sbrf/uvz/model/agregator/ReferenceSegment; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteria.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 5Lru/sbrf/uvz/model/agregator/ReferenceStatusCriteria; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceStreetType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 1Lru/sbrf/uvz/model/agregator/ReferenceStreetType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceTelephonType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 3Lru/sbrf/uvz/model/agregator/ReferenceTelephonType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKind.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this ;Lru/sbrf/uvz/model/agregator/RefIdentificationDocumentKind; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategory.class : insertable 	updatable length   @ 	setIdDRPA (Ljava/lang/String;)V 	newIdDRPA equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\CreditDebt.class : newIndex49 equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Organization.class : insertable 	updatable setRegistrationDate (Ljava/util/Date;)V newRegistrationDate getLicenceIssueDate LICENCEISSUEDATE setLicenceIssueDate newLicenceIssueDate getIfns ()Ljava/lang/String; IFNS length   � setIfns (Ljava/lang/String;)V newIfns getRegisteredBy REGISTEREDBY setRegisteredBy newRegisteredBy getOgrn OGRN setOgrn newOgrn getLiquidatEGRCode LIQUIDATEGRCODE setLiquidatEGRCode newLiquidatEGRCode getReferenceLiquidationToken REFERENCELIQUIDATIONTOKEN   @ setReferenceLiquidationToken newReferenceLiquidationToken equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\SideType.class :   6 8 9 <init> ()V Code LineNumberTable LocalVariableTable this &Lru/sbrf/uvz/model/agregator/SideType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessage.class : insertable 	updatable length   @ setMessageTypeEFRSB (Ljava/lang/String;)V newMessageTypeEFRSB getValueOfSourceType ()Ljava/lang/Integer; VALUEOFSOURCETYPE setValueOfSourceType (Ljava/lang/Integer;)V newValueOfSourceType getValueOfMessageType VALUEOFMESSAGETYPE setValueOfMessageType newValueOfMessageType equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroup.class : insertable 	updatable length   @ 	setGsz_ID (Ljava/lang/String;)V 	newGsz_ID getGsz GSZ   � setGsz newGsz equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
24 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\agregator\Reserve.class : newIndex87 getActualPercentOfReserve ACTUALPERCENTOFRESERVE setActualPercentOfReserve newActualPercentOfReserve equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast� hashCode ()I I toString ()Ljava/lang/String; 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResult.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 6Lru/sbrf/uvz/model/bankruptcy/ApplConsiderationResult; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcy.class : insertable 	updatable length   @ setInnOfApplicant (Ljava/lang/String;)V newInnOfApplicant getNameOfApplicant NAMEOFAPPLICANT    setNameOfApplicant newNameOfApplicant getDateOfFilingApplication ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE DATEOFFILINGAPPLICATION setDateOfFilingApplication (Ljava/util/Date;)V newDateOfFilingApplication !getDateOfConsiderationApplication DATEOFCONSIDERATIONAPPLICATION !setDateOfConsiderationApplication !newDateOfConsiderationApplication getBankruptcyCaseNumber BANKRUPTCYCASENUMBER setBankruptcyCaseNumber newBankruptcyCaseNumber getCourtCaseOfApplicant COURTCASEOFAPPLICANT setCourtCaseOfApplicant newCourtCaseOfApplicant getNumberCaseOfApplicant NUMBERCASEOFAPPLICANT setNumberCaseOfApplicant newNumberCaseOfApplicant getYearCaseOfApplicant ()Ljava/lang/Short; YEARCASEOFAPPLICANT setYearCaseOfApplicant (Ljava/lang/Short;)V newYearCaseOfApplicant getCommentByApplicant COMMENTBYAPPLICANT setCommentByApplicant newCommentByApplicant getIdOfCourtDecission IDOFCOURTDECISSION setIdOfCourtDecission newIdOfCourtDecission equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\AuPK.class :   B C D code Ljava/lang/String; <init> ()V Code LineNumberTable LocalVariableTable this #Lru/sbrf/uvz/model/bankruptcy/AuPK; (Ljava/lang/String;)V getCode ()Ljava/lang/String; setCode newCode equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\BankPosition.class : insertable 	updatable length   @ setClient_type (Ljava/lang/String;)V newClient_type equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\Au.class : StackMapTable equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\AgreedStatus.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this +Lru/sbrf/uvz/model/bankruptcy/AgreedStatus; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\Claim.class : newIdClaim getSignOfIncluding SIGNOFINCLUDING   � setSignOfIncluding newSignOfIncluding equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\Bankruptcy.class : newNumberCase getYearCase ()Ljava/lang/Short; YEARCASE setYearCase (Ljava/lang/Short;)V newYearCase getStatusOfBankruptcy STATUSOFBANKRUPTCY setStatusOfBankruptcy newStatusOfBankruptcy equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\Conclusion.class : insertable 	updatable length   @ setSufficiencyOfDebtor (Ljava/lang/String;)V newSufficiencyOfDebtor getPossibilityOfRecovery POSSIBILITYOFRECOVERY setPossibilityOfRecovery newPossibilityOfRecovery getSignOfFraudulentBankruptcy SIGNOFFRAUDULENTBANKRUPTCY setSignOfFraudulentBankruptcy newSignOfFraudulentBankruptcy getSignOfDeliberateBankruptcy SIGNOFDELIBERATEBANKRUPTCY setSignOfDeliberateBankruptcy newSignOfDeliberateBankruptcy equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\MeetingIniciator.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this /Lru/sbrf/uvz/model/bankruptcy/MeetingIniciator; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\HistoryOfSRO.class : insertable 	updatable setSignOfApprovalForSRO (Ljava/lang/Boolean;)V newSignOfApprovalForSRO getApprovalDateOfSRO ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE APPROVALDATEOFSRO setApprovalDateOfSRO (Ljava/util/Date;)V newApprovalDateOfSRO getCompletionDateForSRO COMPLETIONDATEFORSRO setCompletionDateForSRO newCompletionDateForSRO getDateOfAppointmentOfSROFromCA DATEOFAPPOINTMENTOFSROFROMCA setDateOfAppointmentOfSROFromCA newDateOfAppointmentOfSROFromCA equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString ()Ljava/lang/String; 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\HistoryOfAU.class : insertable 	updatable length   @ setSurnameAU (Ljava/lang/String;)V newSurnameAU 	getNameAU NAMEAU 	setNameAU 	newNameAU getPatronomycAU PATRONOMYCAU setPatronomycAU newPatronomycAU getDateOfBeginForAU ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE DATEOFBEGINFORAU setDateOfBeginForAU (Ljava/util/Date;)V newDateOfBeginForAU getDateOfEndForAU DATEOFENDFORAU setDateOfEndForAU newDateOfEndForAU getSignOfLoyaltyAUInHistory ()Ljava/lang/Boolean; SIGNOFLOYALTYAUINHISTORY setSignOfLoyaltyAUInHistory (Ljava/lang/Boolean;)V newSignOfLoyaltyAUInHistory getDateOfNonLoyaltyForAU DATEOFNONLOYALTYFORAU setDateOfNonLoyaltyForAU newDateOfNonLoyaltyForAU getDateOfDisqualification DATEOFDISQUALIFICATION setDateOfDisqualification newDateOfDisqualification getNumberOfDisqualification NUMBEROFDISQUALIFICATION setNumberOfDisqualification newNumberOfDisqualification getSignOfCurrentSROAndAU SIGNOFCURRENTSROANDAU setSignOfCurrentSROAndAU newSignOfCurrentSROAndAU equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcy.class : insertable 	updatable length   @ setNameOfStage (Ljava/lang/String;)V newNameOfStage getClient_type CLIENT_TYPE setClient_type newClient_type equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSRO.class : insertable 	updatable setDateOfBeginForAU (Ljava/util/Date;)V newDateOfBeginForAU getDateOfEndForAU DATEOFENDFORAU setDateOfEndForAU newDateOfEndForAU equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicant.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 8Lru/sbrf/uvz/model/bankruptcy/ReferenceBacruptApplicant; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\QuestionForMeeting.class : insertable 	updatable length  � setTextOfQuestion (Ljava/lang/String;)V newTextOfQuestion getDecisionByQuestion DECISIONBYQUESTION setDecisionByQuestion newDecisionByQuestion getOfferedPosition OFFEREDPOSITION setOfferedPosition newOfferedPosition getAgreedPosition AGREEDPOSITION setAgreedPosition newAgreedPosition equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast w hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\ReferenceDecision.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 0Lru/sbrf/uvz/model/bankruptcy/ReferenceDecision; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestions.class : insertable 	updatable length   @ setClient_type (Ljava/lang/String;)V newClient_type equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgment.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 2Lru/sbrf/uvz/model/bankruptcy/RefReasonedJudgment; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeet.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 2Lru/sbrf/uvz/model/bankruptcy/RefStatusOfCredMeet; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernment.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 8Lru/sbrf/uvz/model/bankruptcy/ReferenceTypeOfGovernment; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\Publication.class : OGRNFIRMEFRSB setOgrnFirmEFRSB newOgrnFirmEFRSB getTypeMessageEFRSB TYPEMESSAGEEFRSB setTypeMessageEFRSB newTypeMessageEFRSB equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestion.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this .Lru/sbrf/uvz/model/bankruptcy/RefTypeQuestion; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeet.class : StackMapTable K()Ljava/util/Collection<Lru/sbrf/uvz/model/bankruptcy/ReferenceQuestions;>; RuntimeVisibleAnnotations Ljavax/persistence/ManyToMany; mappedBy sk_type getIteratorQuestion ()Ljava/util/Iterator; Ljavax/persistence/Transient; setQuestion (Ljava/util/Collection;)V newQuestion LocalVariableTypeTable L(Ljava/util/Collection<Lru/sbrf/uvz/model/bankruptcy/ReferenceQuestions;>;)V addQuestion 4(Lru/sbrf/uvz/model/bankruptcy/ReferenceQuestions;)V newReferenceQuestions 1Lru/sbrf/uvz/model/bankruptcy/ReferenceQuestions; removeQuestion oldReferenceQuestions removeAllQuestion ()V iter Ljava/util/Iterator; k <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlct.class : StackMapTable getReasonedJudgment 4()Lru/sbrf/uvz/model/bankruptcy/RefReasonedJudgment; REFREASONEDJUDGMENT_CODE CODE setReasonedJudgment 5(Lru/sbrf/uvz/model/bankruptcy/RefReasonedJudgment;)V newRefReasonedJudgment <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditors.class : insertable 	updatable length   @ setIdOfMeeting (Ljava/lang/String;)V newIdOfMeeting getBriefAgenda BRIEFAGENDA    setBriefAgenda newBriefAgenda getPlannedDateOfMeeting ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; 	TIMESTAMP PLANNEDDATEOFMEETING setPlannedDateOfMeeting (Ljava/util/Date;)V newPlannedDateOfMeeting getMeetingTime MEETINGTIME setMeetingTime newMeetingTime getMeetingPlace MEETINGPLACE setMeetingPlace newMeetingPlace getUserComment USERCOMMENT setUserComment newUserComment getFactComment FACTCOMMENT setFactComment newFactComment getManagerComment MANAGERCOMMENT setManagerComment newManagerComment getSignOfAgreed ()Ljava/lang/Boolean; SIGNOFAGREED setSignOfAgreed (Ljava/lang/Boolean;)V newSignOfAgreed getDesicionDateTime DESICIONDATETIME setDesicionDateTime newDesicionDateTime getAgreedFIO 	AGREEDFIO setAgreedFIO newAgreedFIO equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\SroAUPK.class :   B C D code Ljava/lang/String; <init> ()V Code LineNumberTable LocalVariableTable this &Lru/sbrf/uvz/model/bankruptcy/SroAUPK; (Ljava/lang/String;)V getCode ()Ljava/lang/String; setCode newCode equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcy.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this /Lru/sbrf/uvz/model/bankruptcy/TypeOfBankruptcy; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcy.class : STATUSOFSTAGE length   @ setStatusOfStage (Ljava/lang/String;)V newStatusOfStage getCurrentStage ()Ljava/lang/Boolean; CURRENTSTAGE setCurrentStage (Ljava/lang/Boolean;)V newCurrentStage getSignOfLoyaltyOfCurrentAU SIGNOFLOYALTYOFCURRENTAU setSignOfLoyaltyOfCurrentAU newSignOfLoyaltyOfCurrentAU getDateOfNonLoyaltyOfCurrentAU DATEOFNONLOYALTYOFCURRENTAU setDateOfNonLoyaltyOfCurrentAU newDateOfNonLoyaltyOfCurrentAU getCommentUser COMMENTUSER    setCommentUser newCommentUser equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast_ hashCode ()I I toString 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirements.class : INNOFCREDITOR setInnOfCreditor newInnOfCreditor getSnilsOfCreditor SNILSOFCREDITOR setSnilsOfCreditor newSnilsOfCreditor !getFullNameOfCreditorForJuridical FULLNAMEOFCREDITORFORJURIDICAL  � !setFullNameOfCreditorForJuridical !newFullNameOfCreditorForJuridical getFullNameOfCreditorForFisical FULLNAMEOFCREDITORFORFISICAL setFullNameOfCreditorForFisical newFullNameOfCreditorForFisical "getShortNameOfCreditorForJuridical SHORTOFCREDITORFORJURIDICAL   � "setShortNameOfCreditorForJuridical "newShortNameOfCreditorForJuridical equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\SroAU.class : StackMapTable equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast� hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RequestOut.class : DATEOFREQUEST setDateOfRequest (Ljava/util/Date;)V newDateOfRequest getDateOfAnswer DATEOFANSWER setDateOfAnswer newDateOfAnswer getCommentStatement COMMENTSTATEMENT setCommentStatement newCommentStatement equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.class :  4-. expectedRecoveryDebt Ljava/math/BigDecimal; eTC expectedRealisationDate Ljava/util/Date; otherRationale Ljava/lang/String; balanceSheetRR recoveryRate fixedAmountDebt calculateDateTime signOfAgreed Ljava/lang/Boolean; desicionDateTime 	agreedFIO formulation Ljava/util/Collection; 	Signature KLjava/util/Collection<Lru/sbrf/uvz/model/bankruptcy/ReasonedJudgmentSlct;>; agreedStatus +Lru/sbrf/uvz/model/bankruptcy/AgreedStatus; x_bankruptcy )Lru/sbrf/uvz/model/bankruptcy/Bankruptcy; getFormulation ()Ljava/util/Collection; Code LineNumberTable LocalVariableTable this /Lru/sbrf/uvz/model/bankruptcy/RationaleForInit; 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.class : insertable 	updatable 	precision   & scale    setExpectedRecoveryDebt (Ljava/math/BigDecimal;)V newExpectedRecoveryDebt getETC ETC setETC newETC getExpectedRealisationDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE EXPECTEDREALISATIONDATE setExpectedRealisationDate (Ljava/util/Date;)V newExpectedRealisationDate getOtherRationale ()Ljava/lang/String; OTHERRATIONALE length  � setOtherRationale (Ljava/lang/String;)V newOtherRationale getBalanceSheetRR BALANCESHEETRR setBalanceSheetRR newBalanceSheetRR getRecoveryRate RECOVERYRATE setRecoveryRate newRecoveryRate getFixedAmountDebt FIXEDAMOUNTDEBT setFixedAmountDebt newFixedAmountDebt getCalculateDateTime 	TIMESTAMP CALCULATEDATETIME setCalculateDateTime newCalculateDateTime getSignOfAgreed ()Ljava/lang/Boolean; SIGNOFAGREED setSignOfAgreed (Ljava/lang/Boolean;)V newSignOfAgreed getDesicionDateTime DESICIONDATETIME setDesicionDateTime newDesicionDateTime getAgreedFIO 	AGREEDFIO    setAgreedFIO newAgreedFIO equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInit.class : SourceFile RationaleForInit.java Ljavax/persistence/Entity; Ljavax/persistence/Table; RATIONALEFORINIT X Y java/util/HashSet � |01 n2 �3 �456 � -ru/sbrf/uvz/model/bankruptcy/RationaleForInit m n/789: 1ru/sbrf/uvz/model/bankruptcy/ReasonedJudgmentSlct6 | \ ] ^ _; � � I J K J L M N O P J Q J R J S M T U V M W O � �< � � � � java/util/Calendar=>? � �@ � � � � � � � � � �A � � � � � �B java/lang/StringBuilder RationaleForInit(super=CD � � , expectedRecoveryDebt=CE , eTC= , expectedRealisationDate= , otherRationale= , balanceSheetRR= , recoveryRate= , fixedAmountDebt= , calculateDateTime= , signOfAgreed= , desicionDateTime= , agreedFIO= ) %ru/sbrf/uvz/model/core/AbstractEntity java/io/Serializable java/util/Iterator java/util/Collection iterator contains add 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSRO.class : newDateAnswer getSignApprovalByCourt SIGNAPPROVALBYCOURT setSignApprovalByCourt newSignApprovalByCourt getDateApprovalByCourt DATE DATEAPPROVALBYCOURT setDateApprovalByCourt newDateApprovalByCourt equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast7 hashCode ()I I toString 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\AbstractEntityPK.class :  	 F G H id J <init> ()V Code LineNumberTable LocalVariableTable this )Lru/sbrf/uvz/model/core/AbstractEntityPK; (J)V getId ()J setId newId equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\AbstractEntity.class : StackMapTable equals (Ljava/lang/Object;)Z o Ljava/lang/Object; other this$version 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\AbstractEntity.class : other$version d q canEqual hashCode ()I PRIME I result $id $version toString ()Ljava/lang/String; 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\AbstractReference.class : StackMapTable equals (Ljava/lang/Object;)Z o Ljava/lang/Object; other 	this$code 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\AbstractReference.class : other$code 	this$name 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\AbstractReference.class : other$name this$sortOrder other$sortOrder this$description other$description | � canEqual hashCode ()I PRIME I result $code $name 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\AbstractReferencePK.class :   B C D code Ljava/lang/String; <init> ()V Code LineNumberTable LocalVariableTable this ,Lru/sbrf/uvz/model/core/AbstractReferencePK; (Ljava/lang/String;)V getCode ()Ljava/lang/String; setCode newCode equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\DataAdminOperatorID.class : newOrgUnit equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\ExtIdentityContainer.class : orphanRemoval    mappedBy x_owner getIteratorUid ()Ljava/util/Iterator; Ljavax/persistence/Transient; setUid (Ljava/util/Collection;)V newUid LocalVariableTypeTable B(Ljava/util/Collection<Lru/sbrf/uvz/model/core/ExtIdentityRef;>;)V addUid *(Lru/sbrf/uvz/model/core/ExtIdentityRef;)V newExtIdentityRef 'Lru/sbrf/uvz/model/core/ExtIdentityRef; 	removeUid oldExtIdentityRef removeAllUid ()V iter Ljava/util/Iterator; n <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\RefExtIdNamespace.class : insertable 	updatable setIsExternalSystem (Ljava/lang/Boolean;)V newIsExternalSystem equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\ExtIdentityRefPK.class : newExtCode getNamespace ,()Lru/sbrf/uvz/model/core/RefExtIdNamespace; setNamespace -(Lru/sbrf/uvz/model/core/RefExtIdNamespace;)V newNamespace getRefClass setRefClass newRefClass equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\CommentStatement.class : insertable 	updatable length  � setCommentText (Ljava/lang/String;)V newCommentText getCommentDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE COMMENTDATE setCommentDate (Ljava/util/Date;)V newCommentDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\ExtIdentityRef.class : newExtCode getRefClass REFCLASS   � setRefClass newRefClass getExtIdentityRefPK +()Lru/sbrf/uvz/model/core/ExtIdentityRefPK; Ljavax/persistence/Transient; setExtIdentityRefPK ,(Lru/sbrf/uvz/model/core/ExtIdentityRefPK;)V pk )Lru/sbrf/uvz/model/core/ExtIdentityRefPK; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\core\ReferenceDepartment.class : CLOSEDORGUNIT setClosedOrgUnit newClosedOrgUnit equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\AuthorityKPA.class : newBranchType equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\DecisionMakingFormat.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 1Lru/sbrf/uvz/model/decision/DecisionMakingFormat; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\DecisionMaking.class : insertable 	updatable setIsCreditDeal (Ljava/lang/Boolean;)V newIsCreditDeal getIsClientInChildBank ISCLIENTINCHILDBANK setIsClientInChildBank newIsClientInChildBank getHandLimit ()Ljava/math/BigDecimal; 	HANDLIMIT 	precision   & scale    setHandLimit (Ljava/math/BigDecimal;)V newHandLimit getIsDealOFR 	ISDEALOFR setIsDealOFR newIsDealOFR getIsDealNoVND ISDEALNOVND setIsDealNoVND newIsDealNoVND getIsComplicatedDeal ISCOMPLICATEDDEAL setIsComplicatedDeal newIsComplicatedDeal getIsTransboundaryDeal ISTRANSBOUNDARYDEAL setIsTransboundaryDeal newIsTransboundaryDeal getIsSberbankCapital ISSBERBANKCAPITAL setIsSberbankCapital newIsSberbankCapital getLimitBorrower_GPA LIMITBORROWER_GPA setLimitBorrower_GPA newLimitBorrower_GPA getIsHandLimit ISHANDLIMIT setIsHandLimit newIsHandLimit getIsSimpleOFR ISSIMPLEOFR setIsSimpleOFR newIsSimpleOFR equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast3 hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\Calculation.class : newCategoryAR equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\KoQuestionCategory.class :   = ? @ parentCategory /Lru/sbrf/uvz/model/decision/KoQuestionCategory; getParentCategory 1()Lru/sbrf/uvz/model/decision/KoQuestionCategory; Code LineNumberTable LocalVariableTable this RuntimeVisibleAnnotations Ljavax/persistence/ManyToOne; Ljavax/persistence/JoinColumn; name KOQUESTIONCATEGORY_CODE referencedColumnName CODE nullable    setParentCategory 2(Lru/sbrf/uvz/model/decision/KoQuestionCategory;)V newKoQuestionCategory <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\KoQuestionServices.class : insertable 	updatable length    setAvailableFor (Ljava/lang/String;)V newAvailableFor getDisabledFor DISABLEDFOR setDisabledFor newDisabledFor equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\KoQuestionMaterials.class : insertable 	updatable length   � setMaterial_code (Ljava/lang/String;)V newMaterial_code getAvailableFor AVAILABLEFOR    setAvailableFor newAvailableFor getDisabledFor DISABLEDFOR setDisabledFor newDisabledFor getHasTemplate ()Ljava/lang/Boolean; HASTEMPLATE setHasTemplate (Ljava/lang/Boolean;)V newHasTemplate getTemplateLink TEMPLATELINK setTemplateLink newTemplateLink equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\LevelDecisionOverwrite.class : ISNEEDARCHECK setIsNeedARCheck newIsNeedARCheck equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this =Lru/sbrf/uvz/model/decision/ReferenceFinancialMarketsActType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmail.class : SECRETARYNAME setSecretaryName newSecretaryName equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\ReferenceMaterials.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this /Lru/sbrf/uvz/model/decision/ReferenceMaterials; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\ReferenceVND.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this )Lru/sbrf/uvz/model/decision/ReferenceVND; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\RiskProfiles.class : newArCategory equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\SpecialConditions.class : StackMapTable <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeight.class : insertable 	updatable setToolAvailability (Ljava/lang/Boolean;)V newToolAvailability 	getWeight ()Ljava/math/BigDecimal; WEIGHT 	precision    scale    	setWeight (Ljava/math/BigDecimal;)V 	newWeight equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\KoDecision.class : newUpdateDate getDecisionStatus DECISIONSTATUS setDecisionStatus newDecisionStatus getDecisionStatusLocalized DECISIONSTATUSLOCALIZED setDecisionStatusLocalized newDecisionStatusLocalized equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast4 hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\SelectedQuestionsKO.class : TOOLTYPE_CODE setToolType_code newToolType_code equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\decision\KoQuestionType.class : MSACCESSLABEL  � setMsAccessLabel newMsAccessLabel getIsSpecialQuestion ISSPECIALQUESTION setIsSpecialQuestion newIsSpecialQuestion equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancing.class : insertable 	updatable length    setToolPurpose (Ljava/lang/String;)V newToolPurpose getAddFinanceSigned ()Ljava/lang/Boolean; ADDFINANCESIGNED setAddFinanceSigned (Ljava/lang/Boolean;)V newAddFinanceSigned getAssignFailComment ASSIGNFAILCOMMENT  � setAssignFailComment newAssignFailComment getAssignContractNum ASSIGNCONTRACTNUM   � setAssignContractNum newAssignContractNum getAssignContractDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE ASSIGNCONTRACTDATE setAssignContractDate (Ljava/util/Date;)V newAssignContractDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreement.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumAmicAgrCredAgr ()Ljava/math/BigDecimal; SUMAMICAGRCREDAGR 	precision   & scale    setSumAmicAgrCredAgr (Ljava/math/BigDecimal;)V newSumAmicAgrCredAgr getAmountAwardedBankCredAgr AMOUNTAWARDEDBANKCREDAGR setAmountAwardedBankCredAgr newAmountAwardedBankCredAgr equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast x hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementTool.class : insertable 	updatable setDateCourtDecision (Ljava/util/Date;)V newDateCourtDecision getNumberCourtDecision ()Ljava/lang/String; NUMBERCOURTDECISION length   @ setNumberCourtDecision (Ljava/lang/String;)V newNumberCourtDecision getAmicAgreementSigned ()Ljava/lang/Boolean; AMICAGREEMENTSIGNED setAmicAgreementSigned (Ljava/lang/Boolean;)V newAmicAgreementSigned getAssignFailComment ASSIGNFAILCOMMENT   � setAssignFailComment newAssignFailComment equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalance.class : insertable 	updatable setBailToBalanceSigned (Ljava/lang/Boolean;)V newBailToBalanceSigned getAssignFailComment ()Ljava/lang/String; ASSIGNFAILCOMMENT length  � setAssignFailComment (Ljava/lang/String;)V newAssignFailComment equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgr.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumBailToBalance ()Ljava/math/BigDecimal; SUMBAILTOBALANCE 	precision   & scale    setSumBailToBalance (Ljava/math/BigDecimal;)V newSumBailToBalance equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreement.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumAssign ()Ljava/math/BigDecimal; 	SUMASSIGN 	precision   & scale    setSumAssign (Ljava/math/BigDecimal;)V newSumAssign equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast o hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\cession\CessionTool.class : insertable 	updatable length   � setAssignContractNum (Ljava/lang/String;)V newAssignContractNum getAssignContractDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE ASSIGNCONTRACTDATE setAssignContractDate (Ljava/util/Date;)V newAssignContractDate getAssignContractPrice ()Ljava/math/BigDecimal; ASSIGNCONTRACTPRICE 	precision   & scale    setAssignContractPrice (Ljava/math/BigDecimal;)V newAssignContractPrice getClaimMarketValue CLAIMMARKETVALUE setClaimMarketValue newClaimMarketValue getAssigneeAuction ()Ljava/lang/Boolean; ASSIGNEEAUCTION setAssigneeAuction (Ljava/lang/Boolean;)V newAssigneeAuction getRightsAfterPay RIGHTSAFTERPAY setRightsAfterPay newRightsAfterPay getAssignContractSigned ASSIGNCONTRACTSIGNED setAssignContractSigned newAssignContractSigned getAssignFailComment ASSIGNFAILCOMMENT  � setAssignFailComment newAssignFailComment getDiscount DISCOUNT       setDiscount newDiscount equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreement.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumCompensation ()Ljava/math/BigDecimal; SUMCOMPENSATION 	precision   & scale    setSumCompensation (Ljava/math/BigDecimal;)V newSumCompensation equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\compensation\CompensationTool.class : insertable 	updatable setCompensationSigned (Ljava/lang/Boolean;)V newCompensationSigned getAssignFailComment ()Ljava/lang/String; ASSIGNFAILCOMMENT length  � setAssignFailComment (Ljava/lang/String;)V newAssignFailComment equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatus.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this ELru/sbrf/uvz/model/instruments/criminalprosecution/ApplicationStatus; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilAction.class : insertable 	updatable 	precision   & scale    setSumCivilAction (Ljava/math/BigDecimal;)V newSumCivilAction equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast U hashCode ()I I toString ()Ljava/lang/String; 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticle.class : StackMapTable <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\Investigator.class : insertable 	updatable length  � setContacts (Ljava/lang/String;)V newContacts equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCase.class : insertable 	updatable setInitiationDate (Ljava/util/Date;)V newInitiationDate 	getNumber ()Ljava/lang/String; `NUMBER` length   � 	setNumber (Ljava/lang/String;)V 	newNumber 	getReason REASON  � 	setReason 	newReason equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgency.class : insertable 	updatable length   � setName (Ljava/lang/String;)V newName equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplication.class : insertable 	updatable setApplicationDate (Ljava/util/Date;)V newApplicationDate getCriminalCaseStarted ()Ljava/lang/Boolean; CRIMINALCASESTARTED setCriminalCaseStarted (Ljava/lang/Boolean;)V newCriminalCaseStarted equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecution.class : insertable 	updatable setResponderUnknown (Ljava/lang/Boolean;)V newResponderUnknown getCivilActionDeclared CIVILACTIONDECLARED setCivilActionDeclared newCivilActionDeclared getCourtDecisionText ()Ljava/lang/String; COURTDECISIONTEXT length  � setCourtDecisionText (Ljava/lang/String;)V newCourtDecisionText equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCase.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this ILru/sbrf/uvz/model/instruments/criminalprosecution/ReasonEndCriminalCase; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransfer.class : insertable 	updatable length    setToolPurpose (Ljava/lang/String;)V newToolPurpose getDebtTransferSigned ()Ljava/lang/Boolean; DEBTTRANSFERSIGNED setDebtTransferSigned (Ljava/lang/Boolean;)V newDebtTransferSigned getAssignFailComment ASSIGNFAILCOMMENT  � setAssignFailComment newAssignFailComment getAssignContractNum ASSIGNCONTRACTNUM   � setAssignContractNum newAssignContractNum getAssignContractDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE ASSIGNCONTRACTDATE setAssignContractDate (Ljava/util/Date;)V newAssignContractDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgr.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumDebtTransfer ()Ljava/math/BigDecimal; SUMDEBTTRANSFER 	precision   & scale    setSumDebtTransfer (Ljava/math/BigDecimal;)V newSumDebtTransfer equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrder.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this ALru/sbrf/uvz/model/instruments/enforcementproceedings/CourtOrder; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosen.class : insertable 	updatable setDateCourtOrder (Ljava/util/Date;)V newDateCourtOrder getDateEntry 	TIMESTAMP 	DATEENTRY setDateEntry newDateEntry getDateDeleteEntry DATEDELETEENTRY setDateDeleteEntry newDateDeleteEntry equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast t hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedings.class : insertable 	updatable setDateTransferExecutionList (Ljava/util/Date;)V newDateTransferExecutionList  getDatePresentationExecutionList DATEPRESENTATIONEXECUTIONLIST  setDatePresentationExecutionList  newDatePresentationExecutionList getNumEnforcementProceedings ()Ljava/lang/String; NUMENFORCEMENTPROCEEDINGS length   @ setNumEnforcementProceedings (Ljava/lang/String;)V newNumEnforcementProceedings "getDateStartEnforcementProceedings DATESTARTENFRCPROCEEDINGS "setDateStartEnforcementProceedings "newDateStartEnforcementProceedings  getDateEndEnforcementProceedings DATEENDENFORCEMENTPROCEEDINGS  setDateEndEnforcementProceedings  newDateEndEnforcementProceedings getEnforcementStop ()Ljava/lang/Boolean; ENFORCEMENTSTOP setEnforcementStop (Ljava/lang/Boolean;)V newEnforcementStop getSumToCollect ()Ljava/math/BigDecimal; SUMTOCOLLECT 	precision   & scale    setSumToCollect (Ljava/math/BigDecimal;)V newSumToCollect getSumCollected SUMCOLLECTED setSumCollected newSumCollected getDateToolEnd 	TIMESTAMP DATETOOLEND setDateToolEnd newDateToolEnd equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcement.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this LLru/sbrf/uvz/model/instruments/enforcementproceedings/ReasonStopEnforcement; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgr.class : newSumCollect equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\InterestRateType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 0Lru/sbrf/uvz/model/instruments/InterestRateType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\judical\LegalDocuments.class : insertable 	updatable length   � setDocumentname (Ljava/lang/String;)V newDocumentname getAvailability AVAILABILITY setAvailability newAvailability equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast Z hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreement.class : insertable 	updatable setOverduedebt (I)V newOverduedebt getRecoverysum ()Ljava/math/BigDecimal; RECOVERYSUM 	precision   & scale    setRecoverysum (Ljava/math/BigDecimal;)V newRecoverysum getAgreementChosen ()Ljava/lang/Boolean; AGREEMENTCHOSEN setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getRecoveryType ()Ljava/lang/String; RECOVERYTYPE length  � setRecoveryType (Ljava/lang/String;)V newRecoveryType equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode toString 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosen.class : newIsSelected equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast ] hashCode ()I I toString ()Ljava/lang/String; 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\judical\Responder.class : MAINOBLIGATOR setMainObligator newMainObligator getCreditDealMark CREDITDEALMARK setCreditDealMark newCreditDealMark equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\judical\LegalRecovery.class : addResponders 4(Lru/sbrf/uvz/model/instruments/judical/Responder;)V newResponder 1Lru/sbrf/uvz/model/instruments/judical/Responder; removeResponders oldResponder removeAllResponders getProvisionAgreements Z()Ljava/util/Collection<Lru/sbrf/uvz/model/instruments/judical/ProvisionAgreementChosen;>; getIteratorProvisionAgreements setProvisionAgreements newProvisionAgreements [(Ljava/util/Collection<Lru/sbrf/uvz/model/instruments/judical/ProvisionAgreementChosen;>;)V addProvisionAgreements C(Lru/sbrf/uvz/model/instruments/judical/ProvisionAgreementChosen;)V newProvisionAgreementChosen @Lru/sbrf/uvz/model/instruments/judical/ProvisionAgreementChosen; removeProvisionAgreements oldProvisionAgreementChosen removeAllProvisionAgreements <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgr.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumNonJudicial ()Ljava/math/BigDecimal; SUMNONJUDICIAL 	precision   & scale    setSumNonJudicial (Ljava/math/BigDecimal;)V newSumNonJudicial equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryTool.class : insertable 	updatable setNonJudicialSigned (Ljava/lang/Boolean;)V newNonJudicialSigned getAssignFailComment ()Ljava/lang/String; ASSIGNFAILCOMMENT length  � setAssignFailComment (Ljava/lang/String;)V newAssignFailComment equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\PaymentOrder.class : insertable 	updatable setSettings1 (Ljava/lang/Boolean;)V newSettings1 getSettings2 	SETTINGS2 setSettings2 newSettings2 getSettings3 	SETTINGS3 setSettings3 newSettings3 equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\restructure\Restructure.class : insertable 	updatable length    setToolPurpose (Ljava/lang/String;)V newToolPurpose getRestructureSigned ()Ljava/lang/Boolean; RESTRUCTURESIGNED setRestructureSigned (Ljava/lang/Boolean;)V newRestructureSigned getAssignFailComment ASSIGNFAILCOMMENT  � setAssignFailComment newAssignFailComment getAssignContractNum ASSIGNCONTRACTNUM   � setAssignContractNum newAssignContractNum getAssignContractDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE ASSIGNCONTRACTDATE setAssignContractDate (Ljava/util/Date;)V newAssignContractDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreement.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumRestruct ()Ljava/math/BigDecimal; SUMRESTRUCT 	precision   & scale    setSumRestruct (Ljava/math/BigDecimal;)V newSumRestruct equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast q hashCode ()I I toString ()Ljava/lang/String; 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\ToolMode.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this (Lru/sbrf/uvz/model/instruments/ToolMode; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\UniversalToolDeal.class :  8H]^ sumTool Ljava/math/BigDecimal; 	termMonth Ljava/lang/Integer; individScheduleMainComment Ljava/lang/String; individScheduleInterestComment defermentPrincipalMonth defermentInterestMonth interestRateNum interestRateString delayCondition otherCondition 	covenants accordingM2723 Ljava/lang/Boolean; 	notReUsed isInstrumentBasic additionalParticipant dealDate Ljava/util/Date; 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\UniversalToolDeal.class : newSumTool getTermMonth ()Ljava/lang/Integer; 	TERMMONTH setTermMonth (Ljava/lang/Integer;)V newTermMonth getIndividScheduleMainComment ()Ljava/lang/String; INDIVIDSCHEDULEMAINCOMMENT length   � setIndividScheduleMainComment (Ljava/lang/String;)V newIndividScheduleMainComment !getIndividScheduleInterestComment INDIVIDSCHEDULEINTERESTCOMMENT !setIndividScheduleInterestComment !newIndividScheduleInterestComment getDefermentPrincipalMonth DEFERMENTPRINCIPALMONTH setDefermentPrincipalMonth newDefermentPrincipalMonth getDefermentInterestMonth DEFERMENTINTERESTMONTH setDefermentInterestMonth newDefermentInterestMonth getInterestRateNum INTERESTRATENUM       setInterestRateNum newInterestRateNum getInterestRateString INTERESTRATESTRING setInterestRateString newInterestRateString getDelayCondition DELAYCONDITION    setDelayCondition newDelayCondition getOtherCondition OTHERCONDITION setOtherCondition newOtherCondition getCovenants 	COVENANTS setCovenants newCovenants getAccordingM2723 ()Ljava/lang/Boolean; ACCORDINGM2723 setAccordingM2723 (Ljava/lang/Boolean;)V newAccordingM2723 getNotReUsed 	NOTREUSED setNotReUsed newNotReUsed getIsInstrumentBasic ISINSTRUMENTBASIC setIsInstrumentBasic newIsInstrumentBasic getAdditionalParticipant ADDITIONALPARTICIPANT setAdditionalParticipant newAdditionalParticipant getDealDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE DEALDATE setDealDate (Ljava/util/Date;)V newDealDate getStopFactEmpty 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\UniversalToolDeal.class : STOPFACTEMPTY setStopFactEmpty newStopFactEmpty getFailReasonTool FAILREASONTOOL  � setFailReasonTool newFailReasonTool equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\UniversalToolDeal.class : , sumTool=gi , termMonth= , individScheduleMainComment= !, individScheduleInterestComment= , defermentPrincipalMonth= , defermentInterestMonth= , interestRateNum= , interestRateString= , delayCondition= , otherCondition= , covenants= , accordingM2723= , notReUsed= , isInstrumentBasic= , additionalParticipant= , dealDate= , stopFactEmpty= , failReasonTool= ) (ru/sbrf/uvz/model/process/RegulationTool java/io/Serializable java/math/BigDecimal java/lang/Integer java/lang/String java/lang/Boolean com/sybase/orm/util/Util compareDate $(Ljava/util/Date;Ljava/util/Date;I)I java/util/Date append -(Ljava/lang/String;)Ljava/lang/StringBuilder; -(Ljava/lang/Object;)Ljava/lang/StringBuilder; !  R  S   T U    V W    X Y    Z Y    [ W    \ W    ] U    ^ Y    _ Y    ` Y    a Y    b c    d c    e c    f Y    g h    i c    j Y    k l    m n    o n    p q   0  r s  t   /     *� �    u       h v        w x   y     z   {  |s } ~s  �Z �  � �  t   >     *+� �    u   
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgr.class : insertable 	updatable setAgreementChosen (Ljava/lang/Boolean;)V newAgreementChosen getSumWriteOff ()Ljava/math/BigDecimal; SUMWRITEOFF 	precision   & scale    setSumWriteOff (Ljava/math/BigDecimal;)V newSumWriteOff equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffTool.class : insertable 	updatable setWriteOffSigned (Ljava/lang/Boolean;)V newWriteOffSigned getAssignFailComment ()Ljava/lang/String; ASSIGNFAILCOMMENT length  � setAssignFailComment (Ljava/lang/String;)V newAssignFailComment equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\CollectionModel.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this +Lru/sbrf/uvz/model/process/CollectionModel; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\CollectionModelChangeReason.class :   = ? @ newCollectionModel +Lru/sbrf/uvz/model/process/CollectionModel; getNewCollectionModel -()Lru/sbrf/uvz/model/process/CollectionModel; Code LineNumberTable LocalVariableTable this 7Lru/sbrf/uvz/model/process/CollectionModelChangeReason; RuntimeVisibleAnnotations Ljavax/persistence/ManyToOne; Ljavax/persistence/JoinColumn; name COLLECTIONMODEL_CODE referencedColumnName CODE nullable    setNewCollectionModel .(Lru/sbrf/uvz/model/process/CollectionModel;)V <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\BpmUser.class : insertable 	updatable length   � setExecutorName (Ljava/lang/String;)V newExecutorName getPhoneNumber PHONENUMBER   @ setPhoneNumber newPhoneNumber getExecutionOrgUnit EXECUTIONORGUNIT setExecutionOrgUnit newExecutionOrgUnit equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\Court.class : insertable 	updatable length   � setCourttype (Ljava/lang/String;)V newCourttype getCourtname 	COURTNAME setCourtname newCourtname getCourtadress COURTADRESS    setCourtadress newCourtadress equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast d hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\CourtCase.class : newOutcome getCommentStatement COMMENTSTATEMENT    setCommentStatement newCommentStatement 	getSource SOURCE 	setSource 	newSource getCreationDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE CREATIONDATE setCreationDate (Ljava/util/Date;)V newCreationDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\ClaimsGranted.class : newResolution getRequirementCurrency ()Ljava/lang/String; REQUIREMENTCURRENCY length   @ setRequirementCurrency (Ljava/lang/String;)V newRequirementCurrency equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast d hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPM.class : insertable 	updatable length   � setBpmpoasenumber (Ljava/lang/String;)V newBpmpoasenumber getCourtCase_ID COURTCASE_ID   @ setCourtCase_ID newCourtCase_ID getCourtprovisionstatus COURTPROVISIONSTATUS setCourtprovisionstatus newCourtprovisionstatus equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\CourtDecision.class : insertable 	updatable length   @ setDocumentClass (Ljava/lang/String;)V newDocumentClass getJuridAct JURIDACT    setJuridAct newJuridAct getNextStep NEXTSTEP setNextStep newNextStep getMainSessionDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; 	TIMESTAMP MAINSESSIONDATE setMainSessionDate (Ljava/util/Date;)V newMainSessionDate getCourtDecisionDate DATE COURTDECISIONDATE setCourtDecisionDate newCourtDecisionDate getRequirementList     REQUIREMENTLIST setRequirementList newRequirementList getReasonDecision REASONDECISION setReasonDecision newReasonDecision equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\EventType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 2Lru/sbrf/uvz/model/process/courtrequest/EventType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\CourtRequest.class : REQUESTSTATUS setRequestStatus getRequestSentDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE REQUESTSENTDATE setRequestSentDate (Ljava/util/Date;)V newRequestSentDate getCrossLinkECM CROSSLINKECM setCrossLinkECM newCrossLinkECM getCrossLinkECMbpm CROSSLINKECMBPM setCrossLinkECMbpm newCrossLinkECMbpm equals (Ljava/lang/Object;)Z other Ljava/lang/Object; castD hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\Event.class : insertable 	updatable setEventDate (Ljava/util/Date;)V newEventDate getEventType ()Ljava/lang/String; 	EVENTTYPE length   @ setEventType (Ljava/lang/String;)V getEventName 	EVENTNAME   � setEventName newEventName equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast y hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RequestCategory.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 8Lru/sbrf/uvz/model/process/courtrequest/RequestCategory; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.class :   � � � documentNumber Ljava/lang/String; documentName otherDocumentType documentDate Ljava/util/Date; commentDocument subbmittingDate gettingsDocumentDate courtDecisionInfo 6Lru/sbrf/uvz/model/process/courtrequest/CourtDecision; x_courtCaseBPMPO 5Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM; getCourtDecisionInfo 8()Lru/sbrf/uvz/model/process/courtrequest/CourtDecision; Code LineNumberTable LocalVariableTable this 8Lru/sbrf/uvz/model/process/courtrequest/ProcessDocument; RuntimeVisibleAnnotations Ljavax/persistence/ManyToOne; Ljavax/persistence/JoinColumn; name COURTDECISION_ID referencedColumnName ID nullable    setCourtDecisionInfo 9(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;)V oldCourtDecision newCourtDecision 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.class : insertable 	updatable length   @ setDocumentNumber (Ljava/lang/String;)V newDocumentNumber getDocumentName DOCUMENTNAME setDocumentName newDocumentName getOtherDocumentType OTHERDOCUMENTTYPE   � setOtherDocumentType newOtherDocumentType getDocumentDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE DOCUMENTDATE setDocumentDate (Ljava/util/Date;)V newDocumentDate getCommentDocument COMMENTDOCUMENT    setCommentDocument newCommentDocument getSubbmittingDate SUBBMITTINGDATE setSubbmittingDate newSubbmittingDate getGettingsDocumentDate GETTINGSDOCUMENTDATE setGettingsDocumentDate newGettingsDocumentDate equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocument.class : SourceFile ProcessDocument.java Ljavax/persistence/Entity; Ljavax/persistence/Table; PROCESSDOCUMENT 6 7 � � � 8 9 � W X - . / . 0 . 1 2 3 . 4 2 5 2 6ru/sbrf/uvz/model/process/courtrequest/ProcessDocument Y Z � f Z j Z o p java/util/Calendar � � � y Z ~ p � p � � � java/lang/StringBuilder ProcessDocument(super= � � � Z , documentNumber= , documentName= , otherDocumentType= , documentDate= � � , commentDocument= , subbmittingDate= , gettingsDocumentDate= ) %ru/sbrf/uvz/model/core/AbstractEntity java/io/Serializable 4ru/sbrf/uvz/model/process/courtrequest/CourtDecision 3ru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM java/lang/String com/sybase/orm/util/Util compareDate $(Ljava/util/Date;Ljava/util/Date;I)I java/util/Date append -(Ljava/lang/String;)Ljava/lang/StringBuilder; -(Ljava/lang/Object;)Ljava/lang/StringBuilder; !  +  , 	  - .    / .    0 .    1 2    3 .    4 2    5 2    6 7    8 9     : ;  <   /     *� �    =       C >        ? @   A     B   C  Ds E Fs G HZ I  J K  <   �     -*� � *� +� � *� � 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RequestSubject.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 7Lru/sbrf/uvz/model/process/courtrequest/RequestSubject; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RequestType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 4Lru/sbrf/uvz/model/process/courtrequest/RequestType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RequestStatus.class : newStatusDesc equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RequirementList.class : insertable 	updatable length   @ setRequirementType (Ljava/lang/String;)V newRequirementType getTypeMaterialClaim TYPEMATERIALCLAIM setTypeMaterialClaim newTypeMaterialClaim  getRequirementValueMaterialClaim ()Ljava/math/BigDecimal; REQUIREMENTVALUEMATERIALCLAIM 	precision   & scale     setRequirementValueMaterialClaim (Ljava/math/BigDecimal;)V  newRequirementValueMaterialClaim getCurrencyMaterialClaim CURRENCYMATERIALCLAIM setCurrencyMaterialClaim newCurrencyMaterialClaim getInclusionExclusionDate ()Ljava/util/Date; Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; DATE INCLUSIONEXCLUSIONDATE setInclusionExclusionDate (Ljava/util/Date;)V newInclusionExclusionDate getSecuredByPledge ()Ljava/lang/Boolean; SECUREDBYPLEDGE setSecuredByPledge (Ljava/lang/Boolean;)V newSecuredByPledge getProvisionValueMatClaim PROVISIONVALUEMATCLAIM setProvisionValueMatClaim newProvisionValueMatClaim getProvisionCurMatClaim PROVISIONCURMATCLAIM setProvisionCurMatClaim newProvisionCurMatClaim equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.class :   � � � debtsum I rate 	prophrate forfeit statefee otheramounts recoveryDecision 6Lru/sbrf/uvz/model/process/courtrequest/CourtDecision; getRecoveryDecision 8()Lru/sbrf/uvz/model/process/courtrequest/CourtDecision; Code LineNumberTable LocalVariableTable this 7Lru/sbrf/uvz/model/process/courtrequest/RecoveryParams; RuntimeVisibleAnnotations Ljavax/persistence/ManyToOne; Ljavax/persistence/JoinColumn; name COURTDECISION_ID referencedColumnName ID nullable    setRecoveryDecision 9(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;)V newCourtDecision <init> ()V 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.class : newForfeit getStatefee STATEFEE setStatefee newStatefee getOtheramounts OTHERAMOUNTS setOtheramounts newOtheramounts equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\CourtInstance.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 6Lru/sbrf/uvz/model/process/courtrequest/CourtInstance; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParams.class : , forfeit= , statefee= , otheramounts= ) %ru/sbrf/uvz/model/core/AbstractEntity java/io/Serializable append -(Ljava/lang/String;)Ljava/lang/StringBuilder; (I)Ljava/lang/StringBuilder; ! 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\courtrequest\TaskBPM.class : INFOREQUESTID   @ setInfoRequestId newInfoRequestId getInfoRequestPoint INFOREQUESTPOINT    setInfoRequestPoint newInfoRequestPoint getAsUDDocumentLink ASUDDOCUMENTLINK setAsUDDocumentLink newAsUDDocumentLink equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\DebtorsGroup.class : StackMapTable G()Ljava/util/Collection<Lru/sbrf/uvz/model/process/DebtorsGroupParty;>; RuntimeVisibleAnnotations Ljavax/persistence/OneToMany; mappedBy x_debtorsGroup getIteratorDebtorGroupParty ()Ljava/util/Iterator; Ljavax/persistence/Transient; setDebtorGroupParty (Ljava/util/Collection;)V newDebtorGroupParty LocalVariableTypeTable H(Ljava/util/Collection<Lru/sbrf/uvz/model/process/DebtorsGroupParty;>;)V addDebtorGroupParty 0(Lru/sbrf/uvz/model/process/DebtorsGroupParty;)V newDebtorsGroupParty -Lru/sbrf/uvz/model/process/DebtorsGroupParty; removeDebtorGroupParty oldDebtorsGroupParty removeAllDebtorGroupParty ()V iter Ljava/util/Iterator; i <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\DebtorsGroupParty.class : StackMapTable K()Ljava/util/Collection<Lru/sbrf/uvz/model/agregator/ReferenceMemberType;>; Ljavax/persistence/ManyToMany; Ljavax/persistence/JoinTable; MEMBERTYPE_DEBTORSGROUP_PARTY joinColumns DEBTORSGROUPPARTY_ID     inverseJoinColumns REFERENCEMEMBERTYPE_CODE CODE getIteratorGroupPartyRole ()Ljava/util/Iterator; Ljavax/persistence/Transient; setGroupPartyRole (Ljava/util/Collection;)V newGroupPartyRole LocalVariableTypeTable L(Ljava/util/Collection<Lru/sbrf/uvz/model/agregator/ReferenceMemberType;>;)V addGroupPartyRole 4(Lru/sbrf/uvz/model/agregator/ReferenceMemberType;)V newReferenceMemberType 1Lru/sbrf/uvz/model/agregator/ReferenceMemberType; removeGroupPartyRole oldReferenceMemberType removeAllGroupPartyRole ()V getX_debtorsGroup *()Lru/sbrf/uvz/model/process/DebtorsGroup; DEBTORSGROUP_ID setX_debtorsGroup +(Lru/sbrf/uvz/model/process/DebtorsGroup;)V oldDebtorsGroup newDebtorsGroup <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\DebtorsRegToolGroupParty.class : StackMapTable K()Ljava/util/Collection<Lru/sbrf/uvz/model/agregator/ReferenceMemberType;>; Ljavax/persistence/ManyToMany; mappedBy x_memberType getIteratorGroupPartyRole ()Ljava/util/Iterator; Ljavax/persistence/Transient; setGroupPartyRole (Ljava/util/Collection;)V newGroupPartyRole LocalVariableTypeTable L(Ljava/util/Collection<Lru/sbrf/uvz/model/agregator/ReferenceMemberType;>;)V addGroupPartyRole 4(Lru/sbrf/uvz/model/agregator/ReferenceMemberType;)V newReferenceMemberType 1Lru/sbrf/uvz/model/agregator/ReferenceMemberType; removeGroupPartyRole oldReferenceMemberType removeAllGroupPartyRole ()V getX_debtorsRegToolGroup 8()Lru/sbrf/uvz/model/process/DebtorsRegulationToolGroup; DEBTORSREGULATIONTOOLGROUP_ID setX_debtorsRegToolGroup 9(Lru/sbrf/uvz/model/process/DebtorsRegulationToolGroup;)V oldDebtorsRegulationToolGroup newDebtorsRegulationToolGroup <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroup.class : StackMapTable N()Ljava/util/Collection<Lru/sbrf/uvz/model/process/DebtorsRegToolGroupParty;>; RuntimeVisibleAnnotations Ljavax/persistence/OneToMany; mappedBy x_debtorsRegToolGroup getIteratorDebtorGroupParty ()Ljava/util/Iterator; Ljavax/persistence/Transient; setDebtorGroupParty (Ljava/util/Collection;)V newDebtorGroupParty LocalVariableTypeTable O(Ljava/util/Collection<Lru/sbrf/uvz/model/process/DebtorsRegToolGroupParty;>;)V addDebtorGroupParty 7(Lru/sbrf/uvz/model/process/DebtorsRegToolGroupParty;)V newDebtorsRegToolGroupParty 4Lru/sbrf/uvz/model/process/DebtorsRegToolGroupParty; removeDebtorGroupParty oldDebtorsRegToolGroupParty removeAllDebtorGroupParty ()V iter Ljava/util/Iterator; i <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\EmployeeUser.class : StackMapTable equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast r hashCode ()I I toString 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\EmployeeUserPK.class :   B C D login Ljava/lang/String; <init> ()V Code LineNumberTable LocalVariableTable this *Lru/sbrf/uvz/model/process/EmployeeUserPK; (Ljava/lang/String;)V getLogin ()Ljava/lang/String; setLogin newLogin equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\ProjectRoles.class : StackMapTable G()Ljava/util/Collection<Lru/sbrf/uvz/model/process/ProjectTeamMember;>; RuntimeVisibleAnnotations Ljavax/persistence/ManyToMany; mappedBy projectTeamRole getIteratorX_projectTeam ()Ljava/util/Iterator; Ljavax/persistence/Transient; setX_projectTeam (Ljava/util/Collection;)V newX_projectTeam LocalVariableTypeTable H(Ljava/util/Collection<Lru/sbrf/uvz/model/process/ProjectTeamMember;>;)V addX_projectTeam 0(Lru/sbrf/uvz/model/process/ProjectTeamMember;)V newProjectTeamMember -Lru/sbrf/uvz/model/process/ProjectTeamMember; removeX_projectTeam oldProjectTeamMember removeAllX_projectTeam ()V iter Ljava/util/Iterator; k <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\ProblemAssetRegulation.class : STRATEGY_CODE setRegulationStrategy '(Lru/sbrf/uvz/model/process/Strategy;)V newStrategy getX_client &()Lru/sbrf/uvz/model/agregator/Client; 	CLIENT_ID setX_client '(Lru/sbrf/uvz/model/agregator/Client;)V 	oldClient 	newClient <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\ProjectTeamMember.class : StackMapTable B()Ljava/util/Collection<Lru/sbrf/uvz/model/process/ProjectRoles;>; RuntimeVisibleAnnotations Ljavax/persistence/ManyToMany; Ljavax/persistence/JoinTable; name PROJECTTEAM_PROJECTROLES joinColumns Ljavax/persistence/JoinColumn; PROJECTTEAMMEMBER_ID referencedColumnName ID nullable     inverseJoinColumns PROJECTROLES_CODE CODE getIteratorProjectTeamRole ()Ljava/util/Iterator; Ljavax/persistence/Transient; setProjectTeamRole (Ljava/util/Collection;)V newProjectTeamRole LocalVariableTypeTable C(Ljava/util/Collection<Lru/sbrf/uvz/model/process/ProjectRoles;>;)V addProjectTeamRole +(Lru/sbrf/uvz/model/process/ProjectRoles;)V newProjectRoles (Lru/sbrf/uvz/model/process/ProjectRoles; removeProjectTeamRole oldProjectRoles removeAllProjectTeamRole ()V getX_problemAsset 4()Lru/sbrf/uvz/model/process/ProblemAssetRegulation; Ljavax/persistence/ManyToOne; PROBLEMASSETREG_SCENARIO_ID SCENARIO_ID    setX_problemAsset 5(Lru/sbrf/uvz/model/process/ProblemAssetRegulation;)V oldProblemAssetRegulation newProblemAssetRegulation getBankUser *()Lru/sbrf/uvz/model/process/EmployeeUser; Ljavax/persistence/OneToOne; EMPLOYEEUSER_LOGIN LOGIN setBankUser +(Lru/sbrf/uvz/model/process/EmployeeUser;)V newEmployeeUser <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefLegReqService.class : insertable 	updatable length   @ setServiceID (Ljava/lang/String;)V newServiceID getComplexityMode COMPLEXITYMODE setComplexityMode newComplexityMode equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefLegRequestComplexity.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 3Lru/sbrf/uvz/model/process/RefLegRequestComplexity; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefLegRequestPriority.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 1Lru/sbrf/uvz/model/process/RefLegRequestPriority; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\LegalRequest.class : JUSTIFICATION setJustification newJustification getDescription DESCRIPTION  � setDescription newDescription getOpinionBpmPo OPINIONBPMPO setOpinionBpmPo newOpinionBpmPo getCrossLinkBpmPo CROSSLINKBPMPO   � setCrossLinkBpmPo newCrossLinkBpmPo getCaseKeyBpmPo CASEKEYBPMPO setCaseKeyBpmPo newCaseKeyBpmPo getCasePerformerBpmPo CASEPERFORMERBPMPO setCasePerformerBpmPo newCasePerformerBpmPo getCrossLinkECM CROSSLINKECM setCrossLinkECM newCrossLinkECM equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefLegRequestType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this -Lru/sbrf/uvz/model/process/RefLegRequestType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefRegTaskState.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this +Lru/sbrf/uvz/model/process/RefRegTaskState; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefLegRequestSubType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 0Lru/sbrf/uvz/model/process/RefLegRequestSubType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefReqSpecDep.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this )Lru/sbrf/uvz/model/process/RefReqSpecDep; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefReqSpecDepType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this -Lru/sbrf/uvz/model/process/RefReqSpecDepType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPV.class : insertable 	updatable length   @ setStatusUPV (Ljava/lang/String;)V newStatusUPV equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefReqStatusesBpmPo.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this /Lru/sbrf/uvz/model/process/RefReqStatusesBpmPo; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefLegRequestCategory.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 1Lru/sbrf/uvz/model/process/RefLegRequestCategory; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RegPlanBlock.class : newPartyID equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RegPlanBlockType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this ,Lru/sbrf/uvz/model/process/RegPlanBlockType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RegPlanTask.class : newDateCreate getShortDescription SHORTDESCRIPTION setShortDescription newShortDescription equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RegTaskTemplate.class : newSubject getDuration ()Ljava/lang/Integer; DURATION setDuration (Ljava/lang/Integer;)V newDuration equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RegulationPlan.class : StackMapTable B()Ljava/util/Collection<Lru/sbrf/uvz/model/process/RegPlanBlock;>; RuntimeVisibleAnnotations Ljavax/persistence/OneToMany; mappedBy 	x_regPlan getIteratorBlocksInPlan ()Ljava/util/Iterator; Ljavax/persistence/Transient; setBlocksInPlan (Ljava/util/Collection;)V newBlocksInPlan LocalVariableTypeTable C(Ljava/util/Collection<Lru/sbrf/uvz/model/process/RegPlanBlock;>;)V addBlocksInPlan +(Lru/sbrf/uvz/model/process/RegPlanBlock;)V newRegPlanBlock (Lru/sbrf/uvz/model/process/RegPlanBlock; removeBlocksInPlan oldRegPlanBlock removeAllBlocksInPlan ()V iter Ljava/util/Iterator; � getProblemAssetReg 4()Lru/sbrf/uvz/model/process/ProblemAssetRegulation; Ljavax/persistence/ManyToOne; Ljavax/persistence/JoinColumn; name PROBLEMASSETREG_SCENARIO_ID referencedColumnName SCENARIO_ID nullable    setProblemAssetReg 5(Lru/sbrf/uvz/model/process/ProblemAssetRegulation;)V oldProblemAssetRegulation newProblemAssetRegulation <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RegulationTool.class : TOOLTYPE_CODE CODE setToolType '(Lru/sbrf/uvz/model/process/ToolType;)V newToolType getProblemAssetReg 4()Lru/sbrf/uvz/model/process/ProblemAssetRegulation; PROBLEMASSETREG_SCENARIO_ID SCENARIO_ID setProblemAssetReg 5(Lru/sbrf/uvz/model/process/ProblemAssetRegulation;)V oldProblemAssetRegulation newProblemAssetRegulation <init> equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\SpecDepRequest.class : StackMapTable getProblemAssetReg 4()Lru/sbrf/uvz/model/process/ProblemAssetRegulation; PROBLEMASSETREG_SCENARIO_ID setProblemAssetReg 5(Lru/sbrf/uvz/model/process/ProblemAssetRegulation;)V oldProblemAssetRegulation newProblemAssetRegulation getDecisionMaking -()Lru/sbrf/uvz/model/decision/DecisionMaking; DECISIONMAKING_SCENARIO_ID setDecisionMaking .(Lru/sbrf/uvz/model/decision/DecisionMaking;)V oldDecisionMaking newDecisionMaking <init> ()V equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast hashCode ()I I toString ()Ljava/lang/String; 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\Stage.class : insertable 	updatable length   @ setStageWorkStatus (Ljava/lang/String;)V newStageWorkStatus getStageType 	STAGETYPE setStageType newStageType getStageName 	STAGENAME   � setStageName newStageName equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\Strategy.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this $Lru/sbrf/uvz/model/process/Strategy; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\Scenario.class : CASEINITIATOR setCaseInitiator newCaseInitiator equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\TaskPK.class :   B C D task_key Ljava/lang/String; <init> ()V Code LineNumberTable LocalVariableTable this "Lru/sbrf/uvz/model/process/TaskPK; (Ljava/lang/String;)V getTask_key ()Ljava/lang/String; setTask_key newTask_key equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\Task.class : insertable 	updatable length   � setTask_key (Ljava/lang/String;)V newTask_key getCreateDateTime ()Ljava/util/Date; Ljavax/persistence/Basic; optional Ljavax/persistence/Temporal; value  Ljavax/persistence/TemporalType; 	TIMESTAMP CREATEDATETIME setCreateDateTime (Ljava/util/Date;)V newCreateDateTime getDeadlineDateTime DEADLINEDATETIME setDeadlineDateTime newDeadlineDateTime getTask_name 	TASK_NAME setTask_name newTask_name 	getTaskPK $()Lru/sbrf/uvz/model/process/TaskPK; Ljavax/persistence/Transient; 	setTaskPK %(Lru/sbrf/uvz/model/process/TaskPK;)V pk "Lru/sbrf/uvz/model/process/TaskPK; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast � hashCode ()I I toString 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\TaskType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this $Lru/sbrf/uvz/model/process/TaskType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\ToolType.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this $Lru/sbrf/uvz/model/process/ToolType; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\classes\ru\sbrf\uvz\model\process\RefLegRequestSubject.class :   . 0 1 <init> ()V Code LineNumberTable LocalVariableTable this 0Lru/sbrf/uvz/model/process/RefLegRequestSubject; equals (Ljava/lang/Object;)Z other Ljava/lang/Object; cast 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\Account_91315Test.class : testDelete testFindByCalculationDate calculationDate Ljava/util/Date; account_91315s Ljava/util/List; result testGetAccount_91315List 	preInsert -()Lru/sbrf/uvz/model/agregator/Account_91315; doInsert .(Lru/sbrf/uvz/model/agregator/Account_91315;)V afterInsert anotherAccount_91315 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCalculationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldAccount_91315s 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\AddressTest.class : isMainAddress testFindByFullAddressWithoutZIP fullAddressWithoutZIP testGetAddressList 	preInsert '()Lru/sbrf/uvz/model/agregator/Address; doInsert ((Lru/sbrf/uvz/model/agregator/Address;)V afterInsert anotherAddress 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByZip $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldAddresss 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\AgreementTest.class : resultList 	preInsert )()Lru/sbrf/uvz/model/agregator/Agreement; doInsert *(Lru/sbrf/uvz/model/agregator/Agreement;)V afterInsert anotherAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementNumber $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\BankruptcyStageTest.class : testDelete testGetBankruptcyStageList bankruptcyStages Ljava/util/List; result 	preInsert /()Lru/sbrf/uvz/model/agregator/BankruptcyStage; doInsert 0(Lru/sbrf/uvz/model/agregator/BankruptcyStage;)V afterInsert anotherBankruptcyStage 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetBankruptcyStageList ()Ljava/util/List; it Ljava/util/Iterator; i I oldBankruptcyStages size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\BusinessPersonEntityTest.class : issuePlace testFindBySerNumOfDoc serNumOfDoc testGetBusinessPersonEntityList 	preInsert 4()Lru/sbrf/uvz/model/agregator/BusinessPersonEntity; doInsert 5(Lru/sbrf/uvz/model/agregator/BusinessPersonEntity;)V afterInsert anotherBusinessPersonEntity 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByFullName $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldBusinessPersonEntitys 
12 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\custom\LegalEntityWithIndustryTest.class : testFindByKpp kpp testFindByBranch branch Z testGetLegalEntityList 	preInsert +()Lru/sbrf/uvz/model/agregator/LegalEntity; doInsert ,(Lru/sbrf/uvz/model/agregator/LegalEntity;)V afterInsert anotherLegalEntity 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CaseBookRefTest.class : resultList 	preInsert +()Lru/sbrf/uvz/model/agregator/CaseBookRef; doInsert ,(Lru/sbrf/uvz/model/agregator/CaseBookRef;)V afterInsert anotherCaseBookRef 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByEffectiveTo "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldCaseBookRefs 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CaseCategoryTest.class : caseCategorys Ljava/util/List; result 	preInsert ,()Lru/sbrf/uvz/model/agregator/CaseCategory; doInsert -(Lru/sbrf/uvz/model/agregator/CaseCategory;)V afterInsert anotherCaseCategory 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCaseCategoryList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCaseCategorys size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CaseParticipantTest.class : testDelete testGetCaseParticipantList caseParticipants Ljava/util/List; result 	preInsert /()Lru/sbrf/uvz/model/agregator/CaseParticipant; doInsert 0(Lru/sbrf/uvz/model/agregator/CaseParticipant;)V afterInsert anotherCaseParticipant 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCaseParticipantList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCaseParticipants size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CaseStageTest.class : caseStages Ljava/util/List; result 	preInsert )()Lru/sbrf/uvz/model/agregator/CaseStage; doInsert *(Lru/sbrf/uvz/model/agregator/CaseStage;)V afterInsert anotherCaseStage 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCaseStageList ()Ljava/util/List; it Ljava/util/Iterator; i I 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CaseTypeTest.class : testDelete testGetCaseTypeList 	caseTypes Ljava/util/List; result 	preInsert (()Lru/sbrf/uvz/model/agregator/CaseType; doInsert )(Lru/sbrf/uvz/model/agregator/CaseType;)V afterInsert anotherCaseType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCaseTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCaseTypes size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CBArbitrationCaseTest.class : testDelete testFindByRegistrationDate registrationDate Ljava/util/Date; cBArbitrationCases Ljava/util/List; result testFindBySimpleJusticeFlag simpleJusticeFlag testGetCBArbitrationCaseList 	preInsert 1()Lru/sbrf/uvz/model/agregator/CBArbitrationCase; doInsert 2(Lru/sbrf/uvz/model/agregator/CBArbitrationCase;)V afterInsert anotherCBArbitrationCase 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByRegistrationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldCBArbitrationCases 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CBCourtCaseTest.class : resultList 	preInsert +()Lru/sbrf/uvz/model/agregator/CBCourtCase; doInsert ,(Lru/sbrf/uvz/model/agregator/CBCourtCase;)V afterInsert anotherCBCourtCase 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCase_id $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldCBCourtCases 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ClientCriteriaProblemTest.class : testDelete testFindByDateFrom dateFrom Ljava/util/Date; clientCriteriaProblems Ljava/util/List; result testFindByEndDate endDate testFindByNumberCriteriaProblem numberCriteriaProblem testFindByNameCriteriaProblem nameCriteriaProblem  testGetClientCriteriaProblemList 	preInsert 5()Lru/sbrf/uvz/model/agregator/ClientCriteriaProblem; doInsert 6(Lru/sbrf/uvz/model/agregator/ClientCriteriaProblem;)V afterInsert anotherClientCriteriaProblem 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDateFrom "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldClientCriteriaProblems 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ClientRatingTest.class : clientRatings Ljava/util/List; result testFindByApprovalDate approvalDate Ljava/util/Date; testFindByPd pd testGetClientRatingList 	preInsert ,()Lru/sbrf/uvz/model/agregator/ClientRating; doInsert -(Lru/sbrf/uvz/model/agregator/ClientRating;)V afterInsert anotherClientRating 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByRating %(Ljava/lang/Integer;)Ljava/util/List; it Ljava/util/Iterator; i I oldClientRatings 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ClientTest.class : anotherClient 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetClientList ()Ljava/util/List; it Ljava/util/Iterator; i I 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ClientTest.class :  i 2Queried result does not equal to inserted instance x � v x x 1Queried result does not equal to updated instance  Inserted instance is not deleted � � �  "ru/sbrf/uvz/model/agregator/Client!"#$"%& �' +Result returned by get-client-list is null.( 6Result count returned by get-client-list is incorrect.)*+ LResult returned by get-client-list does not equal to inserted client object. Query result is null,- <Associaton creditAgreementInfo does not equal queried result./0123- :Associaton clientLoanBalance does not equal queried result ?Party getPartyInfo() is not identical with the queried result! 45 � x � i67 � i8 i junit/framework/TestSuite _9 junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ContactOrganizationTest.class : testDelete testFindByIsMain isMain Ljava/lang/Boolean; contactOrganizations Ljava/util/List; result testFindByRelation relation testGetContactOrganizationList 	preInsert 3()Lru/sbrf/uvz/model/agregator/ContactOrganization; doInsert 4(Lru/sbrf/uvz/model/agregator/ContactOrganization;)V afterInsert anotherContactOrganization 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIsMain %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldContactOrganizations 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ContactTest.class : resultList 	preInsert '()Lru/sbrf/uvz/model/agregator/Contact; doInsert ((Lru/sbrf/uvz/model/agregator/Contact;)V afterInsert anotherContact 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIsPrimary %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldContacts 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CreditAgreementTest.class : lastRestrDate testFindByOverdueDebtDayCount overdueDebtDayCount !testFindByOverdueInterestDayCount overdueInterestDayCount testFindByOverdueDaysCount overdueDaysCount testFindByIsHomoPortfolio isHomoPortfolio testFindByIsTransferToBCI isTransferToBCI "testFindByIsRefinancForDefRestruct isRefinancForDefRestruct testFindByRefinOfRestructDate refinOfRestructDate $testFindByIsRenewableCLForAccounting isRenewableCLForAccounting "testFindByIsOverdraftForAccounting isOverdraftForAccounting testFindByIsSuspTermsForAgr isSuspTermsForAgr testFindByNextRepricingDate nextRepricingDate testFindByPrevRepricingDate prevRepricingDate testFindByRateRevisionPeriod rateRevisionPeriod testFindByDateClaimNotice dateClaimNotice testFindByAgrNumbRefundAdvance agrNumbRefundAdvance testGetCreditAgreementList testNavigation 	preInsert /()Lru/sbrf/uvz/model/agregator/CreditAgreement; doInsert 0(Lru/sbrf/uvz/model/agregator/CreditAgreement;)V afterInsert anotherCreditAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldCreditAgreements 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\CreditDebtTest.class : testDelete testGetCreditDebtList creditDebts Ljava/util/List; result 	preInsert *()Lru/sbrf/uvz/model/agregator/CreditDebt; doInsert +(Lru/sbrf/uvz/model/agregator/CreditDebt;)V afterInsert anotherCreditDebt 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCreditDebtList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCreditDebts size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\DebtTest.class : resultList 	preInsert $()Lru/sbrf/uvz/model/agregator/Debt; doInsert %(Lru/sbrf/uvz/model/agregator/Debt;)V afterInsert anotherDebt 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCalculationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldDebts 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\Issued_For_caseTest.class : testDelete testFindByCalculationDate calculationDate Ljava/util/Date; issued_For_cases Ljava/util/List; result testGetIssued_For_caseList 	preInsert /()Lru/sbrf/uvz/model/agregator/Issued_For_case; doInsert 0(Lru/sbrf/uvz/model/agregator/Issued_For_case;)V afterInsert anotherIssued_For_case 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCalculationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldIssued_For_cases 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\KommersantEventTest.class : effectiveFrom testFindByEffectiveTo effectiveTo testGetKommersantEventList 	preInsert /()Lru/sbrf/uvz/model/agregator/KommersantEvent; doInsert 0(Lru/sbrf/uvz/model/agregator/KommersantEvent;)V afterInsert anotherKommersantEvent 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\LegalEntityTest.class : testFindByKpp kpp testFindByBranch branch Ljava/lang/Boolean; testGetLegalEntityList 	preInsert +()Lru/sbrf/uvz/model/agregator/LegalEntity; doInsert ,(Lru/sbrf/uvz/model/agregator/LegalEntity;)V afterInsert anotherLegalEntity 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\LegalOwnerTest.class : testDelete testFindBySharePerc 	sharePerc legalOwners Ljava/util/List; result testFindBySharePossPeriod sharePossPeriod Ljava/lang/Integer; testFindByShareComment shareComment testGetLegalOwnerList 	preInsert *()Lru/sbrf/uvz/model/agregator/LegalOwner; doInsert +(Lru/sbrf/uvz/model/agregator/LegalOwner;)V afterInsert anotherLegalOwner 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySharePerc $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldLegalOwners 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\LimitTest.class : testDelete testFindByCalculationDate calculationDate Ljava/util/Date; limits Ljava/util/List; result testGetLimitList 	preInsert %()Lru/sbrf/uvz/model/agregator/Limit; doInsert &(Lru/sbrf/uvz/model/agregator/Limit;)V afterInsert anotherLimit 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCalculationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldLimits 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\LoanBalanceInfoTest.class : testDelete testFindBySettlementDate settlementDate Ljava/util/Date; loanBalanceInfos Ljava/util/List; result testGetLoanBalanceInfoList 	preInsert /()Lru/sbrf/uvz/model/agregator/LoanBalanceInfo; doInsert 0(Lru/sbrf/uvz/model/agregator/LoanBalanceInfo;)V afterInsert anotherLoanBalanceInfo 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySettlementDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldLoanBalanceInfos 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\OrganizationTest.class : resultList 	preInsert ,()Lru/sbrf/uvz/model/agregator/Organization; doInsert -(Lru/sbrf/uvz/model/agregator/Organization;)V afterInsert anotherOrganization 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByRegistrationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldOrganizations 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\PartyTest.class : resultList 	preInsert %()Lru/sbrf/uvz/model/agregator/Party; doInsert &(Lru/sbrf/uvz/model/agregator/Party;)V afterInsert anotherParty 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByParty_ID $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldPartys 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\PartyTest.class : SourceFile PartyTest.java � � java/util/Random �� � ���� � � %ru/sbrf/uvz/model/agregator/PartyTest��� � � Test insert begins!��� � � � � � � Test insert ends! Test update begins! � � � � � � Test update ends! Test delete begins! � � � � � � Test delete ends! Test find-by-party_ID begins!���������� java/util/ArrayList � � � � � � � � Test find-by-party_ID ends! Test find-by-inn begins! � � � � � � Test find-by-inn ends! Test get-party-list begins! � � � � � � Test get-party-list ends! Test navigation begins! � � � � � � Test navigation ends! Test inheritance begins! � � � ��� � � � Test inheritance ends!���� �� ����� 2Queried result does not equal to inserted instance��� � � �� �� � 1Queried result does not equal to updated instance  Inserted instance is not deleted��� ��������� !ru/sbrf/uvz/model/agregator/Party��� ��� �� ,Result returned by find-by-party_ID is null.�� 7Result count returned by find-by-party_ID is incorrect.���� LResult returned by find-by-party_ID does not equal to inserted party object.� �� � 'Result returned by find-by-inn is null. 2Result count returned by find-by-inn is incorrect. GResult returned by find-by-inn does not equal to inserted party object. *Result returned by get-party-list is null. 5Result count returned by get-party-list is incorrect. JResult returned by get-party-list does not equal to inserted party object. Query result is null AClient getClientInfo() is not identical with the queried result! ���� ?Associaton provisionAgreementInfo does not equal queried result������� :Associaton partySourceSystem does not equal queried result java/util/HashMap�������� (ru/sbrf/uvz/model/agregator/Organization����� 0ru/sbrf/uvz/model/agregator/BusinessPersonEntity����� 'ru/sbrf/uvz/model/agregator/LegalEntity����� "ru/sbrf/uvz/model/agregator/Person��� java/lang/Class�� java/lang/StringBuilder Query result by ���� " does not equal to inserted object�� "Queried object is not instance of �� � � � ��� � �� � junit/framework/TestSuite �� junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\PersonTest.class : anotherPerson 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySurname $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ProvisionAgreementTest.class : testDelete testFindByStartDate 	startDate Ljava/util/Date; provisionAgreements Ljava/util/List; result testFindByCollareteralRights collareteralRights testFindByLocation location testFindByAnalyticalAccount analyticalAccount testFindByPlanLoanRepaymentDate planLoanRepaymentDate testGetProvisionAgreementList 	preInsert 2()Lru/sbrf/uvz/model/agregator/ProvisionAgreement; doInsert 3(Lru/sbrf/uvz/model/agregator/ProvisionAgreement;)V afterInsert anotherProvisionAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByStartDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldProvisionAgreements 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ProvisionOfCreditAgreementTest.class : testDelete %testGetProvisionOfCreditAgreementList provisionOfCreditAgreements Ljava/util/List; result 	preInsert :()Lru/sbrf/uvz/model/agregator/ProvisionOfCreditAgreement; doInsert ;(Lru/sbrf/uvz/model/agregator/ProvisionOfCreditAgreement;)V afterInsert !anotherProvisionOfCreditAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete $preGetProvisionOfCreditAgreementList ()Ljava/util/List; it Ljava/util/Iterator; i I oldProvisionOfCreditAgreements size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\EmailTest.class : testDelete testFindByAddress address emails Ljava/util/List; result testGetEmailList 	preInsert %()Lru/sbrf/uvz/model/agregator/Email; doInsert &(Lru/sbrf/uvz/model/agregator/Email;)V afterInsert anotherEmail 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAddress $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldEmails 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\PhoneTest.class : testDelete testFindByPhoneNumber phoneNumber phones Ljava/util/List; result testGetPhoneList 	preInsert %()Lru/sbrf/uvz/model/agregator/Phone; doInsert &(Lru/sbrf/uvz/model/agregator/Phone;)V afterInsert anotherPhone 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByPhoneNumber $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldPhones 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.class : testDelete testFindByFullDescription fullDescription refCreditGrantingRegulations Ljava/util/List; result &testGetRefCreditGrantingRegulationList testNavigation 	preInsert ;()Lru/sbrf/uvz/model/agregator/RefCreditGrantingRegulation; doInsert <(Lru/sbrf/uvz/model/agregator/RefCreditGrantingRegulation;)V afterInsert "anotherRefCreditGrantingRegulation 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByFullDescription $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRefCreditGrantingRegulations 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\RefCreditGrantingRegulationTest.class : SourceFile $RefCreditGrantingRegulationTest.java j k java/util/Random j b c d e ;ru/sbrf/uvz/model/agregator/RefCreditGrantingRegulationTest h i Test insert begins! � � � � � � Test insert ends! Test update begins! � � � � � � Test update ends! Test delete begins! � � � � � � Test delete ends! $Test find-by-fullDescription begins! !"#$%&'( java/util/ArrayList j t � � � � � � "Test find-by-fullDescription ends! 1Test get-refCreditGrantingRegulation-list begins! � � � � � � /Test get-refCreditGrantingRegulation-list ends! Test navigation begins! � � � � � � Test navigation ends!)*+, � f g-. t/012 2Queried result does not equal to inserted instance345 � � �6 �7 � 1Queried result does not equal to updated instance  Inserted instance is not deleted89: �;<=>?@ 7ru/sbrf/uvz/model/agregator/RefCreditGrantingRegulationA%B kCD �E 3Result returned by find-by-fullDescription is null.F9 >Result count returned by find-by-fullDescription is incorrect.3GHI iResult returned by find-by-fullDescription does not equal to inserted refCreditGrantingRegulation object.J � @Result returned by get-refCreditGrantingRegulation-list is null. KResult count returned by get-refCreditGrantingRegulation-list is incorrect. vResult returned by get-refCreditGrantingRegulation-list does not equal to inserted refCreditGrantingRegulation object. Query result is null LExtIdentityContainer getExtuids() is not identical with the queried result! KL � � � tMN � tO t junit/framework/TestSuite jP junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\PublicationsEFRSBTest.class : testDelete testFindByIdFile idFile publicationsEFRSBs Ljava/util/List; result testFindByNameFile nameFile testFindByDateNameFile dateNameFile Ljava/util/Date; testFindByNameOfOrganizFromFile nameOfOrganizFromFile testFindByInnFromFile innFromFile testFindByOgrnFromFile ogrnFromFile testFindByTypeOfSourceFromFile typeOfSourceFromFile Ljava/lang/Integer; testFindByTypeOfMessageFromFile typeOfMessageFromFile testFindByNumberFromFile numberFromFile testFindByPublishDateFromFile publishDateFromFile testFindByMessageInfoFromFile messageInfoFromFile testFindByCodeFromFile codeFromFile testFindByMessageDataIDFromFile messageDataIDFromFile testFindByDateIncludeFromFile dateIncludeFromFile testFindBySignOfClientOfBank signOfClientOfBank Ljava/lang/Boolean; testFindBySignOfExistOfProcess signOfExistOfProcess !testFindBySignOfExistOfBankruptcy signOfExistOfBankruptcy testGetPublicationsEFRSBList 	preInsert 1()Lru/sbrf/uvz/model/agregator/PublicationsEFRSB; doInsert 2(Lru/sbrf/uvz/model/agregator/PublicationsEFRSB;)V afterInsert anotherPublicationsEFRSB 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIdFile $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldPublicationsEFRSBs 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\IdTypeTest.class : anotherIdType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySystemID $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceAddressTypeTest.class : testDelete testGetReferenceAddressTypeList referenceAddressTypes Ljava/util/List; result 	preInsert 4()Lru/sbrf/uvz/model/agregator/ReferenceAddressType; doInsert 5(Lru/sbrf/uvz/model/agregator/ReferenceAddressType;)V afterInsert anotherReferenceAddressType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceAddressTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceAddressTypes size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceActivitiesTest.class : testDelete testGetReferenceActivitiesList referenceActivitiess Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/agregator/ReferenceActivities; doInsert 4(Lru/sbrf/uvz/model/agregator/ReferenceActivities;)V afterInsert anotherReferenceActivities 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceActivitiesList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceActivitiess size 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceBankStructureTest.class : StackMapTableu doInsert 7(Lru/sbrf/uvz/model/agregator/ReferenceBankStructure;)V afterInsert anotherReferenceBankStructure 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByTerbankCode $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceBankStructures 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceCollateralAgreementTypeTest.class : testDelete +testGetReferenceCollateralAgreementTypeList !referenceCollateralAgreementTypes Ljava/util/List; result 	preInsert @()Lru/sbrf/uvz/model/agregator/ReferenceCollateralAgreementType; doInsert A(Lru/sbrf/uvz/model/agregator/ReferenceCollateralAgreementType;)V afterInsert 'anotherReferenceCollateralAgreementType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete *preGetReferenceCollateralAgreementTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I $oldReferenceCollateralAgreementTypes size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceCountryTest.class : testDelete testGetReferenceCountryList referenceCountrys Ljava/util/List; result 	preInsert 0()Lru/sbrf/uvz/model/agregator/ReferenceCountry; doInsert 1(Lru/sbrf/uvz/model/agregator/ReferenceCountry;)V afterInsert anotherReferenceCountry 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceCountryList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceCountrys size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceCrAgrStatusTest.class : testDelete testFindByIdDRPA idDRPA referenceCrAgrStatuss Ljava/util/List; result testGetReferenceCrAgrStatusList 	preInsert 4()Lru/sbrf/uvz/model/agregator/ReferenceCrAgrStatus; doInsert 5(Lru/sbrf/uvz/model/agregator/ReferenceCrAgrStatus;)V afterInsert anotherReferenceCrAgrStatus 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIdDRPA $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceCrAgrStatuss 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.class : testDelete testGetReferenceCurrencyList referenceCurrencys Ljava/util/List; result testNavigation 	preInsert 1()Lru/sbrf/uvz/model/agregator/ReferenceCurrency; doInsert 2(Lru/sbrf/uvz/model/agregator/ReferenceCurrency;)V afterInsert anotherReferenceCurrency 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceCurrencyList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceCurrencys size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceCurrencyTest.class :  -ru/sbrf/uvz/model/agregator/ReferenceCurrency � 6Result returned by get-referenceCurrency-list is null.	 AResult count returned by get-referenceCurrency-list is incorrect. bResult returned by get-referenceCurrency-list does not equal to inserted referenceCurrency object. Query result is null LExtIdentityContainer getExtuids() is not identical with the queried result!  � r � c � c  c junit/framework/TestSuite Y! junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.class : testDelete (testGetReferenceDebtServicingQualityList referenceDebtServicingQualitys Ljava/util/List; result testNavigation 	preInsert =()Lru/sbrf/uvz/model/agregator/ReferenceDebtServicingQuality; doInsert >(Lru/sbrf/uvz/model/agregator/ReferenceDebtServicingQuality;)V afterInsert $anotherReferenceDebtServicingQuality 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete 'preGetReferenceDebtServicingQualityList ()Ljava/util/List; it Ljava/util/Iterator; i I !oldReferenceDebtServicingQualitys size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceDebtServicingQualityTest.class :  9ru/sbrf/uvz/model/agregator/ReferenceDebtServicingQuality � BResult returned by get-referenceDebtServicingQuality-list is null.	 MResult count returned by get-referenceDebtServicingQuality-list is incorrect. zResult returned by get-referenceDebtServicingQuality-list does not equal to inserted referenceDebtServicingQuality object. Query result is null LExtIdentityContainer getExtuids() is not identical with the queried result!  � r � c � c  c junit/framework/TestSuite Y! junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceEmailTypeTest.class : testDelete testGetReferenceEmailTypeList referenceEmailTypes Ljava/util/List; result 	preInsert 2()Lru/sbrf/uvz/model/agregator/ReferenceEmailType; doInsert 3(Lru/sbrf/uvz/model/agregator/ReferenceEmailType;)V afterInsert anotherReferenceEmailType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceEmailTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceEmailTypes size 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceIndustryTest.class : testDelete testGetReferenceIndustryList referenceIndustrys Ljava/util/List; result 	preInsert 1()Lru/sbrf/uvz/model/agregator/ReferenceIndustry; doInsert 2(Lru/sbrf/uvz/model/agregator/ReferenceIndustry;)V afterInsert anotherReferenceIndustry 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceIndustryList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceIndustrys size 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.class : testDelete #testGetReferenceLendingModeTypeList referenceLendingModeTypes Ljava/util/List; result testNavigation 	preInsert 8()Lru/sbrf/uvz/model/agregator/ReferenceLendingModeType; doInsert 9(Lru/sbrf/uvz/model/agregator/ReferenceLendingModeType;)V afterInsert anotherReferenceLendingModeType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete "preGetReferenceLendingModeTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceLendingModeTypes size 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceLoanAgrStatusTest.class : testDelete !testGetReferenceLoanAgrStatusList referenceLoanAgrStatuss Ljava/util/List; result 	preInsert 6()Lru/sbrf/uvz/model/agregator/ReferenceLoanAgrStatus; doInsert 7(Lru/sbrf/uvz/model/agregator/ReferenceLoanAgrStatus;)V afterInsert anotherReferenceLoanAgrStatus 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete  preGetReferenceLoanAgrStatusList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceLoanAgrStatuss size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.class : testDelete testGetReferenceloanTypeList referenceloanTypes Ljava/util/List; result testNavigation 	preInsert 1()Lru/sbrf/uvz/model/agregator/ReferenceloanType; doInsert 2(Lru/sbrf/uvz/model/agregator/ReferenceloanType;)V afterInsert anotherReferenceloanType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceloanTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceloanTypes size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceloanTypeTest.class :  -ru/sbrf/uvz/model/agregator/ReferenceloanType � 6Result returned by get-referenceloanType-list is null.	 AResult count returned by get-referenceloanType-list is incorrect. bResult returned by get-referenceloanType-list does not equal to inserted referenceloanType object. Query result is null LExtIdentityContainer getExtuids() is not identical with the queried result!  � r � c � c  c junit/framework/TestSuite Y! junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceMemberTypeTest.class : testDelete testFindByBpmPOCode 	bpmPOCode referenceMemberTypes Ljava/util/List; result testGetReferenceMemberTypeList 	preInsert 3()Lru/sbrf/uvz/model/agregator/ReferenceMemberType; doInsert 4(Lru/sbrf/uvz/model/agregator/ReferenceMemberType;)V afterInsert anotherReferenceMemberType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByBpmPOCode $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceMemberTypes 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceMISProductTest.class : testDelete testGetReferenceMISProductList referenceMISProducts Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/agregator/ReferenceMISProduct; doInsert 4(Lru/sbrf/uvz/model/agregator/ReferenceMISProduct;)V afterInsert anotherReferenceMISProduct 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceMISProductList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceMISProducts size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferencePledgeTypeTest.class : testDelete testGetReferencePledgeTypeList referencePledgeTypes Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/agregator/ReferencePledgeType; doInsert 4(Lru/sbrf/uvz/model/agregator/ReferencePledgeType;)V afterInsert anotherReferencePledgeType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferencePledgeTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferencePledgeTypes size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceProblemGroupTest.class : testDelete  testGetReferenceProblemGroupList referenceProblemGroups Ljava/util/List; result 	preInsert 5()Lru/sbrf/uvz/model/agregator/ReferenceProblemGroup; doInsert 6(Lru/sbrf/uvz/model/agregator/ReferenceProblemGroup;)V afterInsert anotherReferenceProblemGroup 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceProblemGroupList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceProblemGroups size 
26 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceRateStatusTest.class : testDelete testGetReferenceRateStatusList referenceRateStatuss Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/agregator/ReferenceRateStatus; doInsert 4(Lru/sbrf/uvz/model/agregator/ReferenceRateStatus;)V afterInsert anotherReferenceRateStatus 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceRateStatusList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceRateStatuss size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceRegionRussiaTest.class : testDelete  testGetReferenceRegionRussiaList referenceRegionRussias Ljava/util/List; result 	preInsert 5()Lru/sbrf/uvz/model/agregator/ReferenceRegionRussia; doInsert 6(Lru/sbrf/uvz/model/agregator/ReferenceRegionRussia;)V afterInsert anotherReferenceRegionRussia 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceRegionRussiaList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceRegionRussias size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceResidentTest.class : testDelete testGetReferenceResidentList referenceResidents Ljava/util/List; result 	preInsert 1()Lru/sbrf/uvz/model/agregator/ReferenceResident; doInsert 2(Lru/sbrf/uvz/model/agregator/ReferenceResident;)V afterInsert anotherReferenceResident 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceResidentList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceResidents size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceSegmentTest.class : testDelete testGetReferenceSegmentList referenceSegments Ljava/util/List; result 	preInsert 0()Lru/sbrf/uvz/model/agregator/ReferenceSegment; doInsert 1(Lru/sbrf/uvz/model/agregator/ReferenceSegment;)V afterInsert anotherReferenceSegment 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceSegmentList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceSegments size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceStatusCriteriaTest.class : testDelete "testGetReferenceStatusCriteriaList referenceStatusCriterias Ljava/util/List; result 	preInsert 7()Lru/sbrf/uvz/model/agregator/ReferenceStatusCriteria; doInsert 8(Lru/sbrf/uvz/model/agregator/ReferenceStatusCriteria;)V afterInsert anotherReferenceStatusCriteria 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete !preGetReferenceStatusCriteriaList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceStatusCriterias size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceStreetTypeTest.class : testDelete testGetReferenceStreetTypeList referenceStreetTypes Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/agregator/ReferenceStreetType; doInsert 4(Lru/sbrf/uvz/model/agregator/ReferenceStreetType;)V afterInsert anotherReferenceStreetType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceStreetTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceStreetTypes size 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceLendingModeTypeTest.class :  4ru/sbrf/uvz/model/agregator/ReferenceLendingModeType � =Result returned by get-referenceLendingModeType-list is null.	 HResult count returned by get-referenceLendingModeType-list is incorrect. pResult returned by get-referenceLendingModeType-list does not equal to inserted referenceLendingModeType object. Query result is null LExtIdentityContainer getExtuids() is not identical with the queried result!  � r � c � c  c junit/framework/TestSuite Y! junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceTelephonTypeTest.class : testDelete  testGetReferenceTelephonTypeList referenceTelephonTypes Ljava/util/List; result 	preInsert 5()Lru/sbrf/uvz/model/agregator/ReferenceTelephonType; doInsert 6(Lru/sbrf/uvz/model/agregator/ReferenceTelephonType;)V afterInsert anotherReferenceTelephonType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceTelephonTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceTelephonTypes size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\RefIdentificationDocumentKindTest.class : testDelete (testGetRefIdentificationDocumentKindList refIdentificationDocumentKinds Ljava/util/List; result 	preInsert =()Lru/sbrf/uvz/model/agregator/RefIdentificationDocumentKind; doInsert >(Lru/sbrf/uvz/model/agregator/RefIdentificationDocumentKind;)V afterInsert $anotherRefIdentificationDocumentKind 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete 'preGetRefIdentificationDocumentKindList ()Ljava/util/List; it Ljava/util/Iterator; i I !oldRefIdentificationDocumentKinds size 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\RelatedBorrowersGroupTest.class : testFindByGsz gsz  testGetRelatedBorrowersGroupList 	preInsert 5()Lru/sbrf/uvz/model/agregator/RelatedBorrowersGroup; doInsert 6(Lru/sbrf/uvz/model/agregator/RelatedBorrowersGroup;)V afterInsert anotherRelatedBorrowersGroup 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByGsz_ID $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRelatedBorrowersGroups 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\SideTypeTest.class : testDelete testGetSideTypeList 	sideTypes Ljava/util/List; result 	preInsert (()Lru/sbrf/uvz/model/agregator/SideType; doInsert )(Lru/sbrf/uvz/model/agregator/SideType;)V afterInsert anotherSideType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetSideTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldSideTypes size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceLegalFormTest.class : testDelete testFindByBpmPOCode 	bpmPOCode referenceLegalForms Ljava/util/List; result testGetReferenceLegalFormList 	preInsert 2()Lru/sbrf/uvz/model/agregator/ReferenceLegalForm; doInsert 3(Lru/sbrf/uvz/model/agregator/ReferenceLegalForm;)V afterInsert anotherReferenceLegalForm 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByBpmPOCode $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceLegalForms 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\TypeOfSourceAndMessageTest.class : testDelete testFindByMessageTypeEFRSB messageTypeEFRSB typeOfSourceAndMessages Ljava/util/List; result testFindByValueOfSourceType valueOfSourceType Ljava/lang/Integer; testFindByValueOfMessageType valueOfMessageType !testGetTypeOfSourceAndMessageList 	preInsert 6()Lru/sbrf/uvz/model/agregator/TypeOfSourceAndMessage; doInsert 7(Lru/sbrf/uvz/model/agregator/TypeOfSourceAndMessage;)V afterInsert anotherTypeOfSourceAndMessage 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByMessageTypeEFRSB $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldTypeOfSourceAndMessages 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReserveTest.class : testDelete testFindByCalculationDate calculationDate Ljava/util/Date; reserves Ljava/util/List; result testGetReserveList 	preInsert '()Lru/sbrf/uvz/model/agregator/Reserve; doInsert ((Lru/sbrf/uvz/model/agregator/Reserve;)V afterInsert anotherReserve 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCalculationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldReserves 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\agregator\ReferenceLoanQualityCategoryTest.class : testDelete testFindByIdDRPA idDRPA referenceLoanQualityCategorys Ljava/util/List; result 'testGetReferenceLoanQualityCategoryList 	preInsert <()Lru/sbrf/uvz/model/agregator/ReferenceLoanQualityCategory; doInsert =(Lru/sbrf/uvz/model/agregator/ReferenceLoanQualityCategory;)V afterInsert #anotherReferenceLoanQualityCategory 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIdDRPA $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I  oldReferenceLoanQualityCategorys 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\AgreedStatusTest.class : agreedStatuss Ljava/util/List; result 	preInsert -()Lru/sbrf/uvz/model/bankruptcy/AgreedStatus; doInsert .(Lru/sbrf/uvz/model/bankruptcy/AgreedStatus;)V afterInsert anotherAgreedStatus 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetAgreedStatusList ()Ljava/util/List; it Ljava/util/Iterator; i I oldAgreedStatuss size 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ApplConsiderationResultTest.class : testDelete "testGetApplConsiderationResultList applConsiderationResults Ljava/util/List; result 	preInsert 8()Lru/sbrf/uvz/model/bankruptcy/ApplConsiderationResult; doInsert 9(Lru/sbrf/uvz/model/bankruptcy/ApplConsiderationResult;)V afterInsert anotherApplConsiderationResult 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete !preGetApplConsiderationResultList ()Ljava/util/List; it Ljava/util/Iterator; i I oldApplConsiderationResults size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\AuTest.class : StackMapTable� doInsert $(Lru/sbrf/uvz/model/bankruptcy/Au;)V afterInsert 	anotherAu 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySurnameAU $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldAus 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\BankPositionTest.class : bankPositions Ljava/util/List; result testGetBankPositionList 	preInsert -()Lru/sbrf/uvz/model/bankruptcy/BankPosition; doInsert .(Lru/sbrf/uvz/model/bankruptcy/BankPosition;)V afterInsert anotherBankPosition 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByClient_type $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldBankPositions 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\BankruptcyTest.class : numberCase testFindByYearCase yearCase Ljava/lang/Short; testFindByStatusOfBankruptcy statusOfBankruptcy testGetBankruptcyList 	preInsert +()Lru/sbrf/uvz/model/bankruptcy/Bankruptcy; doInsert ,(Lru/sbrf/uvz/model/bankruptcy/Bankruptcy;)V afterInsert anotherBankruptcy 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCaseOfBankruptcy $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldBankruptcys 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ClaimTest.class : testDelete testFindByIdClaim idClaim claims Ljava/util/List; result testFindBySignOfIncluding signOfIncluding testGetClaimList 	preInsert &()Lru/sbrf/uvz/model/bankruptcy/Claim; doInsert '(Lru/sbrf/uvz/model/bankruptcy/Claim;)V afterInsert anotherClaim 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIdClaim $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldClaims 
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\dao\RationaleForInitDao.class : Exceptions 0 load Z(Lru/sbrf/uvz/model/core/AbstractEntityPK;)Lru/sbrf/uvz/model/bankruptcy/RationaleForInit; delete 2(Lru/sbrf/uvz/model/bankruptcy/RationaleForInit;)V update getRationaleForInitList ()Ljava/util/List; (II)Ljava/util/List; queryByExample A(Lru/sbrf/uvz/model/bankruptcy/RationaleForInit;)Ljava/util/List; findByExpectedRecoveryDebt ((Ljava/math/BigDecimal;)Ljava/util/List; *(Ljava/math/BigDecimal;II)Ljava/util/List; 	findByETC findByExpectedRealisationDate "(Ljava/util/Date;)Ljava/util/List; $(Ljava/util/Date;II)Ljava/util/List; findByOtherRationale $(Ljava/lang/String;)Ljava/util/List; &(Ljava/lang/String;II)Ljava/util/List; findByBalanceSheetRR findByRecoveryRate findByFixedAmountDebt findByCalculateDateTime findBySignOfAgreed %(Ljava/lang/Boolean;)Ljava/util/List; '(Ljava/lang/Boolean;II)Ljava/util/List; findByDesicionDateTime findByAgreedFIO findByAgreedStatus =(Lru/sbrf/uvz/model/bankruptcy/AgreedStatus;)Ljava/util/List; ?(Lru/sbrf/uvz/model/bankruptcy/AgreedStatus;II)Ljava/util/List; findByX_bankruptcy ;(Lru/sbrf/uvz/model/bankruptcy/Bankruptcy;)Ljava/util/List; =(Lru/sbrf/uvz/model/bankruptcy/Bankruptcy;II)Ljava/util/List; 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ConclusionTest.class : testDelete testFindBySufficiencyOfDebtor sufficiencyOfDebtor conclusions Ljava/util/List; result testFindByPossibilityOfRecovery possibilityOfRecovery $testFindBySignOfFraudulentBankruptcy signOfFraudulentBankruptcy $testFindBySignOfDeliberateBankruptcy signOfDeliberateBankruptcy testGetConclusionList 	preInsert +()Lru/sbrf/uvz/model/bankruptcy/Conclusion; doInsert ,(Lru/sbrf/uvz/model/bankruptcy/Conclusion;)V afterInsert anotherConclusion 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySufficiencyOfDebtor $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldConclusions 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ApplicantForBankruptcyTest.class : testDelete testFindByInnOfApplicant innOfApplicant applicantForBankruptcys Ljava/util/List; result testFindByNameOfApplicant nameOfApplicant !testFindByDateOfFilingApplication dateOfFilingApplication Ljava/util/Date; (testFindByDateOfConsiderationApplication dateOfConsiderationApplication testFindByBankruptcyCaseNumber bankruptcyCaseNumber testFindByCourtCaseOfApplicant courtCaseOfApplicant testFindByNumberCaseOfApplicant numberCaseOfApplicant testFindByYearCaseOfApplicant yearCaseOfApplicant Ljava/lang/Short; testFindByCommentByApplicant commentByApplicant testFindByIdOfCourtDecission idOfCourtDecission !testGetApplicantForBankruptcyList 	preInsert 7()Lru/sbrf/uvz/model/bankruptcy/ApplicantForBankruptcy; doInsert 8(Lru/sbrf/uvz/model/bankruptcy/ApplicantForBankruptcy;)V afterInsert anotherApplicantForBankruptcy 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByInnOfApplicant $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldApplicantForBankruptcys 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.class : StackMapTable � � getRationaleForInitList ()Ljava/util/List; (II)Ljava/util/List; firstResult I 	maxResult findByExpectedRecoveryDebt ((Ljava/math/BigDecimal;)Ljava/util/List; expectedRecoveryDebt Ljava/math/BigDecimal; *(Ljava/math/BigDecimal;II)Ljava/util/List; 	findByETC eTC findByExpectedRealisationDate "(Ljava/util/Date;)Ljava/util/List; expectedRealisationDate Ljava/util/Date; $(Ljava/util/Date;II)Ljava/util/List; findByOtherRationale $(Ljava/lang/String;)Ljava/util/List; otherRationale &(Ljava/lang/String;II)Ljava/util/List; findByBalanceSheetRR balanceSheetRR findByRecoveryRate recoveryRate findByFixedAmountDebt fixedAmountDebt findByCalculateDateTime calculateDateTime findBySignOfAgreed %(Ljava/lang/Boolean;)Ljava/util/List; signOfAgreed Ljava/lang/Boolean; '(Ljava/lang/Boolean;II)Ljava/util/List; findByDesicionDateTime desicionDateTime findByAgreedFIO 	agreedFIO findByAgreedStatus =(Lru/sbrf/uvz/model/bankruptcy/AgreedStatus;)Ljava/util/List; agreedStatus +Lru/sbrf/uvz/model/bankruptcy/AgreedStatus; ?(Lru/sbrf/uvz/model/bankruptcy/AgreedStatus;II)Ljava/util/List; findByX_bankruptcy ;(Lru/sbrf/uvz/model/bankruptcy/Bankruptcy;)Ljava/util/List; x_bankruptcy )Lru/sbrf/uvz/model/bankruptcy/Bankruptcy; =(Lru/sbrf/uvz/model/bankruptcy/Bankruptcy;II)Ljava/util/List; 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\daoimpl\ejb3\RationaleForInitDaoImpl.class :   and o.eTC = :eTC 9 and o.expectedRealisationDate = :expectedRealisationDate   ' and o.otherRationale = :otherRationale ' and o.balanceSheetRR = :balanceSheetRR # and o.recoveryRate = :recoveryRate ) and o.fixedAmountDebt = :fixedAmountDebt - and o.calculateDateTime = :calculateDateTime � # and o.signOfAgreed = :signOfAgreed + and o.desicionDateTime = :desicionDateTime  and o.agreedFIO = :agreedFIO  java/lang/String!"#"$%&' �' � USelect o from RationaleForInit o where o.expectedRecoveryDebt = :expectedRecoveryDebt%(%) 3Select o from RationaleForInit o where o.eTC = :eTC [Select o from RationaleForInit o where o.expectedRealisationDate = :expectedRealisationDate ISelect o from RationaleForInit o where o.otherRationale = :otherRationale ISelect o from RationaleForInit o where o.balanceSheetRR = :balanceSheetRR ESelect o from RationaleForInit o where o.recoveryRate = :recoveryRate KSelect o from RationaleForInit o where o.fixedAmountDebt = :fixedAmountDebt OSelect o from RationaleForInit o where o.calculateDateTime = :calculateDateTime ESelect o from RationaleForInit o where o.signOfAgreed = :signOfAgreed MSelect o from RationaleForInit o where o.desicionDateTime = :desicionDateTime ?Select o from RationaleForInit o where o.agreedFIO = :agreedFIO ESelect o from RationaleForInit o where o.agreedStatus = :agreedStatus ESelect o from RationaleForInit o where o.x_bankruptcy = :x_bankruptcy #com/sybase/orm/ejb3/dao/EJB3DaoImpl 4ru/sbrf/uvz/model/bankruptcy/dao/RationaleForInitDao com/sybase/orm/dao/DaoException java/util/List (Ljava/lang/Object;)V 'ru/sbrf/uvz/model/core/AbstractEntityPK getId ()J java/lang/Long valueOf (J)Ljava/lang/Long; find 7(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object; append ,(Ljava/lang/String;)Ljava/lang/StringBuffer; getExpectedRecoveryDebt ()Ljava/math/BigDecimal; add (Ljava/lang/Object;)Z getETC getExpectedRealisationDate ()Ljava/util/Date; getOtherRationale ()Ljava/lang/String; equals getBalanceSheetRR getRecoveryRate getFixedAmountDebt getCalculateDateTime getSignOfAgreed ()Ljava/lang/Boolean; java/lang/Boolean FALSE getDesicionDateTime getAgreedFIO size ()I toString toArray (([Ljava/lang/Object;)[Ljava/lang/Object; ()[Ljava/lang/Object; findByNamedParam J(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List; findByEJBQuery H(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List; J(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List; ! 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUForSROTest.class : testDelete testFindByDateOfBeginForAU dateOfBeginForAU Ljava/util/Date; historyOfAUForSROs Ljava/util/List; result testFindByDateOfEndForAU dateOfEndForAU testGetHistoryOfAUForSROList 	preInsert 2()Lru/sbrf/uvz/model/bankruptcy/HistoryOfAUForSRO; doInsert 3(Lru/sbrf/uvz/model/bankruptcy/HistoryOfAUForSRO;)V afterInsert anotherHistoryOfAUForSRO 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDateOfBeginForAU "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldHistoryOfAUForSROs 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\HistoryOfAUTest.class : testDelete testFindBySurnameAU 	surnameAU historyOfAUs Ljava/util/List; result testFindByNameAU nameAU testFindByPatronomycAU patronomycAU testFindByDateOfBeginForAU dateOfBeginForAU Ljava/util/Date; testFindByDateOfEndForAU dateOfEndForAU "testFindBySignOfLoyaltyAUInHistory signOfLoyaltyAUInHistory Ljava/lang/Boolean; testFindByDateOfNonLoyaltyForAU dateOfNonLoyaltyForAU  testFindByDateOfDisqualification dateOfDisqualification "testFindByNumberOfDisqualification numberOfDisqualification testFindBySignOfCurrentSROAndAU signOfCurrentSROAndAU testGetHistoryOfAUList 	preInsert ,()Lru/sbrf/uvz/model/bankruptcy/HistoryOfAU; doInsert -(Lru/sbrf/uvz/model/bankruptcy/HistoryOfAU;)V afterInsert anotherHistoryOfAU 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySurnameAU $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldHistoryOfAUs 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\HistoryOfSROTest.class : historyOfSROs Ljava/util/List; result testFindByApprovalDateOfSRO approvalDateOfSRO Ljava/util/Date; testFindByCompletionDateForSRO completionDateForSRO &testFindByDateOfAppointmentOfSROFromCA dateOfAppointmentOfSROFromCA testGetHistoryOfSROList 	preInsert -()Lru/sbrf/uvz/model/bankruptcy/HistoryOfSRO; doInsert .(Lru/sbrf/uvz/model/bankruptcy/HistoryOfSRO;)V afterInsert anotherHistoryOfSRO 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySignOfApprovalForSRO %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldHistoryOfSROs 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\MeetingIniciatorTest.class : testDelete testGetMeetingIniciatorList meetingIniciators Ljava/util/List; result 	preInsert 1()Lru/sbrf/uvz/model/bankruptcy/MeetingIniciator; doInsert 2(Lru/sbrf/uvz/model/bankruptcy/MeetingIniciator;)V afterInsert anotherMeetingIniciator 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetMeetingIniciatorList ()Ljava/util/List; it Ljava/util/Iterator; i I oldMeetingIniciators size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\MeetingOfCreditorsTest.class : testDelete testFindByIdOfMeeting idOfMeeting meetingOfCreditorss Ljava/util/List; result testFindByBriefAgenda briefAgenda testFindByPlannedDateOfMeeting plannedDateOfMeeting Ljava/util/Date; testFindByMeetingTime meetingTime testFindByMeetingPlace meetingPlace testFindByUserComment userComment testFindByFactComment factComment testFindByManagerComment managerComment testFindBySignOfAgreed signOfAgreed Ljava/lang/Boolean; testFindByDesicionDateTime desicionDateTime testFindByAgreedFIO 	agreedFIO testGetMeetingOfCreditorsList 	preInsert 3()Lru/sbrf/uvz/model/bankruptcy/MeetingOfCreditors; doInsert 4(Lru/sbrf/uvz/model/bankruptcy/MeetingOfCreditors;)V afterInsert anotherMeetingOfCreditors 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIdOfMeeting $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldMeetingOfCreditorss 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\PossiblyStageOfBankruptcyTest.class : testDelete testFindByNameOfStage nameOfStage possiblyStageOfBankruptcys Ljava/util/List; result testFindByClient_type client_type $testGetPossiblyStageOfBankruptcyList 	preInsert :()Lru/sbrf/uvz/model/bankruptcy/PossiblyStageOfBankruptcy; doInsert ;(Lru/sbrf/uvz/model/bankruptcy/PossiblyStageOfBankruptcy;)V afterInsert  anotherPossiblyStageOfBankruptcy 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByNameOfStage $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldPossiblyStageOfBankruptcys 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\PublicationTest.class : ogrnFirmEFRSB testFindByTypeMessageEFRSB typeMessageEFRSB testGetPublicationList 	preInsert ,()Lru/sbrf/uvz/model/bankruptcy/Publication; doInsert -(Lru/sbrf/uvz/model/bankruptcy/Publication;)V afterInsert anotherPublication 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByMessageDataID $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldPublications 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\QuestionForMeetingTest.class : testDelete testFindByTextOfQuestion textOfQuestion questionForMeetings Ljava/util/List; result testFindByDecisionByQuestion decisionByQuestion testFindByOfferedPosition offeredPosition testFindByAgreedPosition agreedPosition testGetQuestionForMeetingList 	preInsert 3()Lru/sbrf/uvz/model/bankruptcy/QuestionForMeeting; doInsert 4(Lru/sbrf/uvz/model/bankruptcy/QuestionForMeeting;)V afterInsert anotherQuestionForMeeting 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByTextOfQuestion $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldQuestionForMeetings 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.class : testDelete !testFindByExpectedRealisationDate expectedRealisationDate Ljava/util/Date; rationaleForInits Ljava/util/List; result testFindByOtherRationale otherRationale testFindByCalculateDateTime calculateDateTime testFindBySignOfAgreed signOfAgreed Ljava/lang/Boolean; testFindByDesicionDateTime desicionDateTime testFindByAgreedFIO 	agreedFIO testGetRationaleForInitList 	preInsert 1()Lru/sbrf/uvz/model/bankruptcy/RationaleForInit; doInsert 2(Lru/sbrf/uvz/model/bankruptcy/RationaleForInit;)V afterInsert anotherRationaleForInit 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete  preFindByExpectedRealisationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldRationaleForInits 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.class : StackMapTable�� doFindByExpectedRealisationDate "afterFindByExpectedRealisationDate #(Ljava/util/List;Ljava/util/List;)V resultFound preFindByOtherRationale $(Ljava/lang/String;)Ljava/util/List; doFindByOtherRationale afterFindByOtherRationale preFindByCalculateDateTime doFindByCalculateDateTime afterFindByCalculateDateTime preFindBySignOfAgreed %(Ljava/lang/Boolean;)Ljava/util/List; doFindBySignOfAgreed afterFindBySignOfAgreed preFindByDesicionDateTime doFindByDesicionDateTime afterFindByDesicionDateTime preFindByAgreedFIO doFindByAgreedFIO afterFindByAgreedFIO preGetRationaleForInitList ()Ljava/util/List; size doGetRationaleForInitList afterGetRationaleForInitList prepare deleteBeforeSave setUp tearDown suite ()Ljunit/framework/Test; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.class : SourceFile RationaleForInitTest.java � � java/util/Random �� � ���� � � 1ru/sbrf/uvz/model/bankruptcy/RationaleForInitTest��� � � Test insert begins!��� � � � � � � Test insert ends! Test update begins! � � � � � � Test update ends! Test delete begins! � � � � � � Test delete ends! ,Test find-by-expectedRealisationDate begins! java/util/Date�� java/util/Calendar��� java/util/ArrayList � � � � � � � � *Test find-by-expectedRealisationDate ends! #Test find-by-otherRationale begins!�������� � � � � � � !Test find-by-otherRationale ends! &Test find-by-calculateDateTime begins! � � � � � � $Test find-by-calculateDateTime ends! !Test find-by-signOfAgreed begins! java/lang/Boolean�� �� � � � � � � Test find-by-signOfAgreed ends! %Test find-by-desicionDateTime begins! � � � � � � #Test find-by-desicionDateTime ends! Test find-by-agreedFIO begins! � � � � � � Test find-by-agreedFIO ends! &Test get-rationaleForInit-list begins! � � � � � � $Test get-rationaleForInit-list ends!���� � � ��� ����� 2Queried result does not equal to inserted instance��� � � �� �� � 1Queried result does not equal to updated instance  Inserted instance is not deleted��� ��������� -ru/sbrf/uvz/model/bankruptcy/RationaleForInit������ �� ;Result returned by find-by-expectedRealisationDate is null.�� FResult count returned by find-by-expectedRealisationDate is incorrect.���� fResult returned by find-by-expectedRealisationDate does not equal to inserted rationaleForInit object.� �� � 2Result returned by find-by-otherRationale is null. =Result count returned by find-by-otherRationale is incorrect. ]Result returned by find-by-otherRationale does not equal to inserted rationaleForInit object.� ��� 5Result returned by find-by-calculateDateTime is null. @Result count returned by find-by-calculateDateTime is incorrect. `Result returned by find-by-calculateDateTime does not equal to inserted rationaleForInit object.� ��� 0Result returned by find-by-signOfAgreed is null. ;Result count returned by find-by-signOfAgreed is incorrect. [Result returned by find-by-signOfAgreed does not equal to inserted rationaleForInit object.� ��� 4Result returned by find-by-desicionDateTime is null. ?Result count returned by find-by-desicionDateTime is incorrect. _Result returned by find-by-desicionDateTime does not equal to inserted rationaleForInit object.� �� � -Result returned by find-by-agreedFIO is null. 8Result count returned by find-by-agreedFIO is incorrect. XResult returned by find-by-agreedFIO does not equal to inserted rationaleForInit object.� � 5Result returned by get-rationaleForInit-list is null. @Result count returned by get-rationaleForInit-list is incorrect. `Result returned by get-rationaleForInit-list does not equal to inserted rationaleForInit object. � � � ��� � �� � junit/framework/TestSuite �� junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTest.class : assertNotNull (Ljava/lang/String;II)V getRationaleForInitByPk p(Ljava/util/Collection;Lru/sbrf/uvz/model/core/AbstractEntityPK;)Lru/sbrf/uvz/model/bankruptcy/RationaleForInit; findByOtherRationale setOtherRationale findByCalculateDateTime setCalculateDateTime findBySignOfAgreed setSignOfAgreed (Ljava/lang/Boolean;)V findByDesicionDateTime setDesicionDateTime findByAgreedFIO setAgreedFIO getRationaleForInitList getRationaleForInitDao 8()Lru/sbrf/uvz/model/bankruptcy/dao/RationaleForInitDao; closePersistenceContext (Ljava/lang/Class;)V ! 	 �      � �     � �     � �    � �   .  � �  �   h     $*+� *� Y � � *� � *	� 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ReasonedJudgmentSlctTest.class : testDelete testGetReasonedJudgmentSlctList reasonedJudgmentSlcts Ljava/util/List; result 	preInsert 5()Lru/sbrf/uvz/model/bankruptcy/ReasonedJudgmentSlct; doInsert 6(Lru/sbrf/uvz/model/bankruptcy/ReasonedJudgmentSlct;)V afterInsert anotherReasonedJudgmentSlct 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReasonedJudgmentSlctList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReasonedJudgmentSlcts size 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RationaleForInitTestHelper.class : SourceFile RationaleForInitTestHelper.java : ; 7ru/sbrf/uvz/model/bankruptcy/RationaleForInitTestHelper � � � 8 9 -ru/sbrf/uvz/model/bankruptcy/RationaleForInit java/util/Date 6 7 � � � : � java/util/Calendar � � � � � � � � � � � � � � � � � java/lang/Boolean � � : � � � � � � � � � � � � � I � � � � ; � e � � � � � � 1ru/sbrf/uvz/model/bankruptcy/ReasonedJudgmentSlct � H � L � � � � � � L � � � � � � � ; � L � L H � � � � � � � � _ ` � � � java/lang/Object java/util/Collection java/util/Iterator )ru/sbrf/uvz/model/bankruptcy/AgreedStatus 'ru/sbrf/uvz/model/bankruptcy/Bankruptcy %org/apache/commons/logging/LogFactory getLog 3(Ljava/lang/Class;)Lorg/apache/commons/logging/Log; java/util/Random nextInt (I)I (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setExpectedRealisationDate (Ljava/util/Date;)V java/lang/Math pow (DD)D round (D)J java/lang/String valueOf (I)Ljava/lang/String; setOtherRationale (Ljava/lang/String;)V setCalculateDateTime nextBoolean ()Z (Z)V setSignOfAgreed (Ljava/lang/Boolean;)V setDesicionDateTime setAgreedFIO factory/DaoFactory 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ReferenceBacruptApplicantTest.class : testDelete $testGetReferenceBacruptApplicantList referenceBacruptApplicants Ljava/util/List; result 	preInsert :()Lru/sbrf/uvz/model/bankruptcy/ReferenceBacruptApplicant; doInsert ;(Lru/sbrf/uvz/model/bankruptcy/ReferenceBacruptApplicant;)V afterInsert  anotherReferenceBacruptApplicant 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete #preGetReferenceBacruptApplicantList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceBacruptApplicants size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ReferenceDecisionTest.class : testDelete testGetReferenceDecisionList referenceDecisions Ljava/util/List; result 	preInsert 2()Lru/sbrf/uvz/model/bankruptcy/ReferenceDecision; doInsert 3(Lru/sbrf/uvz/model/bankruptcy/ReferenceDecision;)V afterInsert anotherReferenceDecision 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceDecisionList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceDecisions size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ReferenceQuestionsTest.class : testDelete testFindByClient_type client_type referenceQuestionss Ljava/util/List; result testGetReferenceQuestionsList 	preInsert 3()Lru/sbrf/uvz/model/bankruptcy/ReferenceQuestions; doInsert 4(Lru/sbrf/uvz/model/bankruptcy/ReferenceQuestions;)V afterInsert anotherReferenceQuestions 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByClient_type $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceQuestionss 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\ReferenceTypeOfGovernmentTest.class : testDelete $testGetReferenceTypeOfGovernmentList referenceTypeOfGovernments Ljava/util/List; result 	preInsert :()Lru/sbrf/uvz/model/bankruptcy/ReferenceTypeOfGovernment; doInsert ;(Lru/sbrf/uvz/model/bankruptcy/ReferenceTypeOfGovernment;)V afterInsert  anotherReferenceTypeOfGovernment 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete #preGetReferenceTypeOfGovernmentList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceTypeOfGovernments size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RefReasonedJudgmentTest.class : testDelete testGetRefReasonedJudgmentList refReasonedJudgments Ljava/util/List; result 	preInsert 4()Lru/sbrf/uvz/model/bankruptcy/RefReasonedJudgment; doInsert 5(Lru/sbrf/uvz/model/bankruptcy/RefReasonedJudgment;)V afterInsert anotherRefReasonedJudgment 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefReasonedJudgmentList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefReasonedJudgments size 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RefStatusOfCredMeetTest.class : testDelete testGetRefStatusOfCredMeetList refStatusOfCredMeets Ljava/util/List; result 	preInsert 4()Lru/sbrf/uvz/model/bankruptcy/RefStatusOfCredMeet; doInsert 5(Lru/sbrf/uvz/model/bankruptcy/RefStatusOfCredMeet;)V afterInsert anotherRefStatusOfCredMeet 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefStatusOfCredMeetList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefStatusOfCredMeets size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RefTypeCredMeetTest.class : testDelete testGetRefTypeCredMeetList refTypeCredMeets Ljava/util/List; result 	preInsert 0()Lru/sbrf/uvz/model/bankruptcy/RefTypeCredMeet; doInsert 1(Lru/sbrf/uvz/model/bankruptcy/RefTypeCredMeet;)V afterInsert anotherRefTypeCredMeet 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefTypeCredMeetList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefTypeCredMeets size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RefTypeQuestionTest.class : testDelete testGetRefTypeQuestionList refTypeQuestions Ljava/util/List; result 	preInsert 0()Lru/sbrf/uvz/model/bankruptcy/RefTypeQuestion; doInsert 1(Lru/sbrf/uvz/model/bankruptcy/RefTypeQuestion;)V afterInsert anotherRefTypeQuestion 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefTypeQuestionList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefTypeQuestions size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RegisterCreditorRequirementsTest.class : innOfCreditor testFindBySnilsOfCreditor snilsOfCreditor (testFindByFullNameOfCreditorForJuridical fullNameOfCreditorForJuridical &testFindByFullNameOfCreditorForFisical fullNameOfCreditorForFisical )testFindByShortNameOfCreditorForJuridical shortNameOfCreditorForJuridical 'testGetRegisterCreditorRequirementsList 	preInsert =()Lru/sbrf/uvz/model/bankruptcy/RegisterCreditorRequirements; doInsert >(Lru/sbrf/uvz/model/bankruptcy/RegisterCreditorRequirements;)V afterInsert #anotherRegisterCreditorRequirements 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIdOfCreditor $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I  oldRegisterCreditorRequirementss 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RequestOutTest.class : dateOfRequest Ljava/util/Date; testFindByDateOfAnswer dateOfAnswer testFindByCommentStatement commentStatement testGetRequestOutList 	preInsert +()Lru/sbrf/uvz/model/bankruptcy/RequestOut; doInsert ,(Lru/sbrf/uvz/model/bankruptcy/RequestOut;)V afterInsert anotherRequestOut 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByTypeOfGovernment $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRequestOuts 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\RequestToCAForSROTest.class : dateAnswer testFindBySignApprovalByCourt signApprovalByCourt testFindByDateApprovalByCourt dateApprovalByCourt testGetRequestToCAForSROList 	preInsert 2()Lru/sbrf/uvz/model/bankruptcy/RequestToCAForSRO; doInsert 3(Lru/sbrf/uvz/model/bankruptcy/RequestToCAForSRO;)V afterInsert anotherRequestToCAForSRO 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByRequestToCAForSRO_ID $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRequestToCAForSROs 
13 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\SroAUTest.class : StackMapTable3 doInsert '(Lru/sbrf/uvz/model/bankruptcy/SroAU;)V afterInsert anotherSroAU 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByNameSROAU $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldSroAUs 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\StageOfBankruptcyTest.class : statusOfStage testFindByCurrentStage currentStage Ljava/lang/Boolean; "testFindBySignOfLoyaltyOfCurrentAU signOfLoyaltyOfCurrentAU %testFindByDateOfNonLoyaltyOfCurrentAU dateOfNonLoyaltyOfCurrentAU testFindByCommentUser commentUser testGetStageOfBankruptcyList 	preInsert 2()Lru/sbrf/uvz/model/bankruptcy/StageOfBankruptcy; doInsert 3(Lru/sbrf/uvz/model/bankruptcy/StageOfBankruptcy;)V afterInsert anotherStageOfBankruptcy 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDateOfBegin "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldStageOfBankruptcys 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\bankruptcy\TypeOfBankruptcyTest.class : testDelete testGetTypeOfBankruptcyList typeOfBankruptcys Ljava/util/List; result 	preInsert 1()Lru/sbrf/uvz/model/bankruptcy/TypeOfBankruptcy; doInsert 2(Lru/sbrf/uvz/model/bankruptcy/TypeOfBankruptcy;)V afterInsert anotherTypeOfBankruptcy 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetTypeOfBankruptcyList ()Ljava/util/List; it Ljava/util/Iterator; i I oldTypeOfBankruptcys size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\core\CommentStatementTest.class : testDelete testFindByCommentText commentText commentStatements Ljava/util/List; result testFindByCommentDate commentDate Ljava/util/Date; testGetCommentStatementList 	preInsert +()Lru/sbrf/uvz/model/core/CommentStatement; doInsert ,(Lru/sbrf/uvz/model/core/CommentStatement;)V afterInsert anotherCommentStatement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCommentText $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldCommentStatements 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\core\DataAdminOperatorIDTest.class : testDelete testFindByUserIdentifier userIdentifier dataAdminOperatorIDs Ljava/util/List; result testFindByFullName fullName testFindByPhone phone testFindByEmail email testFindByOrgUnit orgUnit testGetDataAdminOperatorIDList 	preInsert .()Lru/sbrf/uvz/model/core/DataAdminOperatorID; doInsert /(Lru/sbrf/uvz/model/core/DataAdminOperatorID;)V afterInsert anotherDataAdminOperatorID 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByUserIdentifier $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldDataAdminOperatorIDs 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\core\ExtIdentityContainerTest.class : testDelete testGetExtIdentityContainerList extIdentityContainers Ljava/util/List; result testNavigation 	preInsert /()Lru/sbrf/uvz/model/core/ExtIdentityContainer; doInsert 0(Lru/sbrf/uvz/model/core/ExtIdentityContainer;)V afterInsert anotherExtIdentityContainer 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetExtIdentityContainerList ()Ljava/util/List; it Ljava/util/Iterator; i I oldExtIdentityContainers size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\core\ExtIdentityRefTest.class : StackMapTable � doInsert *(Lru/sbrf/uvz/model/core/ExtIdentityRef;)V afterInsert anotherExtIdentityRef 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetExtIdentityRefList ()Ljava/util/List; it Ljava/util/Iterator; i I oldExtIdentityRefs size � � doGetExtIdentityRefList afterGetExtIdentityRefList #(Ljava/util/List;Ljava/util/List;)V resultFound preNavigationTest doNavigationInsert doNavigationTestAsserts prepare deleteBeforeSave setUp tearDown suite ()Ljunit/framework/Test; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\core\ExtIdentityRefTest.class :  � %ru/sbrf/uvz/model/core/ExtIdentityRef � 3Result returned by get-extIdentityRef-list is null. >Result count returned by get-extIdentityRef-list is incorrect. \Result returned by get-extIdentityRef-list does not equal to inserted extIdentityRef object. Query result is null KRefExtIdNamespace getNamespace() is not identical with the queried result!  � u � c ! � c" c junit/framework/TestSuite Y# junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\core\ReferenceDepartmentTest.class : StackMapTable� doInsert /(Lru/sbrf/uvz/model/core/ReferenceDepartment;)V afterInsert anotherReferenceDepartment 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByOrgUnitType $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i oldReferenceDepartments 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\core\RefExtIdNamespaceTest.class : testDelete testFindByIsExternalSystem isExternalSystem Ljava/lang/Boolean; refExtIdNamespaces Ljava/util/List; result testGetRefExtIdNamespaceList 	preInsert ,()Lru/sbrf/uvz/model/core/RefExtIdNamespace; doInsert -(Lru/sbrf/uvz/model/core/RefExtIdNamespace;)V afterInsert anotherRefExtIdNamespace 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIsExternalSystem %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldRefExtIdNamespaces 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\AuthorityKPATest.class : branchType testGetAuthorityKPAList 	preInsert +()Lru/sbrf/uvz/model/decision/AuthorityKPA; doInsert ,(Lru/sbrf/uvz/model/decision/AuthorityKPA;)V afterInsert anotherAuthorityKPA 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByBankBranch $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldAuthorityKPAs 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\CalculationTest.class : categoryAR testGetCalculationList 	preInsert *()Lru/sbrf/uvz/model/decision/Calculation; doInsert +(Lru/sbrf/uvz/model/decision/Calculation;)V afterInsert anotherCalculation 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByKoQuestionType_code $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldCalculations 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\DecisionMakingFormatTest.class : testDelete testGetDecisionMakingFormatList decisionMakingFormats Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/decision/DecisionMakingFormat; doInsert 4(Lru/sbrf/uvz/model/decision/DecisionMakingFormat;)V afterInsert anotherDecisionMakingFormat 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetDecisionMakingFormatList ()Ljava/util/List; it Ljava/util/Iterator; i I oldDecisionMakingFormats size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\DecisionMakingTest.class : testDelete testFindByIsCreditDeal isCreditDeal Ljava/lang/Boolean; decisionMakings Ljava/util/List; result testFindByIsClientInChildBank isClientInChildBank testFindByIsDealOFR 	isDealOFR testFindByIsDealNoVND isDealNoVND testFindByIsComplicatedDeal isComplicatedDeal testFindByIsTransboundaryDeal isTransboundaryDeal testFindByIsSberbankCapital isSberbankCapital testFindByIsHandLimit isHandLimit testFindByIsSimpleOFR isSimpleOFR testGetDecisionMakingList 	preInsert -()Lru/sbrf/uvz/model/decision/DecisionMaking; doInsert .(Lru/sbrf/uvz/model/decision/DecisionMaking;)V afterInsert anotherDecisionMaking 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIsCreditDeal %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldDecisionMakings 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\KoDecisionTest.class : updateDate testFindByDecisionStatus decisionStatus !testFindByDecisionStatusLocalized decisionStatusLocalized testGetKoDecisionList 	preInsert )()Lru/sbrf/uvz/model/decision/KoDecision; doInsert *(Lru/sbrf/uvz/model/decision/KoDecision;)V afterInsert anotherKoDecision 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCaseId $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldKoDecisions 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\KoQuestionCategoryTest.class : testDelete testGetKoQuestionCategoryList koQuestionCategorys Ljava/util/List; result 	preInsert 1()Lru/sbrf/uvz/model/decision/KoQuestionCategory; doInsert 2(Lru/sbrf/uvz/model/decision/KoQuestionCategory;)V afterInsert anotherKoQuestionCategory 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetKoQuestionCategoryList ()Ljava/util/List; it Ljava/util/Iterator; i I oldKoQuestionCategorys size 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\KoQuestionMaterialsTest.class : material_code koQuestionMaterialss Ljava/util/List; result testFindByAvailableFor availableFor testFindByDisabledFor disabledFor testFindByHasTemplate hasTemplate Ljava/lang/Boolean; testFindByTemplateLink templateLink testGetKoQuestionMaterialsList 	preInsert 2()Lru/sbrf/uvz/model/decision/KoQuestionMaterials; doInsert 3(Lru/sbrf/uvz/model/decision/KoQuestionMaterials;)V afterInsert anotherKoQuestionMaterials 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByMaterial_code $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldKoQuestionMaterialss 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\KoQuestionServicesTest.class : testDelete testFindByAvailableFor availableFor koQuestionServicess Ljava/util/List; result testFindByDisabledFor disabledFor testGetKoQuestionServicesList 	preInsert 1()Lru/sbrf/uvz/model/decision/KoQuestionServices; doInsert 2(Lru/sbrf/uvz/model/decision/KoQuestionServices;)V afterInsert anotherKoQuestionServices 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAvailableFor $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldKoQuestionServicess 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\LevelDecisionOverwriteTest.class : isNeedARCheck !testGetLevelDecisionOverwriteList 	preInsert 5()Lru/sbrf/uvz/model/decision/LevelDecisionOverwrite; doInsert 6(Lru/sbrf/uvz/model/decision/LevelDecisionOverwrite;)V afterInsert anotherLevelDecisionOverwrite 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByKoQuestionType_code $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldLevelDecisionOverwrites 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\KoQuestionTypeTest.class : msAccessLabel testFindByIsSpecialQuestion isSpecialQuestion testGetKoQuestionTypeList 	preInsert -()Lru/sbrf/uvz/model/decision/KoQuestionType; doInsert .(Lru/sbrf/uvz/model/decision/KoQuestionType;)V afterInsert anotherKoQuestionType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIsVerificate %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldKoQuestionTypes 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\ReferenceBaseQuestWeightTest.class : testDelete testFindByToolAvailability toolAvailability Ljava/lang/Boolean; referenceBaseQuestWeights Ljava/util/List; result #testGetReferenceBaseQuestWeightList 	preInsert 7()Lru/sbrf/uvz/model/decision/ReferenceBaseQuestWeight; doInsert 8(Lru/sbrf/uvz/model/decision/ReferenceBaseQuestWeight;)V afterInsert anotherReferenceBaseQuestWeight 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByToolAvailability %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceBaseQuestWeights 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\ReferenceFinancialMarketsActTypeTest.class : testDelete +testGetReferenceFinancialMarketsActTypeList !referenceFinancialMarketsActTypes Ljava/util/List; result 	preInsert ?()Lru/sbrf/uvz/model/decision/ReferenceFinancialMarketsActType; doInsert @(Lru/sbrf/uvz/model/decision/ReferenceFinancialMarketsActType;)V afterInsert 'anotherReferenceFinancialMarketsActType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete *preGetReferenceFinancialMarketsActTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I $oldReferenceFinancialMarketsActTypes size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\ReferenceKoSecretaryEmailTest.class : secretaryName $testGetReferenceKoSecretaryEmailList 	preInsert 8()Lru/sbrf/uvz/model/decision/ReferenceKoSecretaryEmail; doInsert 9(Lru/sbrf/uvz/model/decision/ReferenceKoSecretaryEmail;)V afterInsert  anotherReferenceKoSecretaryEmail 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByBankBranch $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceKoSecretaryEmails 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\ReferenceMaterialsTest.class : testDelete testGetReferenceMaterialsList referenceMaterialss Ljava/util/List; result 	preInsert 1()Lru/sbrf/uvz/model/decision/ReferenceMaterials; doInsert 2(Lru/sbrf/uvz/model/decision/ReferenceMaterials;)V afterInsert anotherReferenceMaterials 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceMaterialsList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceMaterialss size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\ReferenceVNDTest.class : referenceVNDs Ljava/util/List; result 	preInsert +()Lru/sbrf/uvz/model/decision/ReferenceVND; doInsert ,(Lru/sbrf/uvz/model/decision/ReferenceVND;)V afterInsert anotherReferenceVND 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReferenceVNDList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReferenceVNDs size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\RiskProfilesTest.class : arCategory testGetRiskProfilesList 	preInsert +()Lru/sbrf/uvz/model/decision/RiskProfiles; doInsert ,(Lru/sbrf/uvz/model/decision/RiskProfiles;)V afterInsert anotherRiskProfiles 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByBorrowerSegment $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRiskProfiless 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\SelectedQuestionsKOTest.class : toolType_code testGetSelectedQuestionsKOList 	preInsert 2()Lru/sbrf/uvz/model/decision/SelectedQuestionsKO; doInsert 3(Lru/sbrf/uvz/model/decision/SelectedQuestionsKO;)V afterInsert anotherSelectedQuestionsKO 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByKoQuestionType_code $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldSelectedQuestionsKOs 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\decision\SpecialConditionsTest.class : testDelete testGetSpecialConditionsList specialConditionss Ljava/util/List; result 	preInsert 0()Lru/sbrf/uvz/model/decision/SpecialConditions; doInsert 1(Lru/sbrf/uvz/model/decision/SpecialConditions;)V afterInsert anotherSpecialConditions 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetSpecialConditionsList ()Ljava/util/List; it Ljava/util/Iterator; i I oldSpecialConditionss size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTest.class : testDelete testFindByToolPurpose toolPurpose additionalFinancings Ljava/util/List; result testFindByAddFinanceSigned addFinanceSigned Ljava/lang/Boolean; testFindByAssignFailComment assignFailComment testFindByAssignContractNum assignContractNum testFindByAssignContractDate assignContractDate Ljava/util/Date; testGetAdditionalFinancingList 	preInsert I()Lru/sbrf/uvz/model/instruments/additionalfinancing/AdditionalFinancing; doInsert J(Lru/sbrf/uvz/model/instruments/additionalfinancing/AdditionalFinancing;)V afterInsert anotherAdditionalFinancing 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByToolPurpose $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldAdditionalFinancings 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\additionalfinancing\AdditionalFinancingTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setToolPurpose setAddFinanceSigned setAssignFailComment setAssignContractNum setAssignContractDate factory/DaoFactory 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTest.class : testDelete testFindByDateCourtDecision dateCourtDecision Ljava/util/Date; amicableAgreementTools Ljava/util/List; result testFindByNumberCourtDecision numberCourtDecision testFindByAmicAgreementSigned amicAgreementSigned Ljava/lang/Boolean; testFindByAssignFailComment assignFailComment  testGetAmicableAgreementToolList 	preInsert @()Lru/sbrf/uvz/model/instruments/amicable/AmicableAgreementTool; doInsert A(Lru/sbrf/uvz/model/instruments/amicable/AmicableAgreementTool;)V afterInsert anotherAmicableAgreementTool 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDateCourtDecision "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldAmicableAgreementTools 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\amicable\AmicableAgreementToolTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setDateCourtDecision setNumberCourtDecision setAmicAgreementSigned setAssignFailComment factory/DaoFactory 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\amicable\AmicableCreditAgreementTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; amicableCreditAgreements Ljava/util/List; result "testGetAmicableCreditAgreementList 	preInsert B()Lru/sbrf/uvz/model/instruments/amicable/AmicableCreditAgreement; doInsert C(Lru/sbrf/uvz/model/instruments/amicable/AmicableCreditAgreement;)V afterInsert anotherAmicableCreditAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldAmicableCreditAgreements 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceCredAgrTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; bailToBalanceCredAgrs Ljava/util/List; result testGetBailToBalanceCredAgrList 	preInsert D()Lru/sbrf/uvz/model/instruments/bailtobalance/BailToBalanceCredAgr; doInsert E(Lru/sbrf/uvz/model/instruments/bailtobalance/BailToBalanceCredAgr;)V afterInsert anotherBailToBalanceCredAgr 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldBailToBalanceCredAgrs 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTest.class : testDelete testFindByBailToBalanceSigned bailToBalanceSigned Ljava/lang/Boolean; bailToBalances Ljava/util/List; result testFindByAssignFailComment assignFailComment testGetBailToBalanceList 	preInsert =()Lru/sbrf/uvz/model/instruments/bailtobalance/BailToBalance; doInsert >(Lru/sbrf/uvz/model/instruments/bailtobalance/BailToBalance;)V afterInsert anotherBailToBalance 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByBailToBalanceSigned %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldBailToBalances 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\bailtobalance\BailToBalanceTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setBailToBalanceSigned setAssignFailComment factory/DaoFactory 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\cession\CessionCreditAgreementTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; cessionCreditAgreements Ljava/util/List; result !testGetCessionCreditAgreementList 	preInsert @()Lru/sbrf/uvz/model/instruments/cession/CessionCreditAgreement; doInsert A(Lru/sbrf/uvz/model/instruments/cession/CessionCreditAgreement;)V afterInsert anotherCessionCreditAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldCessionCreditAgreements 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\cession\CessionToolTest.class : testDelete testFindByAssignContractNum assignContractNum cessionTools Ljava/util/List; result testFindByAssignContractDate assignContractDate Ljava/util/Date; testFindByAssigneeAuction assigneeAuction Ljava/lang/Boolean; testFindByRightsAfterPay rightsAfterPay testFindByAssignContractSigned assignContractSigned testFindByAssignFailComment assignFailComment testGetCessionToolList 	preInsert 5()Lru/sbrf/uvz/model/instruments/cession/CessionTool; doInsert 6(Lru/sbrf/uvz/model/instruments/cession/CessionTool;)V afterInsert anotherCessionTool 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAssignContractNum $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldCessionTools 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\cession\CessionToolTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setAssignContractNum setAssignContractDate setAssigneeAuction setRightsAfterPay setAssignContractSigned setAssignFailComment factory/DaoFactory 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\compensation\CompensationCreditAgreementTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; compensationCreditAgreements Ljava/util/List; result &testGetCompensationCreditAgreementList 	preInsert J()Lru/sbrf/uvz/model/instruments/compensation/CompensationCreditAgreement; doInsert K(Lru/sbrf/uvz/model/instruments/compensation/CompensationCreditAgreement;)V afterInsert "anotherCompensationCreditAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldCompensationCreditAgreements 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTest.class : testDelete testFindByCompensationSigned compensationSigned Ljava/lang/Boolean; compensationTools Ljava/util/List; result testFindByAssignFailComment assignFailComment testGetCompensationToolList 	preInsert ?()Lru/sbrf/uvz/model/instruments/compensation/CompensationTool; doInsert @(Lru/sbrf/uvz/model/instruments/compensation/CompensationTool;)V afterInsert anotherCompensationTool 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCompensationSigned %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldCompensationTools 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\compensation\CompensationToolTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setCompensationSigned setAssignFailComment factory/DaoFactory 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\ApplicationStatusTest.class : testDelete testGetApplicationStatusList applicationStatuss Ljava/util/List; result 	preInsert G()Lru/sbrf/uvz/model/instruments/criminalprosecution/ApplicationStatus; doInsert H(Lru/sbrf/uvz/model/instruments/criminalprosecution/ApplicationStatus;)V afterInsert anotherApplicationStatus 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetApplicationStatusList ()Ljava/util/List; it Ljava/util/Iterator; i I oldApplicationStatuss size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CivilActionTest.class : testDelete testGetCivilActionList civilActions Ljava/util/List; result 	preInsert A()Lru/sbrf/uvz/model/instruments/criminalprosecution/CivilAction; doInsert B(Lru/sbrf/uvz/model/instruments/criminalprosecution/CivilAction;)V afterInsert anotherCivilAction 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCivilActionList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCivilActions size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCaseTest.class : criminalCases Ljava/util/List; result testFindByNumber number testFindByReason reason testGetCriminalCaseList 	preInsert B()Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalCase; doInsert C(Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalCase;)V afterInsert anotherCriminalCase 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByInitiationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldCriminalCases 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalCodeArticleTest.class : testDelete testGetCriminalCodeArticleList criminalCodeArticles Ljava/util/List; result 	preInsert I()Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalCodeArticle; doInsert J(Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalCodeArticle;)V afterInsert anotherCriminalCodeArticle 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCriminalCodeArticleList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCriminalCodeArticles size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionApplicationTest.class : testDelete testFindByApplicationDate applicationDate Ljava/util/Date; criminalProsecutionApplications Ljava/util/List; result testFindByCriminalCaseStarted criminalCaseStarted Ljava/lang/Boolean; )testGetCriminalProsecutionApplicationList 	preInsert T()Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalProsecutionApplication; doInsert U(Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalProsecutionApplication;)V afterInsert %anotherCriminalProsecutionApplication 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByApplicationDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I "oldCriminalProsecutionApplications 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\CriminalProsecutionTest.class : testDelete testFindByResponderUnknown responderUnknown Ljava/lang/Boolean; criminalProsecutions Ljava/util/List; result testFindByCivilActionDeclared civilActionDeclared testFindByCourtDecisionText courtDecisionText testGetCriminalProsecutionList 	preInsert I()Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalProsecution; doInsert J(Lru/sbrf/uvz/model/instruments/criminalprosecution/CriminalProsecution;)V afterInsert anotherCriminalProsecution 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByResponderUnknown %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldCriminalProsecutions 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\InvestigatorTest.class : investigators Ljava/util/List; result testGetInvestigatorList 	preInsert B()Lru/sbrf/uvz/model/instruments/criminalprosecution/Investigator; doInsert C(Lru/sbrf/uvz/model/instruments/criminalprosecution/Investigator;)V afterInsert anotherInvestigator 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByContacts $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldInvestigators 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\LawEnforcementAgencyTest.class : testDelete testFindByName name lawEnforcementAgencys Ljava/util/List; result testGetLawEnforcementAgencyList 	preInsert J()Lru/sbrf/uvz/model/instruments/criminalprosecution/LawEnforcementAgency; doInsert K(Lru/sbrf/uvz/model/instruments/criminalprosecution/LawEnforcementAgency;)V afterInsert anotherLawEnforcementAgency 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\criminalprosecution\ReasonEndCriminalCaseTest.class : testDelete  testGetReasonEndCriminalCaseList reasonEndCriminalCases Ljava/util/List; result 	preInsert K()Lru/sbrf/uvz/model/instruments/criminalprosecution/ReasonEndCriminalCase; doInsert L(Lru/sbrf/uvz/model/instruments/criminalprosecution/ReasonEndCriminalCase;)V afterInsert anotherReasonEndCriminalCase 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReasonEndCriminalCaseList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReasonEndCriminalCases size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\dao\UniversalToolDealDao.class : findBySumTool ((Ljava/math/BigDecimal;)Ljava/util/List; *(Ljava/math/BigDecimal;II)Ljava/util/List; findByTermMonth %(Ljava/lang/Integer;)Ljava/util/List; '(Ljava/lang/Integer;II)Ljava/util/List;  findByIndividScheduleMainComment $(Ljava/lang/String;)Ljava/util/List; &(Ljava/lang/String;II)Ljava/util/List; $findByIndividScheduleInterestComment findByDefermentPrincipalMonth findByDefermentInterestMonth findByInterestRateNum findByInterestRateString findByDelayCondition findByOtherCondition findByCovenants findByAccordingM2723 %(Ljava/lang/Boolean;)Ljava/util/List; '(Ljava/lang/Boolean;II)Ljava/util/List; findByNotReUsed findByIsInstrumentBasic findByAdditionalParticipant findByDealDate "(Ljava/util/Date;)Ljava/util/List; $(Ljava/util/Date;II)Ljava/util/List; findByStopFactEmpty findByFailReasonTool findByToolMode [(Lru/sbrf/uvz/model/instruments/ToolMode;)Lru/sbrf/uvz/model/instruments/UniversalToolDeal; findByOrderPayMain _(Lru/sbrf/uvz/model/instruments/PaymentOrder;)Lru/sbrf/uvz/model/instruments/UniversalToolDeal; findByOrderPayInterest findByInterestRateType c(Lru/sbrf/uvz/model/instruments/InterestRateType;)Lru/sbrf/uvz/model/instruments/UniversalToolDeal; 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.class : findBySumTool ((Ljava/math/BigDecimal;)Ljava/util/List; sumTool Ljava/math/BigDecimal; *(Ljava/math/BigDecimal;II)Ljava/util/List; findByTermMonth %(Ljava/lang/Integer;)Ljava/util/List; 	termMonth Ljava/lang/Integer; '(Ljava/lang/Integer;II)Ljava/util/List;  findByIndividScheduleMainComment $(Ljava/lang/String;)Ljava/util/List; individScheduleMainComment &(Ljava/lang/String;II)Ljava/util/List; $findByIndividScheduleInterestComment individScheduleInterestComment findByDefermentPrincipalMonth defermentPrincipalMonth findByDefermentInterestMonth defermentInterestMonth findByInterestRateNum interestRateNum findByInterestRateString interestRateString findByDelayCondition delayCondition findByOtherCondition otherCondition findByCovenants 	covenants findByAccordingM2723 %(Ljava/lang/Boolean;)Ljava/util/List; accordingM2723 Ljava/lang/Boolean; '(Ljava/lang/Boolean;II)Ljava/util/List; findByNotReUsed 	notReUsed findByIsInstrumentBasic isInstrumentBasic findByAdditionalParticipant additionalParticipant findByDealDate "(Ljava/util/Date;)Ljava/util/List; dealDate Ljava/util/Date; $(Ljava/util/Date;II)Ljava/util/List; findByStopFactEmpty 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.class : SourceFile UniversalToolDealDaoImpl.java � � �^ /ru/sbrf/uvz/model/instruments/UniversalToolDeal_`abcdef �^ �^ java/lang/StringBuffer java/util/ArrayList Cru/sbrf/uvz/model/instruments/daoimpl/ejb3/UniversalToolDealDaoImpl !Select o from UniversalToolDeal ogh  where 1 = 1ij  and o.sumTool = :sumTool]klmn java/lang/Integer �opl  and o.termMonth = :termMonthqr   ? and o.individScheduleMainComment = :individScheduleMainCommentsr G and o.individScheduleInterestComment = :individScheduleInterestCommenttn 9 and o.defermentPrincipalMonth = :defermentPrincipalMonthun 7 and o.defermentInterestMonth = :defermentInterestMonthvj ) and o.interestRateNum = :interestRateNumwr / and o.interestRateString = :interestRateStringxr ' and o.delayCondition = :delayConditionyr ' and o.otherCondition = :otherConditionzr  and o.covenants = :covenants{|}~ � ' and o.accordingM2723 = :accordingM2723|  and o.notReUsed = :notReUsed�| - and o.isInstrumentBasic = :isInstrumentBasic�r 5 and o.additionalParticipant = :additionalParticipant��  and o.dealDate = :dealDate�| % and o.stopFactEmpty = :stopFactEmpty�r ' and o.failReasonTool = :failReasonTool�� java/lang/String�r������� �� � <Select o from UniversalToolDeal o where o.sumTool = :sumTool���� @Select o from UniversalToolDeal o where o.termMonth = :termMonth bSelect o from UniversalToolDeal o where o.individScheduleMainComment = :individScheduleMainComment jSelect o from UniversalToolDeal o where o.individScheduleInterestComment = :individScheduleInterestComment \Select o from UniversalToolDeal o where o.defermentPrincipalMonth = :defermentPrincipalMonth ZSelect o from UniversalToolDeal o where o.defermentInterestMonth = :defermentInterestMonth LSelect o from UniversalToolDeal o where o.interestRateNum = :interestRateNum RSelect o from UniversalToolDeal o where o.interestRateString = :interestRateString JSelect o from UniversalToolDeal o where o.delayCondition = :delayCondition JSelect o from UniversalToolDeal o where o.otherCondition = :otherCondition @Select o from UniversalToolDeal o where o.covenants = :covenants JSelect o from UniversalToolDeal o where o.accordingM2723 = :accordingM2723 @Select o from UniversalToolDeal o where o.notReUsed = :notReUsed PSelect o from UniversalToolDeal o where o.isInstrumentBasic = :isInstrumentBasic XSelect o from UniversalToolDeal o where o.additionalParticipant = :additionalParticipant >Select o from UniversalToolDeal o where o.dealDate = :dealDate HSelect o from UniversalToolDeal o where o.stopFactEmpty = :stopFactEmpty JSelect o from UniversalToolDeal o where o.failReasonTool = :failReasonTool >Select o from UniversalToolDeal o where o.toolMode = :toolMode�� FSelect o from UniversalToolDeal o where o.orderPayMain = :orderPayMain NSelect o from UniversalToolDeal o where o.orderPayInterest = :orderPayInterest NSelect o from UniversalToolDeal o where o.interestRateType = :interestRateType #com/sybase/orm/ejb3/dao/EJB3DaoImpl 6ru/sbrf/uvz/model/instruments/dao/UniversalToolDealDao com/sybase/orm/dao/DaoException java/util/List (Ljava/lang/Object;)V 'ru/sbrf/uvz/model/core/AbstractEntityPK getId ()J java/lang/Long valueOf (J)Ljava/lang/Long; find 7(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object; append ,(Ljava/lang/String;)Ljava/lang/StringBuffer; 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\daoimpl\ejb3\UniversalToolDealDaoImpl.class : getSumTool ()Ljava/math/BigDecimal; add (Ljava/lang/Object;)Z getTermMonth ()Ljava/lang/Integer; (I)V equals getIndividScheduleMainComment ()Ljava/lang/String; !getIndividScheduleInterestComment getDefermentPrincipalMonth getDefermentInterestMonth getInterestRateNum getInterestRateString getDelayCondition getOtherCondition getCovenants getAccordingM2723 ()Ljava/lang/Boolean; java/lang/Boolean FALSE getNotReUsed getIsInstrumentBasic getAdditionalParticipant getDealDate ()Ljava/util/Date; getStopFactEmpty getFailReasonTool size ()I toString toArray (([Ljava/lang/Object;)[Ljava/lang/Object; ()[Ljava/lang/Object; findByNamedParam J(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List; findByEJBQuery H(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List; J(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List; get (I)Ljava/lang/Object; ! 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferCredAgrTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; debtTransferCredAgrs Ljava/util/List; result testGetDebtTransferCredAgrList 	preInsert B()Lru/sbrf/uvz/model/instruments/debttransfer/DebtTransferCredAgr; doInsert C(Lru/sbrf/uvz/model/instruments/debttransfer/DebtTransferCredAgr;)V afterInsert anotherDebtTransferCredAgr 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldDebtTransferCredAgrs 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTest.class : debtTransfers Ljava/util/List; result testFindByDebtTransferSigned debtTransferSigned Ljava/lang/Boolean; testFindByAssignFailComment assignFailComment testFindByAssignContractNum assignContractNum testFindByAssignContractDate assignContractDate Ljava/util/Date; testGetDebtTransferList 	preInsert ;()Lru/sbrf/uvz/model/instruments/debttransfer/DebtTransfer; doInsert <(Lru/sbrf/uvz/model/instruments/debttransfer/DebtTransfer;)V afterInsert anotherDebtTransfer 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByToolPurpose $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldDebtTransfers 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\debttransfer\DebtTransferTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setToolPurpose setDebtTransferSigned setAssignFailComment setAssignContractNum setAssignContractDate factory/DaoFactory 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderChosenTest.class : testDelete testFindByDateCourtOrder dateCourtOrder Ljava/util/Date; courtOrderChosens Ljava/util/List; result testFindByDateEntry 	dateEntry testFindByDateDeleteEntry dateDeleteEntry testGetCourtOrderChosenList 	preInsert I()Lru/sbrf/uvz/model/instruments/enforcementproceedings/CourtOrderChosen; doInsert J(Lru/sbrf/uvz/model/instruments/enforcementproceedings/CourtOrderChosen;)V afterInsert anotherCourtOrderChosen 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDateCourtOrder "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldCourtOrderChosens 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\CourtOrderTest.class : testDelete testGetCourtOrderList courtOrders Ljava/util/List; result 	preInsert C()Lru/sbrf/uvz/model/instruments/enforcementproceedings/CourtOrder; doInsert D(Lru/sbrf/uvz/model/instruments/enforcementproceedings/CourtOrder;)V afterInsert anotherCourtOrder 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCourtOrderList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCourtOrders size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforcementProceedingsTest.class : testDelete #testFindByDateTransferExecutionList dateTransferExecutionList Ljava/util/Date; enforcementProceedingss Ljava/util/List; result 'testFindByDatePresentationExecutionList datePresentationExecutionList #testFindByNumEnforcementProceedings numEnforcementProceedings )testFindByDateStartEnforcementProceedings dateStartEnforcementProceedings 'testFindByDateEndEnforcementProceedings dateEndEnforcementProceedings testFindByEnforcementStop enforcementStop Ljava/lang/Boolean; testFindByDateToolEnd dateToolEnd !testGetEnforcementProceedingsList 	preInsert O()Lru/sbrf/uvz/model/instruments/enforcementproceedings/EnforcementProceedings; doInsert P(Lru/sbrf/uvz/model/instruments/enforcementproceedings/EnforcementProceedings;)V afterInsert anotherEnforcementProceedings 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete "preFindByDateTransferExecutionList "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldEnforcementProceedingss 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\EnforceProcCredAgrTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; enforceProcCredAgrs Ljava/util/List; result testGetEnforceProcCredAgrList 	preInsert K()Lru/sbrf/uvz/model/instruments/enforcementproceedings/EnforceProcCredAgr; doInsert L(Lru/sbrf/uvz/model/instruments/enforcementproceedings/EnforceProcCredAgr;)V afterInsert anotherEnforceProcCredAgr 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldEnforceProcCredAgrs 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\enforcementproceedings\ReasonStopEnforcementTest.class : testDelete  testGetReasonStopEnforcementList reasonStopEnforcements Ljava/util/List; result 	preInsert N()Lru/sbrf/uvz/model/instruments/enforcementproceedings/ReasonStopEnforcement; doInsert O(Lru/sbrf/uvz/model/instruments/enforcementproceedings/ReasonStopEnforcement;)V afterInsert anotherReasonStopEnforcement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetReasonStopEnforcementList ()Ljava/util/List; it Ljava/util/Iterator; i I oldReasonStopEnforcements size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\InterestRateTypeTest.class : testDelete testGetInterestRateTypeList interestRateTypes Ljava/util/List; result 	preInsert 2()Lru/sbrf/uvz/model/instruments/InterestRateType; doInsert 3(Lru/sbrf/uvz/model/instruments/InterestRateType;)V afterInsert anotherInterestRateType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetInterestRateTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldInterestRateTypes size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\judical\CourtCreditAgreementTest.class : testDelete testFindByOverduedebt overduedebt I courtCreditAgreements Ljava/util/List; result testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; testFindByRecoveryType recoveryType testGetCourtCreditAgreementList 	preInsert >()Lru/sbrf/uvz/model/instruments/judical/CourtCreditAgreement; doInsert ?(Lru/sbrf/uvz/model/instruments/judical/CourtCreditAgreement;)V afterInsert anotherCourtCreditAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByOverduedebt (I)Ljava/util/List; it Ljava/util/Iterator; i oldCourtCreditAgreements 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\judical\LegalDocumentsTest.class : testDelete testFindByDocumentname documentname legalDocumentss Ljava/util/List; result testFindByAvailability availability testGetLegalDocumentsList 	preInsert 8()Lru/sbrf/uvz/model/instruments/judical/LegalDocuments; doInsert 9(Lru/sbrf/uvz/model/instruments/judical/LegalDocuments;)V afterInsert anotherLegalDocuments 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDocumentname $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldLegalDocumentss 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\judical\LegalRecoveryTest.class : testDelete testGetLegalRecoveryList legalRecoverys Ljava/util/List; result 	preInsert 7()Lru/sbrf/uvz/model/instruments/judical/LegalRecovery; doInsert 8(Lru/sbrf/uvz/model/instruments/judical/LegalRecovery;)V afterInsert anotherLegalRecovery 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetLegalRecoveryList ()Ljava/util/List; it Ljava/util/Iterator; i I oldLegalRecoverys size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\judical\ProvisionAgreementChosenTest.class : isSelected Ljava/lang/Boolean; provisionAgreementChosens Ljava/util/List; result #testGetProvisionAgreementChosenList 	preInsert B()Lru/sbrf/uvz/model/instruments/judical/ProvisionAgreementChosen; doInsert C(Lru/sbrf/uvz/model/instruments/judical/ProvisionAgreementChosen;)V afterInsert anotherProvisionAgreementChosen 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIsSelected %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldProvisionAgreementChosens 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\judical\ResponderTest.class : mainObligator testFindByCreditDealMark creditDealMark testGetResponderList 	preInsert 3()Lru/sbrf/uvz/model/instruments/judical/Responder; doInsert 4(Lru/sbrf/uvz/model/instruments/judical/Responder;)V afterInsert anotherResponder 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByIslettersent %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialCredAgrTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; nonJudicialCredAgrs Ljava/util/List; result testGetNonJudicialCredAgrList 	preInsert H()Lru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialCredAgr; doInsert I(Lru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialCredAgr;)V afterInsert anotherNonJudicialCredAgr 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldNonJudicialCredAgrs 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTest.class : testDelete testFindByNonJudicialSigned nonJudicialSigned Ljava/lang/Boolean; nonJudicialRecoveryTools Ljava/util/List; result testFindByAssignFailComment assignFailComment "testGetNonJudicialRecoveryToolList 	preInsert M()Lru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialRecoveryTool; doInsert N(Lru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialRecoveryTool;)V afterInsert anotherNonJudicialRecoveryTool 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByNonJudicialSigned %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldNonJudicialRecoveryTools 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\nonjudicialrecovery\NonJudicialRecoveryToolTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setNonJudicialSigned setAssignFailComment factory/DaoFactory 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\PaymentOrderTest.class : paymentOrders Ljava/util/List; result testFindBySettings2 	settings2 testFindBySettings3 	settings3 testGetPaymentOrderList 	preInsert .()Lru/sbrf/uvz/model/instruments/PaymentOrder; doInsert /(Lru/sbrf/uvz/model/instruments/PaymentOrder;)V afterInsert anotherPaymentOrder 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySettings1 %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldPaymentOrders 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\restructure\RestructureCreditAgreementTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; restructureCreditAgreements Ljava/util/List; result %testGetRestructureCreditAgreementList 	preInsert H()Lru/sbrf/uvz/model/instruments/restructure/RestructureCreditAgreement; doInsert I(Lru/sbrf/uvz/model/instruments/restructure/RestructureCreditAgreement;)V afterInsert !anotherRestructureCreditAgreement 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldRestructureCreditAgreements 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\restructure\RestructureTest.class : testDelete testFindByToolPurpose toolPurpose restructures Ljava/util/List; result testFindByRestructureSigned restructureSigned Ljava/lang/Boolean; testFindByAssignFailComment assignFailComment testFindByAssignContractNum assignContractNum testFindByAssignContractDate assignContractDate Ljava/util/Date; testGetRestructureList 	preInsert 9()Lru/sbrf/uvz/model/instruments/restructure/Restructure; doInsert :(Lru/sbrf/uvz/model/instruments/restructure/Restructure;)V afterInsert anotherRestructure 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByToolPurpose $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRestructures 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\restructure\RestructureTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setToolPurpose setRestructureSigned setAssignFailComment setAssignContractNum setAssignContractDate factory/DaoFactory 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\ToolModeTest.class : testDelete testGetToolModeList 	toolModes Ljava/util/List; result 	preInsert *()Lru/sbrf/uvz/model/instruments/ToolMode; doInsert +(Lru/sbrf/uvz/model/instruments/ToolMode;)V afterInsert anotherToolMode 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetToolModeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldToolModes size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.class : testDelete testFindByTermMonth 	termMonth Ljava/lang/Integer; universalToolDeals Ljava/util/List; result $testFindByIndividScheduleMainComment individScheduleMainComment (testFindByIndividScheduleInterestComment individScheduleInterestComment !testFindByDefermentPrincipalMonth defermentPrincipalMonth  testFindByDefermentInterestMonth defermentInterestMonth testFindByInterestRateString interestRateString testFindByDelayCondition delayCondition testFindByOtherCondition otherCondition testFindByCovenants 	covenants testFindByAccordingM2723 accordingM2723 Ljava/lang/Boolean; testFindByNotReUsed 	notReUsed testFindByIsInstrumentBasic isInstrumentBasic testFindByAdditionalParticipant additionalParticipant testFindByDealDate dealDate Ljava/util/Date; testFindByStopFactEmpty 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.class : resultList 	preInsert 3()Lru/sbrf/uvz/model/instruments/UniversalToolDeal; doInsert 4(Lru/sbrf/uvz/model/instruments/UniversalToolDeal;)V afterInsert anotherUniversalToolDeal 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByTermMonth %(Ljava/lang/Integer;)Ljava/util/List; it Ljava/util/Iterator; i I oldUniversalToolDeals 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.class : StackMapTable doFindByTermMonth afterFindByTermMonth #(Ljava/util/List;Ljava/util/List;)V resultFound #preFindByIndividScheduleMainComment $(Ljava/lang/String;)Ljava/util/List; "doFindByIndividScheduleMainComment %afterFindByIndividScheduleMainComment 'preFindByIndividScheduleInterestComment &doFindByIndividScheduleInterestComment )afterFindByIndividScheduleInterestComment  preFindByDefermentPrincipalMonth doFindByDefermentPrincipalMonth "afterFindByDefermentPrincipalMonth preFindByDefermentInterestMonth doFindByDefermentInterestMonth !afterFindByDefermentInterestMonth preFindByInterestRateString doFindByInterestRateString afterFindByInterestRateString preFindByDelayCondition doFindByDelayCondition afterFindByDelayCondition preFindByOtherCondition doFindByOtherCondition afterFindByOtherCondition preFindByCovenants doFindByCovenants afterFindByCovenants preFindByAccordingM2723 %(Ljava/lang/Boolean;)Ljava/util/List; doFindByAccordingM2723 afterFindByAccordingM2723 preFindByNotReUsed doFindByNotReUsed afterFindByNotReUsed preFindByIsInstrumentBasic doFindByIsInstrumentBasic afterFindByIsInstrumentBasic preFindByAdditionalParticipant doFindByAdditionalParticipant  afterFindByAdditionalParticipant preFindByDealDate "(Ljava/util/Date;)Ljava/util/List; doFindByDealDate afterFindByDealDate preFindByStopFactEmpty doFindByStopFactEmpty afterFindByStopFactEmpty preFindByFailReasonTool doFindByFailReasonTool afterFindByFailReasonTool preGetUniversalToolDealList ()Ljava/util/List; size doGetUniversalToolDealList afterGetUniversalToolDealList preInheritanceTest ()Ljava/util/Map; writeOffTool 9Lru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffTool; nonJudicialRecoveryTool KLru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialRecoveryTool; debtTransfer 9Lru/sbrf/uvz/model/instruments/debttransfer/DebtTransfer; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.class : SourceFile UniversalToolDealTest.java23 java/util/Random2*+,- 3ru/sbrf/uvz/model/instruments/UniversalToolDealTest01 Test insert begins! !"nopqrq Test insert ends! Test update begins!touqvq Test update ends! Test delete begins!xoyqzq Test delete ends! Test find-by-termMonth begins! java/lang/Integer#$2% java/util/ArrayList2<{|�|�� Test find-by-termMonth ends! /Test find-by-individScheduleMainComment begins!&'()*#+,-.������ -Test find-by-individScheduleMainComment ends! 3Test find-by-individScheduleInterestComment begins!������ 1Test find-by-individScheduleInterestComment ends! ,Test find-by-defermentPrincipalMonth begins!�|�|�� *Test find-by-defermentPrincipalMonth ends! +Test find-by-defermentInterestMonth begins!�|�|�� )Test find-by-defermentInterestMonth ends! 'Test find-by-interestRateString begins!������ %Test find-by-interestRateString ends! #Test find-by-delayCondition begins!������ !Test find-by-delayCondition ends! #Test find-by-otherCondition begins!������ !Test find-by-otherCondition ends! Test find-by-covenants begins!������ Test find-by-covenants ends! #Test find-by-accordingM2723 begins! java/lang/Boolean/021������ !Test find-by-accordingM2723 ends! Test find-by-notReUsed begins!������ Test find-by-notReUsed ends! &Test find-by-isInstrumentBasic begins!������ $Test find-by-isInstrumentBasic ends! *Test find-by-additionalParticipant begins!������ (Test find-by-additionalParticipant ends! Test find-by-dealDate begins! java/util/Date java/util/Calendar234������ Test find-by-dealDate ends! "Test find-by-stopFactEmpty begins!������  Test find-by-stopFactEmpty ends! #Test find-by-failReasonTool begins!������ !Test find-by-failReasonTool ends! 'Test get-universalToolDeal-list begins!������ %Test get-universalToolDeal-list ends! Test inheritance begins!��./56��� Test inheritance ends!789:q;<<=>? 2Queried result does not equal to inserted instance@ABq�oCqDq 1Queried result does not equal to updated instance  Inserted instance is not deletedEFG|HIJ0KL /ru/sbrf/uvz/model/instruments/UniversalToolDealM+NOPQ�$ -Result returned by find-by-termMonth is null.RF 8Result count returned by find-by-termMonth is incorrect.@STU YResult returned by find-by-termMonth does not equal to inserted universalToolDeal object.V�W3 >Result returned by find-by-individScheduleMainComment is null. IResult count returned by find-by-individScheduleMainComment is incorrect. jResult returned by find-by-individScheduleMainComment does not equal to inserted universalToolDeal object.X�Y3 BResult returned by find-by-individScheduleInterestComment is null. MResult count returned by find-by-individScheduleInterestComment is incorrect. nResult returned by find-by-individScheduleInterestComment does not equal to inserted universalToolDeal object.Z|[O ;Result returned by find-by-defermentPrincipalMonth is null. FResult count returned by find-by-defermentPrincipalMonth is incorrect. gResult returned by find-by-defermentPrincipalMonth does not equal to inserted universalToolDeal object.\|]O :Result returned by find-by-defermentInterestMonth is null. EResult count returned by find-by-defermentInterestMonth is incorrect. fResult returned by find-by-defermentInterestMonth does not equal to inserted universalToolDeal object.^�_3 6Result returned by find-by-interestRateString is null. AResult count returned by find-by-interestRateString is incorrect. bResult returned by find-by-interestRateString does not equal to inserted universalToolDeal object.`�a3 2Result returned by find-by-delayCondition is null. =Result count returned by find-by-delayCondition is incorrect. ^Result returned by find-by-delayCondition does not equal to inserted universalToolDeal object.b�c3 2Result returned by find-by-otherCondition is null. =Result count returned by find-by-otherCondition is incorrect. ^Result returned by find-by-otherCondition does not equal to inserted universalToolDeal object.d�e3 -Result returned by find-by-covenants is null. 8Result count returned by find-by-covenants is incorrect. YResult returned by find-by-covenants does not equal to inserted universalToolDeal object.f�gh 2Result returned by find-by-accordingM2723 is null. =Result count returned by find-by-accordingM2723 is incorrect. ^Result returned by find-by-accordingM2723 does not equal to inserted universalToolDeal object.i�jh -Result returned by find-by-notReUsed is null. 8Result count returned by find-by-notReUsed is incorrect. YResult returned by find-by-notReUsed does not equal to inserted universalToolDeal object.k�lh 5Result returned by find-by-isInstrumentBasic is null. @Result count returned by find-by-isInstrumentBasic is incorrect. aResult returned by find-by-isInstrumentBasic does not equal to inserted universalToolDeal object.m�n3 9Result returned by find-by-additionalParticipant is null. DResult count returned by find-by-additionalParticipant is incorrect. eResult returned by find-by-additionalParticipant does not equal to inserted universalToolDeal object.o�pq ,Result returned by find-by-dealDate is null. 7Result count returned by find-by-dealDate is incorrect. XResult returned by find-by-dealDate does not equal to inserted universalToolDeal object.r�sh 1Result returned by find-by-stopFactEmpty is null. <Result count returned by find-by-stopFactEmpty is incorrect. ]Result returned by find-by-stopFactEmpty does not equal to inserted universalToolDeal object.t�u3 2Result returned by find-by-failReasonTool is null. =Result count returned by find-by-failReasonTool is incorrect. ^Result returned by find-by-failReasonTool does not equal to inserted universalToolDeal object. 6Result returned by get-universalToolDeal-list is null. AResult count returned by get-universalToolDeal-list is incorrect. bResult returned by get-universalToolDeal-list does not equal to inserted universalToolDeal object. java/util/HashMapvwx8y:z 7ru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffTool{8|:} Iru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialRecoveryTool~8:� 7ru/sbrf/uvz/model/instruments/debttransfer/DebtTransfer�8�:� 9ru/sbrf/uvz/model/instruments/bailtobalance/BailToBalance�8�:� Eru/sbrf/uvz/model/instruments/additionalfinancing/AdditionalFinancing�8�:� 5ru/sbrf/uvz/model/instruments/restructure/Restructure�8�:� ;ru/sbrf/uvz/model/instruments/compensation/CompensationTool�8�:� 1ru/sbrf/uvz/model/instruments/cession/CessionTool�8�:� <ru/sbrf/uvz/model/instruments/amicable/AmicableAgreementTool��� java/lang/Class�� java/lang/StringBuilder Query result by ���� " does not equal to inserted object�� "Queried object is not instance of �����q�<���<�< junit/framework/TestSuite2� junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\UniversalToolDealTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool factory/DaoFactory 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\UniversalToolDealTest.class : assertNotNull (Ljava/lang/String;II)V getUniversalToolDealByPk r(Ljava/util/Collection;Lru/sbrf/uvz/model/core/AbstractEntityPK;)Lru/sbrf/uvz/model/instruments/UniversalToolDeal;  findByIndividScheduleMainComment setIndividScheduleMainComment $findByIndividScheduleInterestComment !setIndividScheduleInterestComment findByDefermentPrincipalMonth setDefermentPrincipalMonth findByDefermentInterestMonth setDefermentInterestMonth findByInterestRateString setInterestRateString findByDelayCondition setDelayCondition findByOtherCondition setOtherCondition findByCovenants setCovenants findByAccordingM2723 setAccordingM2723 (Ljava/lang/Boolean;)V findByNotReUsed setNotReUsed findByIsInstrumentBasic setIsInstrumentBasic findByAdditionalParticipant setAdditionalParticipant findByDealDate setDealDate (Ljava/util/Date;)V findByStopFactEmpty setStopFactEmpty findByFailReasonTool setFailReasonTool put 8(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; Aru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffToolTestHelper <(Z)Lru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffTool; <(Lru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffTool;)V Sru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialRecoveryToolTestHelper N(Z)Lru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialRecoveryTool; N(Lru/sbrf/uvz/model/instruments/nonjudicialrecovery/NonJudicialRecoveryTool;)V Aru/sbrf/uvz/model/instruments/debttransfer/DebtTransferTestHelper <(Z)Lru/sbrf/uvz/model/instruments/debttransfer/DebtTransfer; <(Lru/sbrf/uvz/model/instruments/debttransfer/DebtTransfer;)V Cru/sbrf/uvz/model/instruments/bailtobalance/BailToBalanceTestHelper >(Z)Lru/sbrf/uvz/model/instruments/bailtobalance/BailToBalance; >(Lru/sbrf/uvz/model/instruments/bailtobalance/BailToBalance;)V Oru/sbrf/uvz/model/instruments/additionalfinancing/AdditionalFinancingTestHelper J(Z)Lru/sbrf/uvz/model/instruments/additionalfinancing/AdditionalFinancing; J(Lru/sbrf/uvz/model/instruments/additionalfinancing/AdditionalFinancing;)V ?ru/sbrf/uvz/model/instruments/restructure/RestructureTestHelper :(Z)Lru/sbrf/uvz/model/instruments/restructure/Restructure; :(Lru/sbrf/uvz/model/instruments/restructure/Restructure;)V Eru/sbrf/uvz/model/instruments/compensation/CompensationToolTestHelper @(Z)Lru/sbrf/uvz/model/instruments/compensation/CompensationTool; @(Lru/sbrf/uvz/model/instruments/compensation/CompensationTool;)V ;ru/sbrf/uvz/model/instruments/cession/CessionToolTestHelper 6(Z)Lru/sbrf/uvz/model/instruments/cession/CessionTool; 6(Lru/sbrf/uvz/model/instruments/cession/CessionTool;)V Fru/sbrf/uvz/model/instruments/amicable/AmicableAgreementToolTestHelper A(Z)Lru/sbrf/uvz/model/instruments/amicable/AmicableAgreementTool; A(Lru/sbrf/uvz/model/instruments/amicable/AmicableAgreementTool;)V keySet ()Ljava/util/Set; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffCredAgrTest.class : testDelete testFindByAgreementChosen agreementChosen Ljava/lang/Boolean; writeOffCredAgrs Ljava/util/List; result testGetWriteOffCredAgrList 	preInsert >()Lru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffCredAgr; doInsert ?(Lru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffCredAgr;)V afterInsert anotherWriteOffCredAgr 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByAgreementChosen %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldWriteOffCredAgrs 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTest.class : writeOffTools Ljava/util/List; result testFindByAssignFailComment assignFailComment testGetWriteOffToolList 	preInsert ;()Lru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffTool; doInsert <(Lru/sbrf/uvz/model/instruments/writeoffdebt/WriteOffTool;)V afterInsert anotherWriteOffTool 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByWriteOffSigned %(Ljava/lang/Boolean;)Ljava/util/List; it Ljava/util/Iterator; i I oldWriteOffTools 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\instruments\writeoffdebt\WriteOffToolTestHelper.class : setStatusWork setCaseOwner (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setCreateDateTime (Ljava/util/Date;)V setCase_key setCasePerformer setCaseInitiator ()I (I)V setTermMonth (Ljava/lang/Integer;)V setIndividScheduleMainComment !setIndividScheduleInterestComment setDefermentPrincipalMonth setDefermentInterestMonth setInterestRateString setDelayCondition setOtherCondition setCovenants nextBoolean ()Z (Z)V setAccordingM2723 (Ljava/lang/Boolean;)V setNotReUsed setIsInstrumentBasic setAdditionalParticipant setDealDate setStopFactEmpty setFailReasonTool setWriteOffSigned setAssignFailComment factory/DaoFactory 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\CollectionModelChangeReasonTest.class : testDelete &testGetCollectionModelChangeReasonList collectionModelChangeReasons Ljava/util/List; result 	preInsert 9()Lru/sbrf/uvz/model/process/CollectionModelChangeReason; doInsert :(Lru/sbrf/uvz/model/process/CollectionModelChangeReason;)V afterInsert "anotherCollectionModelChangeReason 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete %preGetCollectionModelChangeReasonList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCollectionModelChangeReasons size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\CollectionModelTest.class : testDelete testGetCollectionModelList collectionModels Ljava/util/List; result 	preInsert -()Lru/sbrf/uvz/model/process/CollectionModel; doInsert .(Lru/sbrf/uvz/model/process/CollectionModel;)V afterInsert anotherCollectionModel 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCollectionModelList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCollectionModels size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\BpmUserTest.class : testDelete testFindByExecutorName executorName bpmUsers Ljava/util/List; result testFindByPhoneNumber phoneNumber testFindByExecutionOrgUnit executionOrgUnit testGetBpmUserList 	preInsert 2()Lru/sbrf/uvz/model/process/courtrequest/BpmUser; doInsert 3(Lru/sbrf/uvz/model/process/courtrequest/BpmUser;)V afterInsert anotherBpmUser 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByExecutorName $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldBpmUsers 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\ClaimsGrantedTest.class : testDelete testFindByRequirementCurrency requirementCurrency claimsGranteds Ljava/util/List; result testGetClaimsGrantedList 	preInsert 8()Lru/sbrf/uvz/model/process/courtrequest/ClaimsGranted; doInsert 9(Lru/sbrf/uvz/model/process/courtrequest/ClaimsGranted;)V afterInsert anotherClaimsGranted 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByRequirementCurrency $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldClaimsGranteds 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\CourtCaseBPMTest.class : courtCaseBPMs Ljava/util/List; result testFindByCourtCase_ID courtCase_ID testFindByCourtprovisionstatus courtprovisionstatus testGetCourtCaseBPMList 	preInsert 7()Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM; doInsert 8(Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM;)V afterInsert anotherCourtCaseBPM 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByBpmpoasenumber $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldCourtCaseBPMs 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\CourtCaseTest.class : resultList 	preInsert 4()Lru/sbrf/uvz/model/process/courtrequest/CourtCase; doInsert 5(Lru/sbrf/uvz/model/process/courtrequest/CourtCase;)V afterInsert anotherCourtCase 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCaseNumber $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\CourtDecisionTest.class : documentClass courtDecisions Ljava/util/List; result testFindByJuridAct juridAct testFindByNextStep nextStep testFindByMainSessionDate mainSessionDate Ljava/util/Date; testFindByCourtDecisionDate courtDecisionDate testFindByRequirementList requirementList testFindByReasonDecision reasonDecision testGetCourtDecisionList 	preInsert 8()Lru/sbrf/uvz/model/process/courtrequest/CourtDecision; doInsert 9(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;)V afterInsert anotherCourtDecision 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDocumentClass $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldCourtDecisions 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\CourtInstanceTest.class : testDelete testGetCourtInstanceList courtInstances Ljava/util/List; result 	preInsert 8()Lru/sbrf/uvz/model/process/courtrequest/CourtInstance; doInsert 9(Lru/sbrf/uvz/model/process/courtrequest/CourtInstance;)V afterInsert anotherCourtInstance 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetCourtInstanceList ()Ljava/util/List; it Ljava/util/Iterator; i I oldCourtInstances size 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\CourtRequestTest.class : requestStatus testFindByRequestSentDate requestSentDate Ljava/util/Date; testFindByCrossLinkECM crossLinkECM testFindByCrossLinkECMbpm crossLinkECMbpm testGetCourtRequestList 	preInsert 7()Lru/sbrf/uvz/model/process/courtrequest/CourtRequest; doInsert 8(Lru/sbrf/uvz/model/process/courtrequest/CourtRequest;)V afterInsert anotherCourtRequest 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByRequesttopic $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldCourtRequests 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\CourtTest.class : testDelete testFindByCourttype 	courttype courts Ljava/util/List; result testFindByCourtname 	courtname testFindByCourtadress courtadress testGetCourtList 	preInsert 0()Lru/sbrf/uvz/model/process/courtrequest/Court; doInsert 1(Lru/sbrf/uvz/model/process/courtrequest/Court;)V afterInsert anotherCourt 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCourttype $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldCourts 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\dao\ProcessDocumentDao.class : Exceptions ( load c(Lru/sbrf/uvz/model/core/AbstractEntityPK;)Lru/sbrf/uvz/model/process/courtrequest/ProcessDocument; delete ;(Lru/sbrf/uvz/model/process/courtrequest/ProcessDocument;)V update getProcessDocumentList ()Ljava/util/List; (II)Ljava/util/List; queryByExample J(Lru/sbrf/uvz/model/process/courtrequest/ProcessDocument;)Ljava/util/List; findByDocumentNumber $(Ljava/lang/String;)Ljava/util/List; &(Ljava/lang/String;II)Ljava/util/List; findByDocumentName findByOtherDocumentType findByDocumentDate "(Ljava/util/Date;)Ljava/util/List; $(Ljava/util/Date;II)Ljava/util/List; findByCommentDocument findBySubbmittingDate findByGettingsDocumentDate findByCourtDecisionInfo H(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;)Ljava/util/List; J(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;II)Ljava/util/List; findByX_courtCaseBPMPO G(Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM;)Ljava/util/List; I(Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM;II)Ljava/util/List; 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\dao\RecoveryParamsDao.class : findByForfeit findByStatefee findByOtheramounts findByRecoveryDecision H(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;)Ljava/util/List; J(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;II)Ljava/util/List; 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.class : StackMapTable � � getProcessDocumentList ()Ljava/util/List; (II)Ljava/util/List; firstResult I 	maxResult findByDocumentNumber $(Ljava/lang/String;)Ljava/util/List; documentNumber &(Ljava/lang/String;II)Ljava/util/List; findByDocumentName documentName findByOtherDocumentType otherDocumentType findByDocumentDate "(Ljava/util/Date;)Ljava/util/List; documentDate Ljava/util/Date; $(Ljava/util/Date;II)Ljava/util/List; findByCommentDocument commentDocument findBySubbmittingDate subbmittingDate findByGettingsDocumentDate gettingsDocumentDate findByCourtDecisionInfo H(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;)Ljava/util/List; courtDecisionInfo 6Lru/sbrf/uvz/model/process/courtrequest/CourtDecision; J(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;II)Ljava/util/List; findByX_courtCaseBPMPO G(Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM;)Ljava/util/List; x_courtCaseBPMPO 5Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM; I(Lru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM;II)Ljava/util/List; 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\ProcessDocumentDaoImpl.class : SourceFile ProcessDocumentDaoImpl.java M N T � 6ru/sbrf/uvz/model/process/courtrequest/ProcessDocument � � � � � � � � ^ � ` � java/lang/StringBuffer java/util/ArrayList Jru/sbrf/uvz/model/process/courtrequest/daoimpl/ejb3/ProcessDocumentDaoImpl Select o from ProcessDocument o � �  where 1 = 1 � �   � � ' and o.documentNumber = :documentNumber � � � � � # and o.documentName = :documentName � � - and o.otherDocumentType = :otherDocumentType � � # and o.documentDate = :documentDate � � ) and o.commentDocument = :commentDocument � � ) and o.subbmittingDate = :subbmittingDate � � 3 and o.gettingsDocumentDate = :gettingsDocumentDate � � java/lang/String � � � � � � � � � w � y HSelect o from ProcessDocument o where o.documentNumber = :documentNumber � � � � DSelect o from ProcessDocument o where o.documentName = :documentName NSelect o from ProcessDocument o where o.otherDocumentType = :otherDocumentType DSelect o from ProcessDocument o where o.documentDate = :documentDate JSelect o from ProcessDocument o where o.commentDocument = :commentDocument JSelect o from ProcessDocument o where o.subbmittingDate = :subbmittingDate TSelect o from ProcessDocument o where o.gettingsDocumentDate = :gettingsDocumentDate NSelect o from ProcessDocument o where o.courtDecisionInfo = :courtDecisionInfo LSelect o from ProcessDocument o where o.x_courtCaseBPMPO = :x_courtCaseBPMPO #com/sybase/orm/ejb3/dao/EJB3DaoImpl =ru/sbrf/uvz/model/process/courtrequest/dao/ProcessDocumentDao com/sybase/orm/dao/DaoException java/util/List (Ljava/lang/Object;)V 'ru/sbrf/uvz/model/core/AbstractEntityPK getId ()J java/lang/Long valueOf (J)Ljava/lang/Long; find 7(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object; append ,(Ljava/lang/String;)Ljava/lang/StringBuffer; getDocumentNumber ()Ljava/lang/String; equals (Ljava/lang/Object;)Z add getDocumentName getOtherDocumentType getDocumentDate ()Ljava/util/Date; getCommentDocument getSubbmittingDate getGettingsDocumentDate size ()I toString toArray (([Ljava/lang/Object;)[Ljava/lang/Object; ()[Ljava/lang/Object; findByNamedParam J(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List; findByEJBQuery H(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List; J(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List; ! 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.class : findByForfeit forfeit findByStatefee statefee findByOtheramounts otheramounts findByRecoveryDecision H(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;)Ljava/util/List; recoveryDecision 6Lru/sbrf/uvz/model/process/courtrequest/CourtDecision; J(Lru/sbrf/uvz/model/process/courtrequest/CourtDecision;II)Ljava/util/List; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.class : SourceFile RecoveryParamsDaoImpl.java D E K � 5ru/sbrf/uvz/model/process/courtrequest/RecoveryParams � � � � � � � � U � W � java/lang/StringBuffer java/util/ArrayList Iru/sbrf/uvz/model/process/courtrequest/daoimpl/ejb3/RecoveryParamsDaoImpl Select o from RecoveryParams o � �  where 1 = 1 � �  and o.debtsum = :debtsum � � � � � � � �  and o.rate = :rate � �  and o.prophrate = :prophrate � �  and o.forfeit = :forfeit � �  and o.statefee = :statefee � � # and o.otheramounts = :otheramounts � � java/lang/String � � � � � � � � � � � � 9Select o from RecoveryParams o where o.debtsum = :debtsum � � � � 3Select o from RecoveryParams o where o.rate = :rate =Select o from RecoveryParams o where o.prophrate = :prophrate 9Select o from RecoveryParams o where o.forfeit = :forfeit ;Select o from RecoveryParams o where o.statefee = :statefee CSelect o from RecoveryParams o where o.otheramounts = :otheramounts KSelect o from RecoveryParams o where o.recoveryDecision = :recoveryDecision #com/sybase/orm/ejb3/dao/EJB3DaoImpl <ru/sbrf/uvz/model/process/courtrequest/dao/RecoveryParamsDao com/sybase/orm/dao/DaoException java/util/List (Ljava/lang/Object;)V 'ru/sbrf/uvz/model/core/AbstractEntityPK getId ()J java/lang/Long valueOf (J)Ljava/lang/Long; find 7(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object; append ,(Ljava/lang/String;)Ljava/lang/StringBuffer; 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\daoimpl\ejb3\RecoveryParamsDaoImpl.class : getForfeit getStatefee getOtheramounts size toString ()Ljava/lang/String; toArray (([Ljava/lang/Object;)[Ljava/lang/Object; ()[Ljava/lang/Object; findByNamedParam J(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List; findByEJBQuery $(Ljava/lang/String;)Ljava/util/List; &(Ljava/lang/String;II)Ljava/util/List; H(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List; J(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List; ! 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\EventTest.class : testDelete testFindByEventDate 	eventDate Ljava/util/Date; events Ljava/util/List; result testFindByEventType 	eventType testFindByEventName 	eventName testGetEventList 	preInsert 0()Lru/sbrf/uvz/model/process/courtrequest/Event; doInsert 1(Lru/sbrf/uvz/model/process/courtrequest/Event;)V afterInsert anotherEvent 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByEventDate "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldEvents 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\EventTypeTest.class : eventTypes Ljava/util/List; result 	preInsert 4()Lru/sbrf/uvz/model/process/courtrequest/EventType; doInsert 5(Lru/sbrf/uvz/model/process/courtrequest/EventType;)V afterInsert anotherEventType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetEventTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.class : testDelete testFindByDocumentNumber documentNumber processDocuments Ljava/util/List; result testFindByDocumentName documentName testFindByOtherDocumentType otherDocumentType testFindByDocumentDate documentDate Ljava/util/Date; testFindByCommentDocument commentDocument testFindBySubbmittingDate subbmittingDate testFindByGettingsDocumentDate gettingsDocumentDate testGetProcessDocumentList 	preInsert :()Lru/sbrf/uvz/model/process/courtrequest/ProcessDocument; doInsert ;(Lru/sbrf/uvz/model/process/courtrequest/ProcessDocument;)V afterInsert anotherProcessDocument 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDocumentNumber $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldProcessDocuments 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.class : StackMapTable�� doFindByDocumentNumber afterFindByDocumentNumber #(Ljava/util/List;Ljava/util/List;)V resultFound preFindByDocumentName doFindByDocumentName afterFindByDocumentName preFindByOtherDocumentType doFindByOtherDocumentType afterFindByOtherDocumentType preFindByDocumentDate "(Ljava/util/Date;)Ljava/util/List; doFindByDocumentDate afterFindByDocumentDate preFindByCommentDocument doFindByCommentDocument afterFindByCommentDocument preFindBySubbmittingDate doFindBySubbmittingDate afterFindBySubbmittingDate preFindByGettingsDocumentDate doFindByGettingsDocumentDate afterFindByGettingsDocumentDate preGetProcessDocumentList ()Ljava/util/List; size doGetProcessDocumentList afterGetProcessDocumentList prepare deleteBeforeSave setUp tearDown suite ()Ljunit/framework/Test; 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.class : SourceFile ProcessDocumentTest.java � � java/util/Random �� � ���� � � :ru/sbrf/uvz/model/process/courtrequest/ProcessDocumentTest��� � � Test insert begins!��� � � � � � � Test insert ends! Test update begins! � � � � � � Test update ends! Test delete begins! � � � � � � Test delete ends! #Test find-by-documentNumber begins!���������� java/util/ArrayList � � � � � � � � !Test find-by-documentNumber ends! !Test find-by-documentName begins! � � � � � � Test find-by-documentName ends! &Test find-by-otherDocumentType begins! � � � � � � $Test find-by-otherDocumentType ends! !Test find-by-documentDate begins! java/util/Date java/util/Calendar��� � � � � � � Test find-by-documentDate ends! $Test find-by-commentDocument begins! � � � � � � "Test find-by-commentDocument ends! $Test find-by-subbmittingDate begins! � � � � � � "Test find-by-subbmittingDate ends! )Test find-by-gettingsDocumentDate begins! � � � � � � 'Test find-by-gettingsDocumentDate ends! %Test get-processDocument-list begins! � � � � � � #Test get-processDocument-list ends!���� � � ��� ����� 2Queried result does not equal to inserted instance��� � � �� �� � 1Queried result does not equal to updated instance  Inserted instance is not deleted��� ��������� 6ru/sbrf/uvz/model/process/courtrequest/ProcessDocument��� ��� �� 2Result returned by find-by-documentNumber is null.�� =Result count returned by find-by-documentNumber is incorrect.���� \Result returned by find-by-documentNumber does not equal to inserted processDocument object.� �� � 0Result returned by find-by-documentName is null. ;Result count returned by find-by-documentName is incorrect. ZResult returned by find-by-documentName does not equal to inserted processDocument object.� �� � 5Result returned by find-by-otherDocumentType is null. @Result count returned by find-by-otherDocumentType is incorrect. _Result returned by find-by-otherDocumentType does not equal to inserted processDocument object.� ��� 0Result returned by find-by-documentDate is null. ;Result count returned by find-by-documentDate is incorrect. ZResult returned by find-by-documentDate does not equal to inserted processDocument object.� �� � 3Result returned by find-by-commentDocument is null. >Result count returned by find-by-commentDocument is incorrect. ]Result returned by find-by-commentDocument does not equal to inserted processDocument object.� ��� 3Result returned by find-by-subbmittingDate is null. >Result count returned by find-by-subbmittingDate is incorrect. ]Result returned by find-by-subbmittingDate does not equal to inserted processDocument object.� ��� 8Result returned by find-by-gettingsDocumentDate is null. CResult count returned by find-by-gettingsDocumentDate is incorrect. bResult returned by find-by-gettingsDocumentDate does not equal to inserted processDocument object.� � 4Result returned by get-processDocument-list is null. ?Result count returned by get-processDocument-list is incorrect. ^Result returned by get-processDocument-list does not equal to inserted processDocument object. � � � ��� � �� � junit/framework/TestSuite �� junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTestHelper.class : SourceFile ProcessDocumentTestHelper.java 4 5 @ru/sbrf/uvz/model/process/courtrequest/ProcessDocumentTestHelper � � � 2 3 6ru/sbrf/uvz/model/process/courtrequest/ProcessDocument 0 1 � � � � � � � � � � � � � � � � � java/util/Date 4 � java/util/Calendar � � � � � � � � � � � � � � � � � C � � � � � � � 5 � F � � � � � � � F � F B � V � � � � � � � � � � � � � � O P � � � java/lang/Object 4ru/sbrf/uvz/model/process/courtrequest/CourtDecision 3ru/sbrf/uvz/model/process/courtrequest/CourtCaseBPM java/util/Iterator %org/apache/commons/logging/LogFactory getLog 3(Ljava/lang/Class;)Lorg/apache/commons/logging/Log; java/lang/Math pow (DD)D round (D)J java/util/Random nextInt (I)I java/lang/String valueOf (I)Ljava/lang/String; setDocumentNumber (Ljava/lang/String;)V setDocumentName setOtherDocumentType (J)V 'org/apache/commons/lang3/time/DateUtils truncate #(Ljava/util/Date;I)Ljava/util/Date; setDocumentDate (Ljava/util/Date;)V setCommentDocument setSubbmittingDate setGettingsDocumentDate factory/DaoFactory 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\ProcessDocumentTest.class : assertNotNull (Ljava/lang/String;II)V getProcessDocumentByPk y(Ljava/util/Collection;Lru/sbrf/uvz/model/core/AbstractEntityPK;)Lru/sbrf/uvz/model/process/courtrequest/ProcessDocument; findByDocumentName setDocumentName findByOtherDocumentType setOtherDocumentType findByDocumentDate setDocumentDate (Ljava/util/Date;)V findByCommentDocument setCommentDocument findBySubbmittingDate setSubbmittingDate findByGettingsDocumentDate setGettingsDocumentDate getProcessDocumentList getProcessDocumentDao A()Lru/sbrf/uvz/model/process/courtrequest/dao/ProcessDocumentDao; closePersistenceContext (Ljava/lang/Class;)V ! 	 �      � �     � �     � �    � �   2  � �  �   h     $*+� *� Y � � *� � *	� 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTestHelper.class : setForfeit setStatefee setOtheramounts factory/DaoFactory 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.class : testDelete testFindByDebtsum debtsum I recoveryParamss Ljava/util/List; result testFindByRate rate testFindByProphrate 	prophrate testFindByForfeit forfeit testFindByStatefee statefee testFindByOtheramounts otheramounts testGetRecoveryParamsList 	preInsert 9()Lru/sbrf/uvz/model/process/courtrequest/RecoveryParams; doInsert :(Lru/sbrf/uvz/model/process/courtrequest/RecoveryParams;)V afterInsert anotherRecoveryParams 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDebtsum (I)Ljava/util/List; it Ljava/util/Iterator; i oldRecoveryParamss 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.class : preFindByRate doFindByRate afterFindByRate preFindByProphrate doFindByProphrate afterFindByProphrate preFindByForfeit doFindByForfeit afterFindByForfeit preFindByStatefee doFindByStatefee afterFindByStatefee preFindByOtheramounts doFindByOtheramounts afterFindByOtheramounts preGetRecoveryParamsList ()Ljava/util/List; size doGetRecoveryParamsList afterGetRecoveryParamsList prepare deleteBeforeSave setUp tearDown suite ()Ljunit/framework/Test; 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.class : SourceFile RecoveryParamsTest.java � � java/util/Random �u � �vwx � � 9ru/sbrf/uvz/model/process/courtrequest/RecoveryParamsTestyz{ � � Test insert begins!|}~ � � � � � � Test insert ends! Test update begins! � � � � � � Test update ends! Test delete begins! � � � � � � Test delete ends! Test find-by-debtsum begins!� java/util/ArrayList � � � � � � � � Test find-by-debtsum ends! Test find-by-rate begins! � � � � � � Test find-by-rate ends! Test find-by-prophrate begins! � � � � � � Test find-by-prophrate ends! Test find-by-forfeit begins! � � � � � � Test find-by-forfeit ends! Test find-by-statefee begins! � � � � � � Test find-by-statefee ends! !Test find-by-otheramounts begins! � � � � � � Test find-by-otheramounts ends! $Test get-recoveryParams-list begins! � � � � � � "Test get-recoveryParams-list ends!���� � � ��� ����� 2Queried result does not equal to inserted instance��� � � �� �� � 1Queried result does not equal to updated instance  Inserted instance is not deleted��� �s��t���� 5ru/sbrf/uvz/model/process/courtrequest/RecoveryParams�������� �� +Result returned by find-by-debtsum is null.�� 6Result count returned by find-by-debtsum is incorrect.���� TResult returned by find-by-debtsum does not equal to inserted recoveryParams object.� ��� (Result returned by find-by-rate is null. 3Result count returned by find-by-rate is incorrect. QResult returned by find-by-rate does not equal to inserted recoveryParams object.� ��� -Result returned by find-by-prophrate is null. 8Result count returned by find-by-prophrate is incorrect. VResult returned by find-by-prophrate does not equal to inserted recoveryParams object.� ��� +Result returned by find-by-forfeit is null. 6Result count returned by find-by-forfeit is incorrect. TResult returned by find-by-forfeit does not equal to inserted recoveryParams object.� ��� ,Result returned by find-by-statefee is null. 7Result count returned by find-by-statefee is incorrect. UResult returned by find-by-statefee does not equal to inserted recoveryParams object.� ��� 0Result returned by find-by-otheramounts is null. ;Result count returned by find-by-otheramounts is incorrect. YResult returned by find-by-otheramounts does not equal to inserted recoveryParams object.� � 3Result returned by get-recoveryParams-list is null. >Result count returned by get-recoveryParams-list is incorrect. \Result returned by get-recoveryParams-list does not equal to inserted recoveryParams object. � � � ��� � �� � junit/framework/TestSuite �� junit/framework/TestCase java/lang/Exception java/util/List java/util/Iterator (J)V factory/DaoFactory 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RecoveryParamsTest.class : setForfeit findByStatefee setStatefee findByOtheramounts setOtheramounts getRecoveryParamsList getRecoveryParamsDao @()Lru/sbrf/uvz/model/process/courtrequest/dao/RecoveryParamsDao; closePersistenceContext (Ljava/lang/Class;)V ! 	 �      � �     � �     � �    � �   .  � �  �   h     $*+� *� Y � � *� � *	� 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RequestCategoryTest.class : testDelete testGetRequestCategoryList requestCategorys Ljava/util/List; result 	preInsert :()Lru/sbrf/uvz/model/process/courtrequest/RequestCategory; doInsert ;(Lru/sbrf/uvz/model/process/courtrequest/RequestCategory;)V afterInsert anotherRequestCategory 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRequestCategoryList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRequestCategorys size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RequestStatusTest.class : statusDesc testGetRequestStatusList 	preInsert 8()Lru/sbrf/uvz/model/process/courtrequest/RequestStatus; doInsert 9(Lru/sbrf/uvz/model/process/courtrequest/RequestStatus;)V afterInsert anotherRequestStatus 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByStatusCode $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRequestStatuss 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RequestSubjectTest.class : testDelete testGetRequestSubjectList requestSubjects Ljava/util/List; result 	preInsert 9()Lru/sbrf/uvz/model/process/courtrequest/RequestSubject; doInsert :(Lru/sbrf/uvz/model/process/courtrequest/RequestSubject;)V afterInsert anotherRequestSubject 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRequestSubjectList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRequestSubjects size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RequestTypeTest.class : testDelete testGetRequestTypeList requestTypes Ljava/util/List; result 	preInsert 6()Lru/sbrf/uvz/model/process/courtrequest/RequestType; doInsert 7(Lru/sbrf/uvz/model/process/courtrequest/RequestType;)V afterInsert anotherRequestType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRequestTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRequestTypes size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\RequirementListTest.class : testDelete testFindByRequirementType requirementType requirementLists Ljava/util/List; result testFindByTypeMaterialClaim typeMaterialClaim testFindByCurrencyMaterialClaim currencyMaterialClaim  testFindByInclusionExclusionDate inclusionExclusionDate Ljava/util/Date; testFindBySecuredByPledge securedByPledge Ljava/lang/Boolean; testFindByProvisionCurMatClaim provisionCurMatClaim testGetRequirementListList 	preInsert :()Lru/sbrf/uvz/model/process/courtrequest/RequirementList; doInsert ;(Lru/sbrf/uvz/model/process/courtrequest/RequirementList;)V afterInsert anotherRequirementList 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByRequirementType $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRequirementLists 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\courtrequest\TaskBPMTest.class : infoRequestId testFindByInfoRequestPoint infoRequestPoint testFindByAsUDDocumentLink asUDDocumentLink testGetTaskBPMList 	preInsert 2()Lru/sbrf/uvz/model/process/courtrequest/TaskBPM; doInsert 3(Lru/sbrf/uvz/model/process/courtrequest/TaskBPM;)V afterInsert anotherTaskBPM 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByTaskBPMName $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldTaskBPMs 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\DebtorsGroupPartyTest.class : testDelete testGetDebtorsGroupPartyList debtorsGroupPartys Ljava/util/List; result 	preInsert /()Lru/sbrf/uvz/model/process/DebtorsGroupParty; doInsert 0(Lru/sbrf/uvz/model/process/DebtorsGroupParty;)V afterInsert anotherDebtorsGroupParty 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetDebtorsGroupPartyList ()Ljava/util/List; it Ljava/util/Iterator; i I oldDebtorsGroupPartys size 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\DebtorsGroupTest.class : debtorsGroups Ljava/util/List; result 	preInsert *()Lru/sbrf/uvz/model/process/DebtorsGroup; doInsert +(Lru/sbrf/uvz/model/process/DebtorsGroup;)V afterInsert anotherDebtorsGroup 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetDebtorsGroupList ()Ljava/util/List; it Ljava/util/Iterator; i I oldDebtorsGroups size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\DebtorsRegToolGroupPartyTest.class : testDelete #testGetDebtorsRegToolGroupPartyList debtorsRegToolGroupPartys Ljava/util/List; result 	preInsert 6()Lru/sbrf/uvz/model/process/DebtorsRegToolGroupParty; doInsert 7(Lru/sbrf/uvz/model/process/DebtorsRegToolGroupParty;)V afterInsert anotherDebtorsRegToolGroupParty 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete "preGetDebtorsRegToolGroupPartyList ()Ljava/util/List; it Ljava/util/Iterator; i I oldDebtorsRegToolGroupPartys size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\DebtorsRegulationToolGroupTest.class : testDelete %testGetDebtorsRegulationToolGroupList debtorsRegulationToolGroups Ljava/util/List; result 	preInsert 8()Lru/sbrf/uvz/model/process/DebtorsRegulationToolGroup; doInsert 9(Lru/sbrf/uvz/model/process/DebtorsRegulationToolGroup;)V afterInsert !anotherDebtorsRegulationToolGroup 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete $preGetDebtorsRegulationToolGroupList ()Ljava/util/List; it Ljava/util/Iterator; i I oldDebtorsRegulationToolGroups size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\EmployeeUserTest.class : StackMapTable% doInsert +(Lru/sbrf/uvz/model/process/EmployeeUser;)V afterInsert anotherEmployeeUser 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByFullName $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldEmployeeUsers 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\LegalRequestTest.class : justification testFindByDescription description testFindByOpinionBpmPo opinionBpmPo testFindByCrossLinkBpmPo crossLinkBpmPo testFindByCaseKeyBpmPo caseKeyBpmPo testFindByCasePerformerBpmPo casePerformerBpmPo testFindByCrossLinkECM crossLinkECM testGetLegalRequestList 	preInsert *()Lru/sbrf/uvz/model/process/LegalRequest; doInsert +(Lru/sbrf/uvz/model/process/LegalRequest;)V afterInsert anotherLegalRequest 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByTopic $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldLegalRequests 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\ProblemAssetRegulationTest.class : testDelete !testGetProblemAssetRegulationList problemAssetRegulations Ljava/util/List; result 	preInsert 4()Lru/sbrf/uvz/model/process/ProblemAssetRegulation; doInsert 5(Lru/sbrf/uvz/model/process/ProblemAssetRegulation;)V afterInsert anotherProblemAssetRegulation 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete  preGetProblemAssetRegulationList ()Ljava/util/List; it Ljava/util/Iterator; i I oldProblemAssetRegulations size 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\ProjectRolesTest.class : projectRoless Ljava/util/List; result 	preInsert *()Lru/sbrf/uvz/model/process/ProjectRoles; doInsert +(Lru/sbrf/uvz/model/process/ProjectRoles;)V afterInsert anotherProjectRoles 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetProjectRolesList ()Ljava/util/List; it Ljava/util/Iterator; i I oldProjectRoless size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\ProjectTeamMemberTest.class : testDelete testGetProjectTeamMemberList projectTeamMembers Ljava/util/List; result 	preInsert /()Lru/sbrf/uvz/model/process/ProjectTeamMember; doInsert 0(Lru/sbrf/uvz/model/process/ProjectTeamMember;)V afterInsert anotherProjectTeamMember 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetProjectTeamMemberList ()Ljava/util/List; it Ljava/util/Iterator; i I oldProjectTeamMembers size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefLegReqServiceTest.class : testDelete testFindByServiceID 	serviceID refLegReqServices Ljava/util/List; result testFindByComplexityMode complexityMode testGetRefLegReqServiceList 	preInsert .()Lru/sbrf/uvz/model/process/RefLegReqService; doInsert /(Lru/sbrf/uvz/model/process/RefLegReqService;)V afterInsert anotherRefLegReqService 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByServiceID $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRefLegReqServices 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefLegRequestCategoryTest.class : testDelete  testGetRefLegRequestCategoryList refLegRequestCategorys Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/process/RefLegRequestCategory; doInsert 4(Lru/sbrf/uvz/model/process/RefLegRequestCategory;)V afterInsert anotherRefLegRequestCategory 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefLegRequestCategoryList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefLegRequestCategorys size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefLegRequestComplexityTest.class : testDelete "testGetRefLegRequestComplexityList refLegRequestComplexitys Ljava/util/List; result 	preInsert 5()Lru/sbrf/uvz/model/process/RefLegRequestComplexity; doInsert 6(Lru/sbrf/uvz/model/process/RefLegRequestComplexity;)V afterInsert anotherRefLegRequestComplexity 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete !preGetRefLegRequestComplexityList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefLegRequestComplexitys size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefLegRequestPriorityTest.class : testDelete  testGetRefLegRequestPriorityList refLegRequestPrioritys Ljava/util/List; result 	preInsert 3()Lru/sbrf/uvz/model/process/RefLegRequestPriority; doInsert 4(Lru/sbrf/uvz/model/process/RefLegRequestPriority;)V afterInsert anotherRefLegRequestPriority 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefLegRequestPriorityList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefLegRequestPrioritys size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefLegRequestSubjectTest.class : testDelete testGetRefLegRequestSubjectList refLegRequestSubjects Ljava/util/List; result 	preInsert 2()Lru/sbrf/uvz/model/process/RefLegRequestSubject; doInsert 3(Lru/sbrf/uvz/model/process/RefLegRequestSubject;)V afterInsert anotherRefLegRequestSubject 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefLegRequestSubjectList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefLegRequestSubjects size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefLegRequestSubTypeTest.class : testDelete testGetRefLegRequestSubTypeList refLegRequestSubTypes Ljava/util/List; result 	preInsert 2()Lru/sbrf/uvz/model/process/RefLegRequestSubType; doInsert 3(Lru/sbrf/uvz/model/process/RefLegRequestSubType;)V afterInsert anotherRefLegRequestSubType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefLegRequestSubTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefLegRequestSubTypes size 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefLegRequestTypeTest.class : testDelete testGetRefLegRequestTypeList refLegRequestTypes Ljava/util/List; result 	preInsert /()Lru/sbrf/uvz/model/process/RefLegRequestType; doInsert 0(Lru/sbrf/uvz/model/process/RefLegRequestType;)V afterInsert anotherRefLegRequestType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefLegRequestTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefLegRequestTypes size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefRegTaskStateTest.class : testDelete testGetRefRegTaskStateList refRegTaskStates Ljava/util/List; result 	preInsert -()Lru/sbrf/uvz/model/process/RefRegTaskState; doInsert .(Lru/sbrf/uvz/model/process/RefRegTaskState;)V afterInsert anotherRefRegTaskState 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefRegTaskStateList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefRegTaskStates size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefReqSpecDepTest.class : testDelete testGetRefReqSpecDepList refReqSpecDeps Ljava/util/List; result 	preInsert +()Lru/sbrf/uvz/model/process/RefReqSpecDep; doInsert ,(Lru/sbrf/uvz/model/process/RefReqSpecDep;)V afterInsert anotherRefReqSpecDep 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefReqSpecDepList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefReqSpecDeps size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefReqSpecDepTypeTest.class : testDelete testGetRefReqSpecDepTypeList refReqSpecDepTypes Ljava/util/List; result 	preInsert /()Lru/sbrf/uvz/model/process/RefReqSpecDepType; doInsert 0(Lru/sbrf/uvz/model/process/RefReqSpecDepType;)V afterInsert anotherRefReqSpecDepType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefReqSpecDepTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefReqSpecDepTypes size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefReqStatusBpmPoUPVTest.class : testDelete testFindByStatusUPV 	statusUPV refReqStatusBpmPoUPVs Ljava/util/List; result testGetRefReqStatusBpmPoUPVList 	preInsert 2()Lru/sbrf/uvz/model/process/RefReqStatusBpmPoUPV; doInsert 3(Lru/sbrf/uvz/model/process/RefReqStatusBpmPoUPV;)V afterInsert anotherRefReqStatusBpmPoUPV 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByStatusUPV $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRefReqStatusBpmPoUPVs 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RefReqStatusesBpmPoTest.class : testDelete testGetRefReqStatusesBpmPoList refReqStatusesBpmPos Ljava/util/List; result 	preInsert 1()Lru/sbrf/uvz/model/process/RefReqStatusesBpmPo; doInsert 2(Lru/sbrf/uvz/model/process/RefReqStatusesBpmPo;)V afterInsert anotherRefReqStatusesBpmPo 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRefReqStatusesBpmPoList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRefReqStatusesBpmPos size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RegPlanBlockTest.class : regPlanBlocks Ljava/util/List; result testFindByCase_key case_key testFindByDescription description testFindByPartyID partyID testGetRegPlanBlockList 	preInsert *()Lru/sbrf/uvz/model/process/RegPlanBlock; doInsert +(Lru/sbrf/uvz/model/process/RegPlanBlock;)V afterInsert anotherRegPlanBlock 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RegPlanBlockTypeTest.class : testDelete testGetRegPlanBlockTypeList regPlanBlockTypes Ljava/util/List; result 	preInsert .()Lru/sbrf/uvz/model/process/RegPlanBlockType; doInsert /(Lru/sbrf/uvz/model/process/RegPlanBlockType;)V afterInsert anotherRegPlanBlockType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRegPlanBlockTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRegPlanBlockTypes size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RegPlanTaskTest.class : dateCreate testFindByShortDescription shortDescription testGetRegPlanTaskList 	preInsert )()Lru/sbrf/uvz/model/process/RegPlanTask; doInsert *(Lru/sbrf/uvz/model/process/RegPlanTask;)V afterInsert anotherRegPlanTask 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByDescription $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRegPlanTasks 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RegTaskTemplateTest.class : testDelete testFindBySubject subject regTaskTemplates Ljava/util/List; result testFindByDuration duration Ljava/lang/Integer; testGetRegTaskTemplateList 	preInsert -()Lru/sbrf/uvz/model/process/RegTaskTemplate; doInsert .(Lru/sbrf/uvz/model/process/RegTaskTemplate;)V afterInsert anotherRegTaskTemplate 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindBySubject $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldRegTaskTemplates 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RegulationToolTest.class : resultList 	preInsert ,()Lru/sbrf/uvz/model/process/RegulationTool; doInsert -(Lru/sbrf/uvz/model/process/RegulationTool;)V afterInsert anotherRegulationTool 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRegulationToolList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRegulationTools size 
23 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\ScenarioTest.class : resultList 	preInsert &()Lru/sbrf/uvz/model/process/Scenario; doInsert '(Lru/sbrf/uvz/model/process/Scenario;)V afterInsert anotherScenario 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCase_ID $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I oldScenarios 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\SpecDepRequestTest.class : resultList 	preInsert ,()Lru/sbrf/uvz/model/process/SpecDepRequest; doInsert -(Lru/sbrf/uvz/model/process/SpecDepRequest;)V afterInsert anotherSpecDepRequest 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetSpecDepRequestList ()Ljava/util/List; it Ljava/util/Iterator; i I oldSpecDepRequests size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\RegulationPlanTest.class : testDelete testGetRegulationPlanList regulationPlans Ljava/util/List; result 	preInsert ,()Lru/sbrf/uvz/model/process/RegulationPlan; doInsert -(Lru/sbrf/uvz/model/process/RegulationPlan;)V afterInsert anotherRegulationPlan 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetRegulationPlanList ()Ljava/util/List; it Ljava/util/Iterator; i I oldRegulationPlans size 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\StrategyTest.class : testDelete testGetStrategyList 	strategys Ljava/util/List; result 	preInsert &()Lru/sbrf/uvz/model/process/Strategy; doInsert '(Lru/sbrf/uvz/model/process/Strategy;)V afterInsert anotherStrategy 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetStrategyList ()Ljava/util/List; it Ljava/util/Iterator; i I oldStrategys size 
28 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\TaskTest.class : StackMapTableF doInsert #(Lru/sbrf/uvz/model/process/Task;)V afterInsert anotherTask 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByCreateDateTime "(Ljava/util/Date;)Ljava/util/List; it Ljava/util/Iterator; i I oldTasks 
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\StageTest.class : resultList 	preInsert #()Lru/sbrf/uvz/model/process/Stage; doInsert $(Lru/sbrf/uvz/model/process/Stage;)V afterInsert anotherStage 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preFindByStageWorkStatus $(Ljava/lang/String;)Ljava/util/List; it Ljava/util/Iterator; i I 	oldStages 
18 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\ToolTypeTest.class : testDelete testGetToolTypeList 	toolTypes Ljava/util/List; result 	preInsert &()Lru/sbrf/uvz/model/process/ToolType; doInsert '(Lru/sbrf/uvz/model/process/ToolType;)V afterInsert anotherToolType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetToolTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldToolTypes size 
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-model\target\test-classes\ru\sbrf\uvz\model\process\TaskTypeTest.class : testDelete testGetTaskTypeList 	taskTypes Ljava/util/List; result 	preInsert &()Lru/sbrf/uvz/model/process/TaskType; doInsert '(Lru/sbrf/uvz/model/process/TaskType;)V afterInsert anotherTaskType 	preUpdate doUpdate afterUpdate another 	preDelete doDelete afterDelete preGetTaskTypeList ()Ljava/util/List; it Ljava/util/Iterator; i I oldTaskTypes size 
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\main\java\ru\sbrf\uvz\app\config\CustomizedRSQLFilterDialect.java : 	// add rsql isnull op to the default ops
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\main\java\ru\sbrf\uvz\app\config\CustomizedRSQLFilterDialect.java : 		 * Extract the last collection in the URL.
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\main\java\ru\sbrf\uvz\app\config\CustomizedRSQLFilterDialect.java : 		 * TODO - create a visitor which extracts the type/class of the last path
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\main\java\ru\sbrf\uvz\app\config\CustomizedRSQLFilterDialect.java : 			// Coerce arguments to their correct types
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\model\agregator\custom\TestSaveOrganizationFromElide.java : 				.accept(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION).body(request).patch(/* ENTITY_NAME */).then()
20 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\AbstractApiResourceInitializer.java :  * Licensed under the Apache License, Version 2.0
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\AbstractIntegrationTestInitializer.java :  * Licensed under the Apache License, Version 2.0
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\AbstractIntegrationTestInitializer.java : 		return RestAssured.given().contentType(JSONAPI_CONTENT_TYPE).accept(JSONAPI_CONTENT_TYPE).get(request).then()
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\AbstractIntegrationTestInitializer.java : 				.accept(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION).body(request).patch().then()
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\AbstractIntegrationTestInitializer.java : 	 * @param  resourceName name of the desired resource
25 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\AbstractIntegrationTestInitializer.java : 	 * @param  resourceName name of the desired resource
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\JsonParser.java :  * Licensed under the Apache License, Version 2.0
19 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\src\test\java\ru\sbrf\uvz\web\test\server\config\JsonParser.java :      * @param  fileName name of the desired resource
22 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\target\test-classes\ru\sbrf\uvz\model\agregator\custom\TestSaveOrganizationFromElide.class : jsonParser /Lru/sbrf/uvz/web/test/server/config/JsonParser; -ru/sbrf/uvz/web/test/server/config/JsonParser getJson &(Ljava/lang/String;)Ljava/lang/String; "com/jayway/restassured/RestAssured given =()Lcom/jayway/restassured/specification/RequestSpecification; 9com/jayway/restassured/specification/RequestSpecification contentType O(Ljava/lang/String;)Lcom/jayway/restassured/specification/RequestSpecification; accept body patch 3()Lcom/jayway/restassured/response/ResponseOptions; then >()Lcom/jayway/restassured/response/ValidatableResponseOptions; 
17 C:\Users\sbekmambetov\Documents\DataPump\ElideModel_020818\dm-elide\elide-web\target\test-classes\ru\sbrf\uvz\web\test\server\config\AbstractIntegrationTestInitializer.class :  " accept (Lcom/fasterxml/jackson/databind/node/ObjectNode;Lcom/fasterxml/jackson/databind/node/ObjectNode;)Ljava/util/function/Consumer; java/util/stream/Stream forEach  (Ljava/util/function/Consumer;)V "com/jayway/restassured/RestAssured given =()Lcom/jayway/restassured/specification/RequestSpecification; 9com/jayway/restassured/specification/RequestSpecification contentType O(Ljava/lang/String;)Lcom/jayway/restassured/specification/RequestSpecification; X(Ljava/lang/String;[Ljava/lang/Object;)Lcom/jayway/restassured/response/ResponseOptions; then >()Lcom/jayway/restassured/response/ValidatableResponseOptions; 
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\main-case-runner\src\main\java\ru\sbrf\uvz\app\graph\Graph.java : 	 * @return Node The Node with the specified label
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\main-case-runner\src\main\java\ru\sbrf\uvz\app\graph\Graph.java : 	 * This method adds a Node to the graph. *
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\main-case-runner\src\main\java\ru\sbrf\uvz\app\graph\Graph.java : 	 * @return true if Node was added to the Graph
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\main-case-runner\src\main\java\ru\sbrf\uvz\app\graph\Graph.java : 	 * @return Set<String> The unique labels of the Graph's Node objects
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\model-service\src\test\java\ru\sbrf\uvz\app\service\impl\ReferenceServiceTest.java : 				.thenReturn(mock(ReferenceCrAgrStatus.class));
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\model-service\src\test\java\ru\sbrf\uvz\app\service\impl\ReferenceServiceTest.java : 				.thenReturn(mock(ReferenceCrAgrStatus.class));
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\model-service\src\test\java\ru\sbrf\uvz\app\service\impl\ReferenceServiceTest.java : 				.thenReturn(mock(ReferenceLendingModeType.class));
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\model-service\src\test\java\ru\sbrf\uvz\app\service\impl\ReferenceServiceTest.java : 				.thenReturn(mock(ReferenceCurrency.class));
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\model-service\target\test-classes\ru\sbrf\uvz\app\service\impl\ReferenceServiceTest.class : thenReturn getSingleReferenceByCode any ()Ljava/lang/Object; Hru/sbrf/uvz/app/dao/reference/containerBased/IReferenceContainerBasedDao  getSingleContainerBasedReference �(Ljava/lang/String;Lru/sbrf/uvz/app/dao/reference/containerBased/ContainerReferenceNameSpace;Lru/sbrf/uvz/app/dao/reference/containerBased/ContainerReferenceClass;)Lru/sbrf/uvz/model/core/AbstractReference; resolveCrAgrStatusByIdDrpa F(Ljava/lang/String;)Lru/sbrf/uvz/model/agregator/ReferenceCrAgrStatus; org/junit/Assert 
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\main\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\Calculate.java : 			debugInfo ("Resulting sum is " + sum.toString() + ". Adding to the group...");
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\main\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\Calculate.java : 		debugInfo("No status found for the credit agreement!");
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\main\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\Calculate.java : 			debugInfo("Searching debts in the credit agreement...");
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\FindTest.java :         when(organizationService.findOrganizationByDrpaId(any())).thenReturn(mock(Organization.class));
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (oldCreditDebt.getCalculationDate()).thenReturn(yesterday);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (newCreditDebt.getCalculationDate()).thenReturn(today);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (newCreditDebt.getIndex30()).thenReturn (one);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (newCreditDebt.getId()).thenReturn(1L);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (redZone.getCode()).thenReturn("Red Zone");
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (goodStatus.getCode()).thenReturn("WORK");
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (badStatus.getCode()).thenReturn("WAIT_CONF");
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (goodCredit.getDebt()).thenReturn(debtList);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (goodCredit.getCrAgrStatus()).thenReturn(goodStatus);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (goodCredit.getId()).thenReturn(1L);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (badCredit.getCrAgrStatus()).thenReturn(badStatus);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (badCredit.getId()).thenReturn(-1L);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (organization.getClientInfo()).thenReturn(client);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		ReferenceProblemGroup otherZone = mock (ReferenceProblemGroup.class);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (otherZone.getCode()).thenReturn("Green Zone");
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (mockClient.getApprovedProblemGroup()).thenReturn(otherZone);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (org1.getClientInfo()).thenReturn(client);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (org1.getRelatedBorrowersGroup()).thenReturn(Arrays.asList(grp));
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\CalculateTest.java : 		when (org2.getClientInfo()).thenReturn(mockClient);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\actions\MergeTest.java :         when(organizationFromDB.getClientInfo()).thenReturn(client);
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\client\ConverterToClientBMTest.java :         when(converterToCreditAgreementBM.convert(any())).thenReturn(creditAgreement);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\ConverterToCreditAgreementBMTest.java :         when(converterToReserveBM.convert(any())).thenReturn(reserve);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\ConverterToCreditAgreementBMTest.java :         when(converterToCreditDebtBM.convert(any())).thenReturn(creditDebt);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\ConverterToCreditAgreementBMTest.java :         when(converterToAccount91315.convert(any())).thenReturn(account_91315);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\ConverterToCreditAgreementBMTest.java :         when(converterToIssuedForCaseBM.convert(any())).thenReturn(issued_for_case);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\ConverterToCreditAgreementBMTest.java :         when(converterToLimitBM.convert(any())).thenReturn(limit);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\PopulateCreditAgreementReferencesTest.java :         when(referenceService.resolveMISProduct(any())).thenReturn(rMISProduct);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\PopulateCreditAgreementReferencesTest.java :         when(referenceService.resolveCreditGrantingRegulation(any(), any(), any())).thenReturn(rCGR);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\PopulateCreditAgreementReferencesTest.java :         when(referenceService.resolveLoanQualityCategoryByDrpaCode(any())).thenReturn(rLQC);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\PopulateCreditAgreementReferencesTest.java :         when(referenceService.resolveDebtServicingQuality(any(), any(), any())).thenReturn(rDSQ);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\PopulateCreditAgreementReferencesTest.java :         when(referenceService.resolveReferenceBankStructure(any())).thenReturn(rBS);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\bm\creditAgr\PopulateCreditAgreementReferencesTest.java :         when(agrCred.isNotAgrCreType1006()).thenReturn(true);
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\converter\ConverterToBMTest.java :         when(converterToClientBM.convert(any())).thenReturn(client);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\ModelConsumerTest.java :         when(converterCSVRecordToAgrCredFileModel.convert(any())).thenReturn(agrCred);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\ModelConsumerTest.java :         when(intModelValidator.isValid(any())).thenReturn(true);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\ModelConsumerTest.java :         when(converterAgrCredFileModelToOrganization.convert(any())).thenReturn(organization);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrCredFile\ProcessBMTest.java :         when(find.findOrganization(organization)).thenReturn(organizationFromDB);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\actions\FindTest.java :         //when (agreementDao.findByPartySourceSystemID(PartySourceSystemIds.DRPA, ANY_STRING)).thenReturn(Arrays.asList(agreementFromDb));
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\actions\FindTest.java :         //when (provisionOfCreditAgreementDao.get(null, null)).thenReturn(Arrays.asList(linkFromDb));
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\converter\ConverterToBMTest.java :         when (finder.findCreditAgreementByDrpaId(null)).thenReturn(null);
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\converter\ConverterToBMTest.java :         when (finder.findProvisionAgreementByDrpaId(null)).thenReturn(null);
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\converter\ConverterToBMTest.java :     	when (intRecord.getCollateralId()).thenReturn(null);
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\converter\ConverterToBMTest.java :     	when (intRecord.getCreditId()).thenReturn(null);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\ProcessBMTest.java :         when (link.getX_creditAgreement()).thenReturn(creditAgreement);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\ProcessBMTest.java :         when (link.getX_provisionAgreement()).thenReturn(provisionAgreement);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrLinkFile\ProcessBMTest.java :         when(find.getProvisionOfCreditAgreement(creditAgreement, provisionAgreement)).thenReturn(null);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrProvis\actions\FindTest.java :         when(organizationService.findOrganizationByDrpaId(any())).thenReturn(mock(Organization.class));
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrProvis\converter\ConverterToBMTest.java :         when(referenceService.resolveCurrencyReference(any(), any(), any())).thenReturn(referenceCurrency);
12 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrProvis\converter\ConverterToBMTest.java :         when(referenceService.resolveReferencePledgeType(any(), any(), any())).thenReturn(referencePledgeType);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrProvis\ModelConsumerTest.java :         when(converterCSVRecordToAgrProvisFileModel.convert(any())).thenReturn(agrProvis);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrProvis\ModelConsumerTest.java :         when(intModelValidator.isValid(any())).thenReturn(true);
19 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrProvis\ModelConsumerTest.java :         when(converterAgrProvisFileModelToOrganization.convert(any())).thenReturn(organization);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\agrProvis\ProcessBMTest.java :         when(find.findOrganization(any())).thenReturn(organization);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\CreateTest.java :         when(((BusinessPersonEntity) organization).getX_person()).thenReturn(person);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\CreateTest.java :         when(((BusinessPersonEntity) organization).getX_person()).thenReturn(person);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\FindTest.java :         when(organizationService.findOrganizationByDrpaId(any())).thenReturn(mock(Organization.class));
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\FindTest.java :         when(organizationService.findOrganizationByDrpaId(any())).thenReturn(null);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\FindTest.java :         when(organizationService.findOrganizationByInn(any())).thenReturn(mock(Organization.class));
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\FindTest.java :         when(organizationService.findOrganizationByDrpaId(any())).thenReturn(null);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\FindTest.java :         when(organizationService.findOrganizationByInn(any())).thenReturn(null);
28 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\FindTest.java :         when(organizationService.findOrganizationByOgrn(any())).thenReturn(mock(Organization.class));
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\actions\ResolveReferenceTest.java :         when(refIdentificationDocumentKindDao.getSingleReferenceByCode(anyString())).thenReturn(mock(RefIdentificationDocumentKind.class));
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\converter\ConvertToBMTest.java :         when(custFileLegalEntityMock.getOrganizationType()).thenReturn(OrganizationType.LEGAL_ENTITY);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\converter\ConvertToBMTest.java :         when(custFileBusinessPersonMock.getOrganizationType()).thenReturn(OrganizationType.BUSINESS_PERSON_ENTITY);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\ProcessBMTest.java :         when(find.findOrganization(organization)).thenReturn(null);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-drpa\src\test\java\ru\sbrf\uvz\app\caseservice\drpa\caseType\single\subCaseType\custFile\ProcessBMTest.java :         when(find.findOrganization(organization)).thenReturn(mock(Organization.class));
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\converter\ConverterToBMTest.java :         when(validator.isValid(any())).thenReturn(true);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\converter\ConverterToBMTest.java :         when(converterKommersantFIntModelVestnicMessageRowToCommersantEvent.convert(any())).thenReturn(ce);
23 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\ModelConsumerTest.java :         when(validator.isValid(any())).thenReturn(true);
17 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\ProcessBMTest.java :         when(validator.isValid(any())).thenReturn(true);
17 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\ProcessBMTest.java :         when(converterKommersantFIntModelChildrenToCommersantEvent.convert(any())).thenReturn(commersantEvents);
17 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\ProcessBMTest.java :         when(organizationService.findOrganizationByIntegrumId(anyString())).thenReturn(organization);
17 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\ProcessBMTest.java :         when(organizationService.findOrganizationByInn(anyString())).thenReturn(organization);
17 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\ProcessBMTest.java :         when(organizationService.findOrganizationByOgrn(anyString())).thenReturn(organization);
22 C:\Users\sbekmambetov\Documents\DataPump\TestDataPumpV2SRB\uvz-data-pump-v2\subcases\subcase-kommersant\src\test\java\ru\sbrf\uvz\app\caseservice\kommersant\single\kommersantF\SubCaseProcessingServiceTest.java :         when(xmlParserService.parse(anyString())).thenReturn(kommersantOrganization);
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\DirSize.java :  * Licensed under the Apache License, Version 2.0 (the "License");
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\DirSize.java :  * you may not use this file except in compliance with the License.
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\DirSize.java :  * You may obtain a copy of the License at
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\DirSize.java :  * distributed under the License is distributed on an "AS IS" BASIS,
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\DirSize.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\DirSize.java :  * See the License for the specific language governing permissions and
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\DirSize.java :  * limitations under the License.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example2.java :  * Licensed under the Apache License, Version 2.0 (the "License");
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example2.java :  * you may not use this file except in compliance with the License.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example2.java :  * You may obtain a copy of the License at
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example2.java :  * distributed under the License is distributed on an "AS IS" BASIS,
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example2.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example2.java :  * See the License for the specific language governing permissions and
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example2.java :  * limitations under the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example1.java :  * Licensed under the Apache License, Version 2.0 (the "License");
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example1.java :  * you may not use this file except in compliance with the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example1.java :  * You may obtain a copy of the License at
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example1.java :  * distributed under the License is distributed on an "AS IS" BASIS,
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example1.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example1.java :  * See the License for the specific language governing permissions and
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part1\Example1.java :  * limitations under the License.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\Example3.java :  * Licensed under the Apache License, Version 2.0 (the "License");
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\Example3.java :  * you may not use this file except in compliance with the License.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\Example3.java :  * You may obtain a copy of the License at
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\Example3.java :  * distributed under the License is distributed on an "AS IS" BASIS,
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\Example3.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\Example3.java :  * See the License for the specific language governing permissions and
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\Example3.java :  * limitations under the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\DirSize.java :  * Licensed under the Apache License, Version 2.0 (the "License");
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\DirSize.java :  * you may not use this file except in compliance with the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\DirSize.java :  * You may obtain a copy of the License at
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\DirSize.java :  * distributed under the License is distributed on an "AS IS" BASIS,
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\DirSize.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\DirSize.java :  * See the License for the specific language governing permissions and
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part2\DirSize.java :  * limitations under the License.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\Example4.java :  * Licensed under the Apache License, Version 2.0 (the "License");
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\Example4.java :  * you may not use this file except in compliance with the License.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\Example4.java :  * You may obtain a copy of the License at
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\Example4.java :  * distributed under the License is distributed on an "AS IS" BASIS,
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\Example4.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\Example4.java :  * See the License for the specific language governing permissions and
23 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\Example4.java :  * limitations under the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :  * Licensed under the Apache License, Version 2.0 (the "License");
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :  * you may not use this file except in compliance with the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :  * You may obtain a copy of the License at
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :  * distributed under the License is distributed on an "AS IS" BASIS,
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :  * See the License for the specific language governing permissions and
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :  * limitations under the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part3\DirSize.java :       throw new RuntimeException("Failed to calculate the dir size", e);
12 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\DirSize.java :  * Licensed under the Apache License, Version 2.0 (the "License");
12 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\DirSize.java :  * you may not use this file except in compliance with the License.
12 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\DirSize.java :  * You may obtain a copy of the License at
12 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\DirSize.java :  * distributed under the License is distributed on an "AS IS" BASIS,
12 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\DirSize.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
12 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\DirSize.java :  * See the License for the specific language governing permissions and
12 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\DirSize.java :  * limitations under the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\Example5.java :  * Licensed under the Apache License, Version 2.0 (the "License");
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\Example5.java :  * you may not use this file except in compliance with the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\Example5.java :  * You may obtain a copy of the License at
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\Example5.java :  * distributed under the License is distributed on an "AS IS" BASIS,
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\Example5.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\Example5.java :  * See the License for the specific language governing permissions and
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\part4\Example5.java :  * limitations under the License.
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\Results.java :  * Licensed under the Apache License, Version 2.0 (the "License");
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\Results.java :  * you may not use this file except in compliance with the License.
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\Results.java :  * You may obtain a copy of the License at
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\Results.java :  * distributed under the License is distributed on an "AS IS" BASIS,
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\Results.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\Results.java :  * See the License for the specific language governing permissions and
17 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\Results.java :  * limitations under the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\FilePath.java :  * Licensed under the Apache License, Version 2.0 (the "License");
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\FilePath.java :  * you may not use this file except in compliance with the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\FilePath.java :  * You may obtain a copy of the License at
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\FilePath.java :  * distributed under the License is distributed on an "AS IS" BASIS,
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\FilePath.java :  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\FilePath.java :  * See the License for the specific language governing permissions and
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\src\main\java\com\javacreed\examples\concurrency\utils\FilePath.java :  * limitations under the License.
22 C:\Users\sbekmambetov\Documents\SampleProject\java-fork-join-example\target\classes\com\javacreed\examples\concurrency\part3\DirSize.class : SourceFile DirSize.java   X Y Z [ \ !Creating executor with {} threads ] ^ _ ` a b c d e Ccom/javacreed/examples/concurrency/part3/DirSize$SizeOfFileCallable / f V g h i j k java/lang/Long l m n 0 java/lang/Exception java/lang/RuntimeException  Failed to calculate the dir size / o / 0 0com/javacreed/examples/concurrency/part3/DirSize p q r java/lang/Object java/io/File $java/util/concurrent/ExecutorService java/lang/Throwable java/lang/Runtime 
19 C:\Users\sbekmambetov\Documents\the\1.txt : thes
19 C:\Users\sbekmambetov\Documents\the\1.txt : the
17 C:\Users\sbekmambetov\Documents\the\3.txt : thes
12 C:\Users\sbekmambetov\Documents\the\the\the.txt : thefreff
12 C:\Users\sbekmambetov\Documents\the\the\the.txt : the
12 C:\Users\sbekmambetov\Documents\the\the\the.txt : the
17 C:\Users\sbekmambetov\Documents\The.txt : the
1150